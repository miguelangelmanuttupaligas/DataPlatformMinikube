---
apiVersion: v1
kind: Namespace
metadata:
  name: data-services
---
# Persistent Volumes and Claims for MinIO, PostgreSQL, SQL Server
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-minio-pvc
  namespace: data-services
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-postgres-pvc
  namespace: data-services
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-sqlserver-pvc
  namespace: data-services
spec:
  accessModes:
    - ReadWriteOnce
  resources:
      requests:
        storage: 10Gi
---
# MinIO Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: data-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio
          args: ["server", "--console-address", ":9001", "/data"]
          env:
            - name: MINIO_ROOT_USER
              value: minioadmin
            - name: MINIO_ROOT_PASSWORD
              value: minioadmin
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - mountPath: /data
              name: minio-storage
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: data-minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: data-services
spec:
  selector:
    app: minio
  ports:
    - port: 9000
      targetPort: 9000
      name: api
    - port: 9001
      targetPort: 9001
      name: console
---
# CreateBuckets Job
apiVersion: batch/v1
kind: Job
metadata:
  name: createbuckets
  namespace: data-services
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: createbuckets
          image: quay.io/minio/mc
          command: ["/bin/sh", "-c"]
          args:
            - >
              sleep 5;
              /usr/bin/mc alias set dockerminio http://minio:9000 minioadmin minioadmin;
              /usr/bin/mc mb dockerminio/warehouse;
              exit 0;
---
# PostgreSQL Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresdb
  namespace: data-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        app: postgresdb
    spec:
      containers:
        - name: postgres
          image: postgres:16
          env:
            - name: POSTGRES_USER
              value: hive
            - name: POSTGRES_PASSWORD
              value: hive
            - name: POSTGRES_DB
              value: metastore
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: data-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresdb
  namespace: data-services
spec:
  selector:
    app: postgresdb
  ports:
    - port: 5432
      targetPort: 5432
---
# Hive Metastore Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hive-metastore
  namespace: data-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hive-metastore
  template:
    metadata:
      labels:
        app: hive-metastore
    spec:
      containers:
        - name: hive-metastore
          image: starburstdata/hive:3.1.3-e.14
          ports:
            - containerPort: 9083
          env:
            - name: HIVE_METASTORE_DRIVER
              value: org.postgresql.Driver
            - name: HIVE_METASTORE_JDBC_URL
              value: jdbc:postgresql://postgresdb:5432/metastore
            - name: HIVE_METASTORE_USER
              value: hive
            - name: HIVE_METASTORE_PASSWORD
              value: hive
            - name: HIVE_METASTORE_WAREHOUSE_DIR
              value: s3a://warehouse/
            - name: S3_ENDPOINT
              value: http://minio:9000
            - name: S3_ACCESS_KEY
              value: minioadmin
            - name: S3_SECRET_KEY
              value: minioadmin
            - name: S3_PATH_STYLE_ACCESS
              value: "true"
            - name: REGION
              value: ""
            - name: HIVE_METASTORE_USERS_IN_ADMIN_ROLE
              value: admin
            - name: GOOGLE_CLOUD_KEY_FILE_PATH
              value: ""
            - name: AZURE_ADL_CLIENT_ID
              value: ""
            - name: AZURE_ADL_CREDENTIAL
              value: ""
            - name: AZURE_ADL_REFRESH_URL
              value: ""
            - name: AZURE_ABFS_STORAGE_ACCOUNT
              value: ""
            - name: AZURE_ABFS_ACCESS_KEY
              value: ""
            - name: AZURE_WASB_STORAGE_ACCOUNT
              value: ""
            - name: AZURE_ABFS_OAUTH
              value: ""
            - name: AZURE_ABFS_OAUTH_TOKEN_PROVIDER
              value: ""
            - name: AZURE_ABFS_OAUTH_CLIENT_ID
              value: ""
            - name: AZURE_ABFS_OAUTH_SECRET
              value: ""
            - name: AZURE_ABFS_OAUTH_ENDPOINT
              value: ""
            - name: AZURE_WASB_ACCESS_KEY
              value: ""

---
apiVersion: v1
kind: Service
metadata:
  name: hive-metastore
  namespace: data-services
spec:
  selector:
    app: hive-metastore
  ports:
    - port: 9083
      targetPort: 9083
