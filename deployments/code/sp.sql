--1-----------------[dbo].[SP_KPY_DABOGADOJUD_STG]--------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DABOGADOJUD_STG]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- 34_STG_DABOGADOJUD
TRUNCATE TABLE STG_DABOGADOJUD

INSERT INTO STG_DABOGADOJUD
SELECT
    cCodPerJud AS CODABOGADOJUD,
    CASE 
        WHEN cNomPerJud = '' OR cNomPerJud IS NULL THEN '.'
        ELSE REPLACE(TRIM(cNomPerJud), ',', ' ')
    END NOMABOGADOJUD,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFMACHAYO_BI_SNAP.DBO.KJUDPPerJudici
WHERE (cCodTipPer = 'ABO')

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

--------------------------------------------------------------------------


--2--------[dbo].[SP_KPY_DACTIVIDADECONOMICA_BDS]-------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DACTIVIDADECONOMICA_BDS]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- DESACTIVA ANTIGUOS
MERGE BDS_BIACMACHYO.DBO.DACTIVIDADECONOMICA AS TARGET
USING (
    SELECT 
        A.CCODCIIU CODACTIVIDADECONOMICA,
        A.CDESACTIVI DESACTIVIDADECONOMICA,
        ISNULL(B.PKSECTORECONOMICO, 0) PKSECTORECONOMICO
    FROM STG_DACTIVIDADECONOMICA A
    LEFT JOIN BDS_BIACMACHYO.DBO.DSECTORECONOMICO B
        ON A.CCODCATEGO = B.CODSECTORECONOMICO
        AND B.FLAGACTIVO = 1
) AS SOURCE
ON TARGET.CODACTIVIDADECONOMICA = SOURCE.CODACTIVIDADECONOMICA
AND TARGET.FLAGACTIVO = 1

WHEN MATCHED
    AND (
        TARGET.DESACTIVIDADECONOMICA <> SOURCE.DESACTIVIDADECONOMICA
        OR TARGET.PKSECTORECONOMICO <> SOURCE.PKSECTORECONOMICO
    )
THEN UPDATE
    SET TARGET.FLAGACTIVO = 0

WHEN NOT MATCHED BY SOURCE
    AND TARGET.PKACTIVIDADECONOMICA != 0
THEN UPDATE
    SET TARGET.FLAGACTIVO = 0

-- INSERTA NUEVOS
MERGE BDS_BIACMACHYO.DBO.DACTIVIDADECONOMICA AS TARGET
USING (
    SELECT 
        A.CCODCIIU CODACTIVIDADECONOMICA,
        A.CDESACTIVI DESACTIVIDADECONOMICA,
        ISNULL(B.PKSECTORECONOMICO, 0) PKSECTORECONOMICO
    FROM STG_DACTIVIDADECONOMICA A
    LEFT JOIN BDS_BIACMACHYO.DBO.DSECTORECONOMICO B
        ON A.CCODCATEGO = B.CODSECTORECONOMICO
        AND B.FLAGACTIVO = 1
) AS SOURCE
ON TARGET.CODACTIVIDADECONOMICA = SOURCE.CODACTIVIDADECONOMICA
AND TARGET.FLAGACTIVO = 1

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODACTIVIDADECONOMICA,
    DESACTIVIDADECONOMICA,
    PKSECTORECONOMICO,
    FECULTACTUALIZACION,
    FLAGACTIVO
)
VALUES (
    SOURCE.CODACTIVIDADECONOMICA,
    SOURCE.DESACTIVIDADECONOMICA,
    SOURCE.PKSECTORECONOMICO,
    GETDATE(),
    1
)

-- ACTUALIZA LOG FIN
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-----------------------------------------------------------------------


--3--------------[dbo].[SP_KPY_DACTIVIDADECONOMICA_BDS]----------------

CREATE PROCEDURE [dbo].[SP_KPY_DACTIVIDADECONOMICA_BDS]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- DESACTIVA ANTIGUOS
MERGE BDS_BIACMACHYO.DBO.DACTIVIDADECONOMICA AS TARGET
USING (
    SELECT A.CCODCITIU CODACTIVIDADECONOMICA,
           A.CDESACTIVI DESACTIVIDADECONOMICA,
           ISNULL(B.PKSECTORECONOMICO, 0) PKSECTORECONOMICO
    FROM STG_DACTIVIDADECONOMICA A
    LEFT JOIN BDS_BIACMACHYO.DBO.DSECTORECONOMICO B 
           ON A.CCODCATEGO = B.CODSECTORECONOMICO 
          AND B.FLAGACTIVO = 1
) AS SOURCE
ON TARGET.CODACTIVIDADECONOMICA = SOURCE.CODACTIVIDADECONOMICA
   AND TARGET.FLAGACTIVO = 1
WHEN MATCHED 
     AND (TARGET.DESACTIVIDADECONOMICA <> SOURCE.DESACTIVIDADECONOMICA 
     OR TARGET.PKSECTORECONOMICO <> SOURCE.PKSECTORECONOMICO)
     THEN UPDATE SET TARGET.FLAGACTIVO = 0
WHEN NOT MATCHED BY SOURCE 
     AND TARGET.PKACTIVIDADECONOMICA != 0
     THEN UPDATE SET TARGET.FLAGACTIVO = 0;

-- INSERTA NUEVOS
MERGE BDS_BIACMACHYO.DBO.DACTIVIDADECONOMICA AS TARGET
USING (
    SELECT A.CCODCITIU CODACTIVIDADECONOMICA,
           A.CDESACTIVI DESACTIVIDADECONOMICA,
           ISNULL(B.PKSECTORECONOMICO, 0) PKSECTORECONOMICO
    FROM STG_DACTIVIDADECONOMICA A
    LEFT JOIN BDS_BIACMACHYO.DBO.DSECTORECONOMICO B 
           ON A.CCODCATEGO = B.CODSECTORECONOMICO 
          AND B.FLAGACTIVO = 1
) AS SOURCE
ON TARGET.CODACTIVIDADECONOMICA = SOURCE.CODACTIVIDADECONOMICA
   AND TARGET.FLAGACTIVO = 1
WHEN NOT MATCHED BY TARGET
     THEN INSERT (
        CODACTIVIDADECONOMICA,
        DESACTIVIDADECONOMICA,
        PKSECTORECONOMICO,
        FECULTACTUALIZACION,
        FLAGACTIVO
     )
     VALUES (
        SOURCE.CODACTIVIDADECONOMICA,
        SOURCE.DESACTIVIDADECONOMICA,
        SOURCE.PKSECTORECONOMICO,
        GETDATE(),
        1
     );

-- ACTUALIZA LOG CON EL FIN DE EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

----------------------------------------------------------------------------------




--4---------------------[dbo].[SP_KPY_DACTIVIDADECONOMICA_STG]----------------------
CREATE PROCEDURE [dbo].[SP_KPY_DACTIVIDADECONOMICA_STG]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- 38_STG_DACTIVIDADECONOMICA
TRUNCATE TABLE STG_DACTIVIDADECONOMICA

INSERT INTO STG_DACTIVIDADECONOMICA
SELECT CCODCITIU,
       CASE 
           WHEN CDESACTIVI = '' OR CDESACTIVI IS NULL THEN '.'
           ELSE REPLACE(REPLACE(TRIM(CDESACTIVI), '  ', ' '), ';', ',') 
       END CDESACTIVI,
       CCODCATEGO,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GENTCodCiiu

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

------------------------------------------------------------------------------


--5------------------[dbo].[SP_KPY_DADEUDADO_BDS]------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DADEUDADO_BDS]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- 01_BDS_DADEUDADO
MERGE BDS_BIACMACHYO.DBO.DADEUDADO AS TARGET
USING STG_DADEUDADO AS SOURCE
ON TARGET.CODADEUDADO = SOURCE.CCODCORADE

WHEN MATCHED 
    AND (TARGET.DESADEUDADO <> SOURCE.CDESADEUDA)
    THEN UPDATE
        SET TARGET.DESADEUDADO = SOURCE.CDESADEUDA,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET 
    THEN INSERT (
        CODADEUDADO,
        DESADEUDADO,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.CCODCORADE,
        SOURCE.CDESADEUDA,
        GETDATE()
    );

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-----------------------------------------------------------------



--6-------------[dbo].[SP_KPY_DADEUDADO_STG]----------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DADEUDADO_STG]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- 01_STG_DADEUDADO
TRUNCATE TABLE STG_DADEUDADO

INSERT INTO STG_DADEUDADO
SELECT 
    CCODCORADE,
    CASE 
        WHEN CDESADEUDA = '' OR CDESADEUDA IS NULL THEN '.'
        ELSE REPLACE(TRIM(CDESADEUDA), ' ', '') 
    END CDESADEUDA,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYMADEUDADOS

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
--------------------------------------------------------------------------



--7-------------[dbo].[SP_KPY_DADMINISTRADOR_BDS]------------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DADMINISTRADOR_BDS]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================

INSERT INTO CONTROL_EJECUCION_MALLA_DS 
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES 
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 33_BDS_DADMINISTRADOR
--===========================================================

MERGE BDS_BIACMACHYO.DBO.DADMINISTRADOR AS TARGET
USING STG_DADMINISTRADOR AS SOURCE
ON TARGET.CODADMINISTRADOR = SOURCE.cCodPerson

WHEN MATCHED
    AND ( TARGET.NOMADMINISTRADOR <> SOURCE.cNomPerson )
    THEN UPDATE 
        SET TARGET.NOMADMINISTRADOR = SOURCE.cNomPerson,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODADMINISTRADOR,
        NOMADMINISTRADOR,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.cCodPerson,
        SOURCE.cNomPerson,
        GETDATE()
    );

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

---------------------------------------------------------------



--8----------------------[dbo].[SP_KPY_DADMINISTRADOR_STG]-----------------
CREATE PROCEDURE [dbo].[SP_KPY_DADMINISTRADOR_STG]
AS
SET NOCOUNT ON
BEGIN

--========================================
-- INSERTA LOG CON EL INICIO EJECUCION
--========================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--========================================
-- 33_STG_DADMINISTRADOR
--========================================
TRUNCATE TABLE STG_DADMINISTRADOR

INSERT INTO STG_DADMINISTRADOR
SELECT A.cCodPerson,
       A.cNomPerson,
       A.DFECFINROT,
       A.cCodOficin,
       A.FECULTACTUALIZACION
FROM (
    SELECT A.CCODPERSON,
           RTRIM(A.CNOMPERSON) CNOMPERSON,
           A.CCODOFICIN,
           ISNULL(D.DFINASCROT, '20800101') DFECFINROT,
           GETDATE() AS FECULTACTUALIZACION,
           ROW_NUMBER() OVER (PARTITION BY A.CCODOFICIN ORDER BY D.DINIASCROT) NORDEN
    FROM SOFCMACHYO_BI_SNAP.DBO.SIMMPersonal A
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPTCargoPer B
        ON A.CCodGruPer = B.CCodGruPer
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPDAscRotPer D
        ON A.CCodPerson = D.CCodPerson
    WHERE A.CCodGruPer = 'ADM'
      AND A.CCodEstPer = 'A'
      AND A.lVigAscRot = 1
      AND A.lActAscRot = 1
) A
WHERE A.NORDEN = 1

--========================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--========================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-------------------------------------------------------------

--9----------------------[dbo].[SP_KPY_DAGENCIA_BDS]--------------------

CREATE PROCEDURE [dbo].[SP_KPY_DAGENCIA_BDS]
AS
SET NOCOUNT ON
BEGIN

--============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--============================================================
-- DESACTIVA ANTIGUOS
--============================================================
MERGE BDS_BIACMACHYO.DBO.DAGENCIA AS TARGET
USING STG_DAGENCIA AS SOURCE
ON TARGET.CODAGENCIA = SOURCE.CODAGENCIA

WHEN MATCHED AND TARGET.FLAGACTIVO = 1
    AND (
        TARGET.DESAGENCIA <> SOURCE.DESAGENCIA
        OR TARGET.CODZONACOMERCIAL <> SOURCE.CODZONACOMERCIAL
        OR TARGET.DESZONACOMERCIAL <> SOURCE.DESZONACOMERCIAL
        OR TARGET.CODTIPOAGENCIA <> SOURCE.CODTIPOAGENCIA
        OR TARGET.DESTIPOAGENCIA <> SOURCE.DESTIPOAGENCIA
        OR TARGET.PKUBIGEO <> SOURCE.PKUBIGEO
    )
THEN UPDATE
    SET TARGET.FLAGACTIVO = 0,
        TARGET.FECHAFINVIG = GETDATE(),
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY SOURCE AND TARGET.FLAGACTIVO = 1
    AND TARGET.PKAGENCIA != 0
THEN UPDATE
    SET TARGET.FLAGACTIVO = 0,
        TARGET.FECHAFINVIG = GETDATE(),
        TARGET.FECULTACTUALIZACION = GETDATE()

--============================================================
-- INSERTA NUEVOS
--============================================================
MERGE BDS_BIACMACHYO.DBO.DAGENCIA AS TARGET
USING STG_DAGENCIA AS SOURCE
ON TARGET.CODAGENCIA = SOURCE.CODAGENCIA
    AND TARGET.FLAGACTIVO = 1

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODAGENCIA,
    DESAGENCIA,
    CODZONACOMERCIAL,
    DESZONACOMERCIAL,
    LONGITUD,
    LATITUD,
    CODTIPOAGENCIA,
    DESTIPOAGENCIA,
    PKUBIGEO,
    FECHAINICIOVIG,
    FECHAFINVIG,
    FLAGACTIVO,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CODAGENCIA,
    SOURCE.DESAGENCIA,
    SOURCE.CODZONACOMERCIAL,
    SOURCE.DESZONACOMERCIAL,
    SOURCE.LONGITUD,
    SOURCE.LATITUD,
    SOURCE.CODTIPOAGENCIA,
    SOURCE.DESTIPOAGENCIA,
    SOURCE.PKUBIGEO,
    GETDATE(),
    CAST('2099.12.31 23:59:59' AS DATETIME),
    1,
    GETDATE()
);

--============================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--============================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------------------------



--10------------------[dbo].[SP_KPY_DAGENCIA_STG]------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DAGENCIA_STG]
AS
SET NOCOUNT ON
BEGIN

--===============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===============================================================
-- 36_STG_DAGENCIA
--===============================================================
TRUNCATE TABLE STG_GENTZONAS
TRUNCATE TABLE STG_GENTTIPOOFICIN
TRUNCATE TABLE STG_GENTOFIZONAS
TRUNCATE TABLE STG_GENTOFICINAS
TRUNCATE TABLE STG_DAGENCIA

INSERT INTO STG_GENTZONAS
SELECT nCodZona, cDesZona, GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GenTZonas

INSERT INTO STG_GENTTIPOOFICIN
SELECT cTipOficin, cDesTip, GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GentTipOficin

INSERT INTO STG_GENTOFIZONAS
SELECT nCodZona, cCodOficin, GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GenTofizonas
WHERE lEstZonOfi = '1'

INSERT INTO STG_GENTOFICINAS
SELECT cCodOficin, cDesOficin, cCodDepart, cCodProvin, cCodDistri,
    RIGHT('000'+TRIM(cCodZona),3) cCodZona, cTipOficin, GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GentOficinas
WHERE cCodOficin <> 'X'

INSERT INTO STG_DAGENCIA
SELECT X.cCODAGENCIA, X.DESAGENCIA, ISNULL(X.CODZONACOMERCIAL,''),
       X.DESZONACOMERCIAL, X.LONGITUD, X.LATITUD, X.CODTIPOAGENCIA,
       X.DESTIPOAGENCIA, ISNULL(Z.PKUBIGEO,0), X.FECHAINICIOVIG,
       NULL AS FECHAFINVIG, '1' AS FLAGACTIVO, X.CCODDEPART,
       X.CCODPROVIN, X.CCODDISTRI, X.CCODZONA
FROM (
    SELECT A.CCODOFICIN AS CODAGENCIA, A.CDESOFICIN AS DESAGENCIA,
           C.NCODZONA AS CODZONACOMERCIAL, C.cDESZONA AS DESZONACOMERCIAL,
           '.' AS LONGITUD, '.' AS LATITUD, A.CTIPOFICIN AS CODTIPOAGENCIA,
           D.cDESTIP AS DESTIPOAGENCIA, NULL AS FECHAINICIOVIG,
           NULL AS FECHAFINVIG, '1' AS FLAGACTIVO, A.CCODDEPART,
           A.CCODPROVIN, A.CCODDISTRI, A.CCODZONA
    FROM STG_GENTOFICINAS AS A
    LEFT JOIN STG_GENTOFIZONAS AS B ON A.CCODOFICIN = B.CCODOFICIN
    LEFT JOIN STG_GENTZONAS AS C ON B.NCODZONA = C.NCODZONA
    LEFT JOIN STG_GENTTIPOOFICIN AS D ON A.CTIPOFICIN = D.CTIPOFICIN
) X
LEFT JOIN BDS_BIACMACHYO.DBO.DUBIGEO Z
    ON X.CCODDEPART = Z.CCODDEPARTAMENTO
    AND X.CCODPROVIN = Z.CCODPROVINCIA
    AND X.CCODDISTRI = Z.CCODDISTRITO
    AND X.CCODZONA = Z.CCODZONA

--===============================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===============================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------------------



--11------------------[dbo].[SP_KPY_DASESOR_BDS-------------------

CREATE PROCEDURE [dbo].[SP_KPY_DASESOR_BDS]
AS
SET NOCOUNT ON
BEGIN

--=======================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=======================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=======================================================
-- 35_BDS_DASESOR
--=======================================================
MERGE BDS_BIACMACHYO.DBO.DASESOR AS TARGET
USING STG_DASESOR AS SOURCE
ON TARGET.CODASESOR = SOURCE.CODASESOR

WHEN MATCHED
    AND ( TARGET.NOMASESOR <> SOURCE.NOMASESOR )
THEN UPDATE
    SET TARGET.NOMASESOR = SOURCE.NOMASESOR,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODASESOR,
    NOMASESOR,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CODASESOR,
    SOURCE.NOMASESOR,
    GETDATE()
);

--=======================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=======================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------



--12---------[dbo].[SP_KPY_DASESOR_STG]------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DASESOR_STG]
AS
SET NOCOUNT ON
BEGIN

-- ==============================================
-- INSERTA LOG CON EL INICIO EJECUCION
-- ==============================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

-- ==============================================
-- 35_STG_DASESOR
-- ==============================================
TRUNCATE TABLE STG_KPYAMSOLICITUD_DASESOR
TRUNCATE TABLE STG_KPYMRECONVEN_DASESOR
TRUNCATE TABLE STG_SIMMPERSONAL_DASESOR
TRUNCATE TABLE STG_TEMP_DASESOR
TRUNCATE TABLE STG_DASESOR

-- INSERT INTO STG_KPYAMSOLICITUD_DASESOR
INSERT INTO STG_KPYAMSOLICITUD_DASESOR
SELECT cCodUsAna AS CODUSUANA, GETDATE() AS FECULTACTUALIZACION
FROM (
    SELECT cCodUsAna
    FROM SOFCMACHYO_BI_SNAP.DBO.KPYAMSolicitud WITH (NOLOCK)
    GROUP BY cCodUsAna
) A
GROUP BY cCodUsAna

-- INSERT INTO STG_KPYMRECONVEN_DASESOR
INSERT INTO STG_KPYMRECONVEN_DASESOR
SELECT TRIM(cCodUsAna) cCodUsAna,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYMRECONVEN
WHERE cEstCreCon IN ('F', 'H', 'I')
GROUP BY cCodUsAna

-- INSERT INTO STG_SIMMPERSONAL_DASESOR
INSERT INTO STG_SIMMPERSONAL_DASESOR
SELECT TRIM(cCodPerson) cCodPerson,
       REPLACE(TRIM(cNomPerson), ' ', '') cNomPerson,
       TRIM(cCodGruPer) cCodGruPer,
       TRIM(cCodEstPer) cCodEstPer,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.SIMMPersonal
GROUP BY cCodPerson, cNomPerson, cCodGruPer, cCodEstPer

-- INSERT INTO STG_TEMP_DASESOR - Fuente: KPYAMSOLICITUD
INSERT INTO STG_TEMP_DASESOR
SELECT CASE WHEN A.CODUSUANA = '000000' THEN '0' ELSE A.CODUSUANA END AS CODASESOR,
       CASE WHEN B.cNomPerson = '' OR B.cNomPerson IS NULL THEN '.' ELSE B.cNomPerson END AS NOMASESOR,
       'KPYAMSOLICITUD' AS FUENTE,
       GETDATE() AS FECULTACTUALIZACION
FROM STG_KPYAMSOLICITUD_DASESOR AS A
INNER JOIN STG_SIMMPERSONAL_DASESOR AS B ON A.CODUSUANA = B.CODPERSON

-- INSERT INTO STG_TEMP_DASESOR - Fuente: KPYMRECONVEN
INSERT INTO STG_TEMP_DASESOR
SELECT CASE WHEN A.CODUSUANA = '000000' THEN '0' ELSE B.CODPERSON END AS CODASESOR,
       CASE WHEN B.cNomPerson = '' OR B.cNomPerson IS NULL THEN '.' ELSE B.cNomPerson END AS NOMASESOR,
       'KPYMRECONVEN' AS FUENTE,
       GETDATE() AS FECULTACTUALIZACION
FROM STG_KPYMRECONVEN_DASESOR AS A
INNER JOIN STG_SIMMPERSONAL_DASESOR AS B ON A.CODUSUANA = B.CODPERSON

-- INSERT INTO STG_TEMP_DASESOR - Fuente: SIMMPERSONAL
INSERT INTO STG_TEMP_DASESOR
SELECT CODPERSON AS CODASESOR, 
       cNomPerson AS NOMASESOR,
       'SIMMPERSONAL' AS FUENTE,
       GETDATE() AS FECULTACTUALIZACION
FROM STG_SIMMPERSONAL_DASESOR
WHERE cCodGruPer IN ('013','057')

-- INSERT INTO STG_DASESOR
INSERT INTO STG_DASESOR
SELECT CODASESOR,
       CASE WHEN NOMASESOR = '' OR NOMASESOR IS NULL THEN '.' ELSE NOMASESOR END NOMASESOR,
       GETDATE() AS FECULTACTUALIZACION
FROM STG_TEMP_DASESOR
GROUP BY CODASESOR, NOMASESOR

-- ==============================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
-- ==============================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-----------------------------------------------------------------------------------------



--13-------------------[dbo].[SP_KPY_DASESORNIVEL_BDS]-------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DASESORNIVEL_BDS]
AS
SET NOCOUNT ON
BEGIN

--=================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

--=================================================
-- 19_BDS_DASESORNIVEL
--=================================================
MERGE BDS_BIACMACHYO.DBO.DASESORNIVEL AS TARGET
USING STG_DASESORNIVEL AS SOURCE
ON TARGET.CODPAPAPR = SOURCE.NCODPAPAPR
   AND TARGET.CODNIVEL = SOURCE.CCODNIVEL
   AND TARGET.CODSUBNIV = SOURCE.CCODSUBNIV
   AND TARGET.CODCLASUB = SOURCE.CCODCLASUB

WHEN MATCHED
     AND (TARGET.DESCNIVEL <> SOURCE.CDESCLASUB)
THEN UPDATE
    SET TARGET.DESCNIVEL = SOURCE.CDESCLASUB,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODPAPAPR,
    CODNIVEL,
    CODSUBNIVEL,
    CODCLASUB,
    DESCNIVEL,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.NCODPAPAPR,
    SOURCE.CCODNIVEL,
    SOURCE.CCODSUBNIV,
    SOURCE.CCODCLASUB,
    SOURCE.CDESCLASUB,
    GETDATE()
);

--=================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
--------------------------------------------------------------------------

--14-----------[dbo].[SP_KPY_DASESORNIVEL_STG]-------------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DASESORNIVEL_STG]
AS
SET NOCOUNT ON
BEGIN

--=================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

--=================================================
-- 19_STG_DASESORNIVEL
--=================================================
TRUNCATE TABLE STG_DASESORNIVEL;

INSERT INTO STG_DASESORNIVEL
SELECT DISTINCT 
    nCodPAPApr,
    cCodNivel,
    cCodSubNiv,
    cCodClaSub,
    CASE 
        WHEN cDesClaSub = '' OR cDesClaSub IS NULL THEN '.'
        ELSE REPLACE(TRIM(cDesClaSub), ' ', ' ') 
    END AS cDesClaSub,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.SIPTClaSubNiv;

--=================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

----------------------------------------------------------------

--15----------------[dbo].[SP_KPY_DAUXILIARREGIONAL_BDS]---------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DAUXILIARREGIONAL_BDS]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- AUXILIAR DE NEGOCIOS REGIONALES
MERGE BDS_BIACMACHYO.DBO.DAUXILIARREGIONAL AS TARGET
USING STG_DAUXILIARREGIONAL AS SOURCE
ON TARGET.CODAUXILIARREGIONAL = SOURCE.cCodPerson

WHEN MATCHED
    AND (TARGET.NOMAUXILIARREGIONAL <> SOURCE.cNomPerson)
    THEN UPDATE
        SET TARGET.NOMAUXILIARREGIONAL = SOURCE.cNomPerson,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODAUXILIARREGIONAL,
        NOMAUXILIARREGIONAL,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.cCodPerson,
        SOURCE.cNomPerson,
        GETDATE()
    )

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

---------------------------------------------------------------



--16--------[dbo].[SP_KPY_DAUXILIARREGIONAL_STG]--------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DAUXILIARREGIONAL_STG]
AS
SET NOCOUNT ON
BEGIN

--=========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=========================================================
-- AUXILIAR DE NEGOCIOS REGIONALES
--=========================================================
TRUNCATE TABLE STG_DAUXILIARREGIONAL

INSERT INTO STG_DAUXILIARREGIONAL
SELECT
    A.cCodPerson,
    A.cNomPerson,
    A.dFecFinRot,
    A.nCodZona,
    A.FECULTACTUALIZACION
FROM (
    SELECT A.CCODPERSON, RTRIM(A.CNOMPERSON) cNomPerson,
           F.nCodZona, ISNULL(D.DFECINIASCROT, '28000101') dFECFINROT,
           GETDATE() AS FECULTACTUALIZACION,
           ROW_NUMBER() OVER (PARTITION BY A.CCODPERSON ORDER BY D.DFECINIASCROT) NORDEN
    FROM SOFCMACHYO_BI_SNAP.DBO.SIMPPERSONAL A
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTASELBET BB
        ON A.CCODESTABEL = BB.CCODESTABEL
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPMPERSONAL B
        ON A.CCODPERSON = D.CCODPERSON
        AND A.CCODGRUPER = D.CCODGRUPER
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTOFINERS E
        ON BB.CODOFICIN = E.CCODOFICIN
        AND E.LCONESADO = 1
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTOFINERS F
        ON E.CCODOFICIN = F.CCODOFICIN
        AND F.LESTZONOFI = 1
    WHERE A.CCODGRUPER IN ('ANR')
        AND A.CCODESTPER = 'A'
        AND D.LVIGASCROT = 1
        AND D.LACTASCROT = 1
) A
WHERE A.NORDEN = 1

--=========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

----------------------------------------------------------



--17--------------[dbo].[SP_KPY_DCALIFICACIONCREDITICIA_BDS]-----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCALIFICACIONCREDITICIA_BDS]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES 
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 08_BDS_DCALIFICACIONCREDITICIA
--===========================================================
MERGE BDS_BIACMACHYO.DBO.DCALIFICACIONCREDITICIA AS TARGET
USING STG_DCALIFICACIONCREDITICIA AS SOURCE
ON TARGET.CODCALIFICACIONCREDITICIA = SOURCE.cCodClaCar

WHEN MATCHED
    AND (TARGET.DESCALIFICACIONCREDITICIA <> SOURCE.cDesClaCar)
THEN UPDATE
    SET TARGET.DESCALIFICACIONCREDITICIA = SOURCE.cDesClaCar,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODCALIFICACIONCREDITICIA,
    DESCALIFICACIONCREDITICIA,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.cCodClaCar,
    SOURCE.cDesClaCar,
    GETDATE()
);

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------



--18-----------------------[dbo].[SP_KPY_DCALIFICACIONCREDITICIA_STG]------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCALIFICACIONCREDITICIA_STG]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES 
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 08_STG_DCALIFICACIONCREDITICIA
--===========================================================
TRUNCATE TABLE STG_DCALIFICACIONCREDITICIA

INSERT INTO STG_DCALIFICACIONCREDITICIA
SELECT 
    cCodClaCar,
    CASE 
        WHEN cDESCLACAR = '' OR cDESCLACAR IS NULL THEN '.'
        ELSE REPLACE(TRIM(cDESCLACAR), ' ', ' ') 
    END AS cDesClaCar,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYCtlClaCarter

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

---------------------------------------------------------------------


--19-------------[dbo].[SP_KPY_DCANALDESEMBOLSO_BDS]---------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCANALDESEMBOLSO_BDS]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES 
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 02_STG_DCANALDESEMBOLSO
--===========================================================
MERGE BDS_BIACMACHYO.DBO.DCANALDESEMBOLSO AS TARGET
USING STG_DCANALDESEMBOLSO AS SOURCE
ON TARGET.CODCANALDESEMBOLSO = SOURCE.CCODTIPDES

WHEN MATCHED
    AND ( TARGET.DESCANALDESEMBOLSO <> SOURCE.CDESTIPDES )
    THEN UPDATE
        SET TARGET.DESCANALDESEMBOLSO = SOURCE.CDESTIPDES,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODCANALDESEMBOLSO,
        DESCANALDESEMBOLSO,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.CCODTIPDES,
        SOURCE.CDESTIPDES,
        GETDATE()
    );

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-------------------------------------------------------------------------------


--20----------------[dbo].[SP_KPY_DCANALDESEMBOLSO_STG]--------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCANALDESEMBOLSO_STG]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES 
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 02_STG_DCANALDESEMBOLSO
--===========================================================
TRUNCATE TABLE STG_DCANALDESEMBOLSO

INSERT INTO STG_DCANALDESEMBOLSO
SELECT 
    CCODTIPDES,
    CASE 
        WHEN CDESTIPDES = '' OR CDESTIPDES IS NULL THEN '.'
        ELSE REPLACE(TRIM(CDESTIPDES), ' ', ' ') 
    END AS CDESTIPDES,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYTMODODESCRE

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------------------------------



--21-------------[dbo].[SP_KPY_DCLASEPERSONA_BDS]---------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCLASEPERSONA_BDS]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES 
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 16_BDS_DCLASEPERSONA
--===========================================================
MERGE BDS_BIACMACHYO.DBO.DCLASEPERSONA AS TARGET
USING STG_DCLASEPERSONA AS SOURCE
    ON TARGET.CODCLAPER = SOURCE.CCODCLAPER

WHEN MATCHED
    AND (TARGET.DESCLASEPERSONA <> SOURCE.CDESCLAPER)
    THEN UPDATE
        SET TARGET.DESCLASEPERSONA = SOURCE.CDESCLAPER,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODCLASEPERSONA,
        DESCLASEPERSONA,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.CCODCLAPER,
        SOURCE.CDESCLAPER,
        GETDATE()
    );

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

------------------------------------------------------------------


--22-------------[dbo].[SP_KPY_DCLASEPERSONA_STG]----------------
CREATE PROCEDURE [dbo].[SP_KPY_DCLASEPERSONA_STG]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES 
    ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 16_STG_DCLASEPERSONA
--===========================================================
TRUNCATE TABLE STG_DCLASEPERSONA

INSERT INTO STG_DCLASEPERSONA
SELECT cCodClaPer,
       CASE WHEN cDESCLAPER = '' OR cDESCLAPER IS NULL THEN '.'
            ELSE REPLACE(TRIM(cDESCLAPER), ' ', ' ') 
       END cDesClaPer,
       cDesCorta,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GENClaPersona
WHERE iConEstado = 1

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------------


--23--------[dbo].[SP_KPY_DCLIENTE_BDS]--------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCLIENTE_BDS]
AS
SET NOCOUNT ON
BEGIN

--==================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--==================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--==================================================
-- 40_BDS_DCLIENTE
--==================================================
DROP TABLE IF EXISTS #QUERY_BDS_DCLIENTE

SELECT A.CCODCLIENTE CODCLIENTE,
    CASE WHEN A.CNOMCLIENTE = '' OR A.CNOMCLIENTE IS NULL THEN '.' 
         ELSE A.CNOMCLIENTE END AS NOMCLIENTE,
    CASE WHEN A.CCODSBS = '' OR A.CCODSBS IS NULL THEN '.' 
         ELSE A.CCODSBS END AS CODSBS,
    ISNULL(B.PKCLASEPERSONA, 0) PKCLASEPERSONA,
    CASE WHEN A.CCODCLAPER = '' OR A.CCODCLAPER IS NULL THEN '.' 
         ELSE A.CCODCLAPER END AS CODCLASEPERSONA,
    CASE WHEN B.DESCLASEPERSONA = '' OR B.DESCLASEPERSONA IS NULL THEN '.' 
         ELSE B.DESCLASEPERSONA END AS DESCLASEPERSONA,
    A.DFECINICMAC FECHAINGRESOCAJA,
    A.DFECINICSIF FECHAINICIOSISTEMAFIN,
    CASE WHEN A.CCORRELEC1 = '' OR A.CCORRELEC1 IS NULL THEN '.' 
         ELSE A.CCORRELEC1 END AS EMAIL,
    ISNULL(C.PKACTIVIDADECONOMICA,0) PKACTIVIDADECONOMICA,
    ISNULL(D.PKTIPODOCUMENTOIDENTIDAD,0) PKTIPODOCUMENTOIDENTIDAD,
    CASE WHEN A.CCODTIPDOCID = '' OR A.CCODTIPDOCID IS NULL THEN '.' 
         ELSE A.CCODTIPDOCID END AS CODTIPODOCUMENTOIDENTIDAD,
    CASE WHEN A.DESTIPODOCUMENTOIDENTIDAD = '' OR A.DESTIPODOCUMENTOIDENTIDAD IS NULL THEN '.' 
         ELSE A.DESTIPODOCUMENTOIDENTIDAD END AS DESTIPODOCUMENTOIDENTIDAD,
    CASE WHEN A.CNUMDOCIDE = '' OR A.CNUMDOCIDE IS NULL THEN '.' 
         ELSE A.CNUMDOCIDE END AS NUMERODOCUMENTOIDENTIDAD,
    CASE WHEN A.CRUC = '' OR A.CRUC IS NULL THEN '.' 
         ELSE A.CRUC END AS RUC,
    CASE WHEN A.CNROTELEF1 = '' OR A.CNROTELEF1 IS NULL THEN '.' 
         ELSE A.CNROTELEF1 END AS NUMEROTELEFONOPERSONAL,
    A.NMONTOINGRENETO MONTOINGRESONETO,
    ISNULL(G.PKACTIVIDADECONOMICA,0) PKACTIVIDADECONOMICAINGRESO,
    CASE WHEN A.CNOMEMP = '' OR A.CNOMEMP IS NULL THEN '.' 
         ELSE A.CNOMEMP END AS NOMBREEMPRESAINRESGO,
    CASE WHEN A.CDIRMEP = '' OR A.CDIRMEP IS NULL THEN '.' 
         ELSE A.CDIRMEP END AS DIRECCIONEMPRESAINRESGO,
    CASE WHEN A.CNRODOCEMP = '' OR A.CNRODOCEMP IS NULL THEN '.' 
         ELSE A.CNRODOCEMP END AS RUCEMPRESAINRESGO,
    ISNULL(H.PKUBIGEO,0) PKUBIGEOEMPRESA,
    ISNULL(I.PKTIPOVIA,0) PKTIPOVIAEMPRESA,
    CASE WHEN A.CNROTELEMP = '' OR A.CNROTELEMP IS NULL THEN '.' 
         ELSE A.CNROTELEMP END AS TELEFONOEMPRESAINRESGO,
    CASE WHEN A.CCODEMPLEADOR = '' OR A.CCODEMPLEADOR IS NULL THEN '.' 
         ELSE A.CCODEMPLEADOR END AS CODEMPLEADOR,
    ISNULL(J.PKPAIS,0) PKPAIS,
    CASE WHEN A.CDIRCLIENTE = '' OR A.CDIRCLIENTE IS NULL THEN '.' 
         ELSE A.CDIRCLIENTE END AS DIRECCIONCLIENTE,
    CASE WHEN A.CDIRREFCLIENTE = '' OR A.CDIRREFCLIENTE IS NULL THEN '.' 
         ELSE A.CDIRREFCLIENTE END AS DIRECCIONREFERENCIALCLIENTE

INTO #QUERY_BDS_DCLIENTE
FROM STG_DCLIENTE A
LEFT JOIN BDS_BIAMACCHYO.DBO.DCLASEPERSONA B ON A.CCODCLAPER = B.CODCLASEPERSONA
LEFT JOIN BDS_BIAMACCHYO.DBO.DACTIVIDADECONOMICA C ON A.CCODACTIVIDAD = C.CODACTIVIDADECONOMICA AND C.FLAGACTIVO = 1
LEFT JOIN BDS_BIAMACCHYO.DBO.DTIPODOCUMENTOIDENTIDAD D ON A.CCODTIPDOCID = D.CODTIPODOCUMENTOIDENTIDAD
LEFT JOIN BDS_BIAMACCHYO.DBO.DUBIGEO E ON A.CCODEPART = E.CODDEPARTAMENTO AND A.CCODPROV = E.CODPROVINCIA AND A.CCODZONA = E.CODZONA
LEFT JOIN BDS_BIAMACCHYO.DBO.DTIPOVIA F ON A.CCODTIPVIA = F.CODTIPOVIA
LEFT JOIN BDS_BIAMACCHYO.DBO.DACTIVIDADECONOMICA G ON A.CCODACTIVIDADING = G.CODACTIVIDADECONOMICA
LEFT JOIN BDS_BIAMACCHYO.DBO.DUBIGEO H ON A.CCODPROVINCIAIN = H.CODPROVINCIA AND A.CCODZONAIN = H.CODZONA
LEFT JOIN BDS_BIAMACCHYO.DBO.DTIPOVIA I ON A.CCODTIPVIAIN = I.CODTIPOVIA
LEFT JOIN BDS_BIAMACCHYO.DBO.DPAIS J ON A.CCODPAIS = J.CODPAIS

MERGE BDS_BIAMACCHYO.DBO.DCLIENTE AS TARGET
USING #QUERY_BDS_DCLIENTE AS SOURCE
ON TARGET.CCODCLIENTE = SOURCE.CODCLIENTE

WHEN MATCHED 
    AND (
        TARGET.NOMCLIENTE <> SOURCE.NOMCLIENTE OR
        TARGET.CODSBS <> SOURCE.CODSBS OR
        TARGET.PKCLASEPERSONA <> SOURCE.PKCLASEPERSONA OR
        TARGET.CODCLASEPERSONA <> SOURCE.CODCLASEPERSONA OR
        TARGET.DESCLASEPERSONA <> SOURCE.DESCLASEPERSONA OR
        TARGET.FECHAINGRESOCAJA <> SOURCE.FECHAINGRESOCAJA OR
        TARGET.FECHAINICIOSISTEMAFIN <> SOURCE.FECHAINICIOSISTEMAFIN OR
        TARGET.EMAIL <> SOURCE.EMAIL OR
        TARGET.PKACTIVIDADECONOMICA <> SOURCE.PKACTIVIDADECONOMICA OR
        TARGET.PKTIPODOCUMENTOIDENTIDAD <> SOURCE.PKTIPODOCUMENTOIDENTIDAD OR
        TARGET.CODTIPODOCUMENTOIDENTIDAD <> SOURCE.CODTIPODOCUMENTOIDENTIDAD OR
        TARGET.DESTIPODOCUMENTOIDENTIDAD <> SOURCE.DESTIPODOCUMENTOIDENTIDAD OR
        TARGET.NUMERODOCUMENTOIDENTIDAD <> SOURCE.NUMERODOCUMENTOIDENTIDAD OR
        TARGET.RUC <> SOURCE.RUC OR
        TARGET.NUMEROTELEFONOPERSONAL <> SOURCE.NUMEROTELEFONOPERSONAL OR
        TARGET.MONTOINGRESONETO <> SOURCE.MONTOINGRESONETO OR
        TARGET.FECHANACIMIENTO <> SOURCE.FECHANACIMIENTO OR
        TARGET.CODPAISNACIMIENTO <> SOURCE.CODPAISNACIMIENTO OR
        TARGET.CODEPARTAMENTONACIMIENTO <> SOURCE.CODEPARTAMENTONACIMIENTO OR
        TARGET.CODPROVINCIANACIMIENTO <> SOURCE.CODPROVINCIANACIMIENTO OR
        TARGET.CODDISTRITONACIMIENTO <> SOURCE.CODDISTRITONACIMIENTO OR
        TARGET.CODZONANACIMIENTO <> SOURCE.CODZONANACIMIENTO OR
        TARGET.SEXO <> SOURCE.SEXO OR
        TARGET.ESTADOCIVIL <> SOURCE.ESTADOCIVIL OR
        TARGET.PKUBIGEO <> SOURCE.PKUBIGEO OR
        TARGET.PKTIPOVIA <> SOURCE.PKTIPOVIA OR
        TARGET.TELEFONO <> SOURCE.TELEFONO OR
        TARGET.ANIORESIDENCIA <> SOURCE.ANIORESIDENCIA OR
        TARGET.TIPOFUENTEINGRESO <> SOURCE.TIPOFUENTEINGRESO OR
        TARGET.ANIOINICIOINGRESO <> SOURCE.ANIOINICIOINGRESO OR
        TARGET.FECHAINGRESO <> SOURCE.FECHAINGRESO OR
        TARGET.PKACTIVIDADECONOMICAINGRESO <> SOURCE.PKACTIVIDADECONOMICAINGRESO OR
        TARGET.NOMBREEMPRESAINRESGO <> SOURCE.NOMBREEMPRESAINRESGO OR
        TARGET.DIRECCIONEMPRESAINRESGO <> SOURCE.DIRECCIONEMPRESAINRESGO OR
        TARGET.RUCEMPRESAINRESGO <> SOURCE.RUCEMPRESAINRESGO OR
        TARGET.PKUBIGEOEMPRESA <> SOURCE.PKUBIGEOEMPRESA OR
        TARGET.PKTIPOVIAEMPRESA <> SOURCE.PKTIPOVIAEMPRESA OR
        TARGET.TELEFONOEMPRESAINRESGO <> SOURCE.TELEFONOEMPRESAINRESGO OR
        TARGET.CODEMPLEADOR <> SOURCE.CODEMPLEADOR OR
        TARGET.PKPAIS <> SOURCE.PKPAIS OR
        TARGET.DIRECCIONCLIENTE <> SOURCE.DIRECCIONCLIENTE OR
        TARGET.DIRECCIONREFERENCIALCLIENTE <> SOURCE.DIRECCIONREFERENCIALCLIENTE
    )
THEN UPDATE SET
    TARGET.NOMCLIENTE = SOURCE.NOMCLIENTE,
    TARGET.CODSBS = SOURCE.CODSBS,
    TARGET.PKCLASEPERSONA = SOURCE.PKCLASEPERSONA,
    TARGET.CODCLASEPERSONA = SOURCE.CODCLASEPERSONA,
    TARGET.DESCLASEPERSONA = SOURCE.DESCLASEPERSONA,
    TARGET.FECHAINGRESOCAJA = SOURCE.FECHAINGRESOCAJA,
    TARGET.FECHAINICIOSISTEMAFIN = SOURCE.FECHAINICIOSISTEMAFIN,
    TARGET.EMAIL = SOURCE.EMAIL,
    TARGET.PKACTIVIDADECONOMICA = SOURCE.PKACTIVIDADECONOMICA,
    TARGET.PKTIPODOCUMENTOIDENTIDAD = SOURCE.PKTIPODOCUMENTOIDENTIDAD,
    TARGET.CODTIPODOCUMENTOIDENTIDAD = SOURCE.CODTIPODOCUMENTOIDENTIDAD,
    TARGET.DESTIPODOCUMENTOIDENTIDAD = SOURCE.DESTIPODOCUMENTOIDENTIDAD,
    TARGET.NUMERODOCUMENTOIDENTIDAD = SOURCE.NUMERODOCUMENTOIDENTIDAD,
    TARGET.RUC = SOURCE.RUC,
    TARGET.NUMEROTELEFONOPERSONAL = SOURCE.NUMEROTELEFONOPERSONAL,
    TARGET.MONTOINGRESONETO = SOURCE.MONTOINGRESONETO,
    TARGET.FECHANACIMIENTO = SOURCE.FECHANACIMIENTO,
    TARGET.CODPAISNACIMIENTO = SOURCE.CODPAISNACIMIENTO,
    TARGET.CODEPARTAMENTONACIMIENTO = SOURCE.CODEPARTAMENTONACIMIENTO,
    TARGET.CODPROVINCIANACIMIENTO = SOURCE.CODPROVINCIANACIMIENTO,
    TARGET.CODDISTRITONACIMIENTO = SOURCE.CODDISTRITONACIMIENTO,
    TARGET.CODZONANACIMIENTO = SOURCE.CODZONANACIMIENTO,
    TARGET.SEXO = SOURCE.SEXO,
    TARGET.ESTADOCIVIL = SOURCE.ESTADOCIVIL,
    TARGET.PKUBIGEO = SOURCE.PKUBIGEO,
    TARGET.PKTIPOVIA = SOURCE.PKTIPOVIA,
    TARGET.TELEFONO = SOURCE.TELEFONO,
    TARGET.ANIORESIDENCIA = SOURCE.ANIORESIDENCIA,
    TARGET.TIPOFUENTEINGRESO = SOURCE.TIPOFUENTEINGRESO,
    TARGET.ANIOINICIOINGRESO = SOURCE.ANIOINICIOINGRESO,
    TARGET.FECHAINGRESO = SOURCE.FECHAINGRESO,
    TARGET.PKACTIVIDADECONOMICAINGRESO = SOURCE.PKACTIVIDADECONOMICAINGRESO,
    TARGET.NOMBREEMPRESAINRESGO = SOURCE.NOMBREEMPRESAINRESGO,
    TARGET.DIRECCIONEMPRESAINRESGO = SOURCE.DIRECCIONEMPRESAINRESGO,
    TARGET.RUCEMPRESAINRESGO = SOURCE.RUCEMPRESAINRESGO,
    TARGET.PKUBIGEOEMPRESA = SOURCE.PKUBIGEOEMPRESA,
    TARGET.PKTIPOVIAEMPRESA = SOURCE.PKTIPOVIAEMPRESA,
    TARGET.TELEFONOEMPRESAINRESGO = SOURCE.TELEFONOEMPRESAINRESGO,
    TARGET.CODEMPLEADOR = SOURCE.CODEMPLEADOR,
    TARGET.PKPAIS = SOURCE.PKPAIS,
    TARGET.FECULTACTUALIZACION = GETDATE(),
    TARGET.DIRECCIONCLIENTE = SOURCE.DIRECCIONCLIENTE,
    TARGET.DIRECCIONREFERENCIALCLIENTE = SOURCE.DIRECCIONREFERENCIALCLIENTE
WHEN NOT MATCHED BY TARGET THEN
INSERT (
    CODCLIENTE, NOMCLIENTE, CODSBS, PKCLASEPERSONA, CODCLASEPERSONA, DESCLASEPERSONA,
    FECHAINGRESOCAJA, FECHAINICIOSISTEMAFIN, EMAIL, PKACTIVIDADECONOMICA, 
    PKTIPODOCUMENTOIDENTIDAD, CODTIPODOCUMENTOIDENTIDAD, DESTIPODOCUMENTOIDENTIDAD, 
    NUMERODOCUMENTOIDENTIDAD, RUC, NUMEROTELEFONOPERSONAL, MONTOINGRESONETO, 
    FECHANACIMIENTO, CODPAISNACIMIENTO, CODEPARTAMENTONACIMIENTO, CODPROVINCIANACIMIENTO, 
    CODDISTRITONACIMIENTO, CODZONANACIMIENTO, SEXO, ESTADOCIVIL, PKUBIGEO, PKTIPOVIA, 
    TELEFONO, ANIORESIDENCIA, TIPOFUENTEINGRESO, ANIOINICIOINGRESO, FECHAINGRESO, 
    PKACTIVIDADECONOMICAINGRESO, NOMBREEMPRESAINRESGO, DIRECCIONEMPRESAINRESGO, 
    RUCEMPRESAINRESGO, PKUBIGEOEMPRESA, PKTIPOVIAEMPRESA, TELEFONOEMPRESAINRESGO, 
    CODEMPLEADOR, PKPAIS, FECULTACTUALIZACION, DIRECCIONCLIENTE, DIRECCIONREFERENCIALCLIENTE
)
VALUES (
    SOURCE.CODCLIENTE, SOURCE.NOMCLIENTE, SOURCE.CODSBS, SOURCE.PKCLASEPERSONA, 
    SOURCE.CODCLASEPERSONA, SOURCE.DESCLASEPERSONA, SOURCE.FECHAINGRESOCAJA, 
    SOURCE.FECHAINICIOSISTEMAFIN, SOURCE.EMAIL, SOURCE.PKACTIVIDADECONOMICA, 
    SOURCE.PKTIPODOCUMENTOIDENTIDAD, SOURCE.CODTIPODOCUMENTOIDENTIDAD, 
    SOURCE.DESTIPODOCUMENTOIDENTIDAD, SOURCE.NUMERODOCUMENTOIDENTIDAD, SOURCE.RUC, 
    SOURCE.NUMEROTELEFONOPERSONAL, SOURCE.MONTOINGRESONETO, SOURCE.FECHANACIMIENTO, 
    SOURCE.CODPAISNACIMIENTO, SOURCE.CODEPARTAMENTONACIMIENTO, SOURCE.CODPROVINCIANACIMIENTO, 
    SOURCE.CODDISTRITONACIMIENTO, SOURCE.CODZONANACIMIENTO, SOURCE.SEXO, 
    SOURCE.ESTADOCIVIL, SOURCE.PKUBIGEO, SOURCE.PKTIPOVIA, SOURCE.TELEFONO, 
    SOURCE.ANIORESIDENCIA, SOURCE.TIPOFUENTEINGRESO, SOURCE.ANIOINICIOINGRESO, 
    SOURCE.FECHAINGRESO, SOURCE.PKACTIVIDADECONOMICAINGRESO, SOURCE.NOMBREEMPRESAINRESGO, 
    SOURCE.DIRECCIONEMPRESAINRESGO, SOURCE.RUCEMPRESAINRESGO, SOURCE.PKUBIGEOEMPRESA, 
    SOURCE.PKTIPOVIAEMPRESA, SOURCE.TELEFONOEMPRESAINRESGO, SOURCE.CODEMPLEADOR, 
    SOURCE.PKPAIS, GETDATE(), SOURCE.DIRECCIONCLIENTE, SOURCE.DIRECCIONREFERENCIALCLIENTE
);

DROP TABLE #QUERY_BDS_DCLIENTE;

--==================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--==================================================
UPDATE CONTROL_EJECUCION_MALLA_DS 
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------------



--24------[dbo].[SP_KPY_DCLIENTE_STG]-------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCLIENTE_STG]
AS
SET NOCOUNT ON
BEGIN

--======================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--======================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--======================================================
-- 40_STG_DCLIENTE
--======================================================
TRUNCATE TABLE STG_GENESTCIVIL
TRUNCATE TABLE STG_TEMP_CURFUEING
TRUNCATE TABLE STG_CLIMDIRRECC
TRUNCATE TABLE STG_CLIMPERNAT
TRUNCATE TABLE STG_CLIMCLIENTES
TRUNCATE TABLE STG_CLIMPERJUR
TRUNCATE TABLE STG_DCLIENTE

INSERT INTO STG_GENESTCIVIL
SELECT cCodEstCiv,
       REPLACE(TRIM(cDesEstCiv), ' ', ' ') cDesEstCiv,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GENEstCiv

INSERT INTO STG_TEMP_CURFUEING
SELECT REG, cCODCLIENTE, cCodEmpleador, cCodTipFin, mMonIngNet, cAnoIniFin, dFecRegFin,
       cCodActivi, cNomEmp, cNroDocEmp, cCodDepart, cCodProvin, cCodDistri, cCodZona,
       cDirEmp, cNroTelEmp, cCodTipVia
FROM (
    SELECT ROW_NUMBER() OVER (PARTITION BY cCODCLIENTE ORDER BY mMonIngNet DESC) AS REG,
           cCODCLIENTE, REPLACE(TRIM(cCodEmpleador), ' ', ' ') cCodEmpleador,
           REPLACE(TRIM(cCodTipFin), ' ', ' ') cCodTipFin,
           mMonIngNet, cAnoIniFin, dFecRegFin, cCodActivi, cNomEmp, cNroDocEmp, cCodDepart, cCodProvin,
           cCodDistri, cCodZona, REPLACE(TRIM(cDirEmp), ' ', ' ') cDirEmp,
           REPLACE(TRIM(cNroTelEmp), ' ', ' ') cNroTelEmp, cCodTipVia
    FROM CMACHYOCLI_BI_SNAP.DBO.CLIDFueIngreso
) A
WHERE A.REG = 1

INSERT INTO STG_CLIMDIRRECC
SELECT cCodCliente, cCodDirCli, cCodPais, cCodDepart, cCodProvin, cCodDistri, cCodZona,
       cDirCliente, cNroTelFij, cAnoResDom, cCodTipVia, bDirPredet, GETDATE() AS FECULTACTUALIZACION, cDirCliRef
FROM (
    SELECT cCodCliente, cCodDirCli, cCodPais, cCodDepart, cCodProvin, cCodDistri, cCodZona,
           cDirCliente, REPLACE(TRIM(cNroTelFij), ' ', ' ') cNroTelFij,
           REPLACE(TRIM(cAnoResDom), ' ', ' ') cAnoResDom, cCodTipVia, bDirPredet, cDirCliRef,
           ROW_NUMBER() OVER (PARTITION BY cCodDirCli ORDER BY cCodDirCli DESC) AS ORDEN
    FROM CMACHYOCLI_BI_SNAP.DBO.CLIMDirrecc
    WHERE bDirPredet = '1'
    AND lEstDirecc = 1
) Z
WHERE ORDEN = 1

INSERT INTO STG_CLIMPERNAT
SELECT cCodCliente, dFecNacCli, cCodSexo, cCodPaisNac, cCodDepNac, cCodProNac, cCodDisNac,
       REPLACE(TRIM(cCodZonaNac), ' ', ' ') cCodZonNac, cCodEstCiv,
       GETDATE() AS FECULTACTUALIZACION
FROM CMACHYOCLI_BI_SNAP.DBO.CLIMPerNat

INSERT INTO STG_CLIMCLIENTES
SELECT cCodCliente, REPLACE(TRIM(cNomCliente), ' ', ' ') cNomCliente,
       REPLACE(TRIM(cCodSbs), ' ', ' ') cCodSbs,
       REPLACE(TRIM(cCodClaPer), ' ', ' ') cCodClaPer, dFecIniCmac, dFecIniSisf,
       REPLACE(TRIM(cCorelEcli), ' ', ' ') cCorelEcli,
       cCodCiiu, REPLACE(TRIM(cCodTipDocId), ' ', ' ') cCodTipDocId,
       REPLACE(TRIM(cNroDocIde), ' ', ' ') cNroDocIde,
       REPLACE(TRIM(cNroDocTri), ' ', ' ') cNroDocTri,
       REPLACE(TRIM(cNroTelPer), ' ', ' ') cNroTelPer,
       cDirCliente, cMnOnnLiving,
       cCtrCliEli, GETDATE() AS FECULTACTUALIZACION
FROM CMACHYOCLI_BI_SNAP.DBO.CLIMClientes
WHERE (cCtrCliEli = '1')

INSERT INTO STG_CLIMPERJUR
SELECT cCodCliente, dFecConsti, GETDATE() AS FECULTACTUALIZACION
FROM CMACHYOCLI_BI_SNAP.DBO.CLIMPerJur

--======================================================
-- INSERT INTO SIG_DCLIENTE
--======================================================
INSERT INTO SIG_DCLIENTE
SELECT A.CCODCLIENTE, A.CNOMCLIENTE, A.CCODSBS, A.CCODCLAPER, A.DFECINICMAC, A.DFECINISISF,
       A.CCORELECLI, A.CCODCIIU, A.CCODTIPDOCID, A.CNRODOCIDE, A.CNRODOCTRI, A.CNROTELPER, A.MNONINIVING,
       CASE WHEN B.DFECNACCLI IS NULL THEN C.DFECCONSTI ELSE B.DFECNACCLI END AS FECHANACIMIENTO,
       B.CCODSEXO, B.CCODPAINAC, B.CCODDEPNAC, B.CCODPRONAC, B.CCODDISNAC, B.CCODZONNAC, D.CCODPAIS,
       D.CCODDEPART, D.CCODPROVIN, D.CCODDISTR, D.CCODZONA, D.CDIRCLIENTE, D.CNROTELFIJ,
       D.DFECREGFIN, E.CODACTIVI, E.CNOMEMP, E.CNRODOCEMP, E.CCODEPARTFIN, E.CCODPROVINFN, E.CCODISTRIFIN,
       E.CCODOZONAFIN, E.CDIRPERM, E.CNROTELEMP, E.CCODTIPVIAFIN, D.CDIRREFCLIENTE AS CDIRREFCLIENTE
FROM STG_CLIMCLIENTES AS A
LEFT JOIN STG_CLIMPERNAT AS B ON A.CCODCLIENTE = B.CCODCLIENTE
LEFT JOIN STG_CLIMPERJUR AS C ON A.CCODCLIENTE = C.CCODCLIENTE
LEFT JOIN STG_CLIMDIRRECC AS D ON A.CCODCLIENTE = D.CCODCLIENTE
LEFT JOIN STG_TEMP_CURFUEING AS E ON A.CCODCLIENTE = E.CCODCLIENTE
LEFT JOIN STG_GENESTCIV AS F ON A.CCODESTCIV = F.CCODESTCIV

--======================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--======================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-------------------------------------------------------------


--25--------[dbo].[SP_KPY_DCOMITE_BDS]-----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCOMITE_BDS]
AS
SET NOCOUNT ON
BEGIN

--======================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--======================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--======================================================
-- 03_BDS_DCOMITE
--======================================================
MERGE BDS_BIAMACHCYO.DBO.DCOMITE AS TARGET
USING STG_DCOMITE AS SOURCE
ON TARGET.CODCOMITE = SOURCE.CODCOMITE

WHEN MATCHED
  AND (TARGET.DESCOMITE <> SOURCE.CDESCRIPTIP)
  THEN UPDATE
    SET TARGET.DESCOMITE = SOURCE.CDESCRIPTIP,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
  THEN INSERT (
      CODCOMITE,
      DESCOMITE,
      FECULTACTUALIZACION
  )
  VALUES (
      SOURCE.CCODCOMITE,
      SOURCE.CDESCRIPTIP,
      GETDATE()
  );

--======================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--======================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------

--26---------[dbo].[SP_KPY_DCOMITE_STG]------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCOMITE_STG]
AS
SET NOCOUNT ON
BEGIN

--=============================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=============================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--======================= 03_STG_DCOMITE =======================
TRUNCATE TABLE STG_DCOMITE

INSERT INTO STG_DCOMITE
SELECT CCODCOMITE,
       CASE WHEN CDESCRITIP = '' OR CDESCRITIP IS NULL THEN '.'
            ELSE REPLACE(TRIM(CDESCRITIP), '  ', ' ') END CDESCRITIP,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHOYO_BI_SNAP.DBO.KPYTCOMITE

--=============================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=============================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------


--27--------[dbo].[SP_KPY_DCONCEPTOOPERACION_BDS]-----------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCONCEPTOOPERACION_BDS]
AS
SET NOCOUNT ON
BEGIN

-- Inserta log con el inicio de ejecución
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- MERGE en tabla destino desde staging
MERGE BDS_BIAMACHOYO.DBO.DCONCEPTOOPERACION AS TARGET
USING STG_DCONCEPTOOPERACION AS SOURCE
ON TARGET.CODCONCEPTOOPERACION = SOURCE.CCODCONOPE

WHEN MATCHED 
    AND ( TARGET.DESCONCEPTOOPERACION <> SOURCE.CDESCONOPE )
    THEN UPDATE
        SET TARGET.DESCONCEPTOOPERACION = SOURCE.CDESCONOPE,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODCONCEPTOOPERACION,
        DESCONCEPTOOPERACION,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.CCODCONOPE,
        SOURCE.CDESCONOPE,
        GETDATE()
    );

-- Actualiza log con el fin de ejecución
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-----------------------------------------------------------------------


--28--------[dbo].[SP_KPY_DCONCEPTOOPERACION_STG]-----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCONCEPTOOPERACION_STG]
AS
SET NOCOUNT ON
BEGIN

--=============================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=============================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--======================= 31_STG_DCONCEPTOOPERACION =======================
TRUNCATE TABLE STG_DCONCEPTOOPERACION

INSERT INTO STG_DCONCEPTOOPERACION
SELECT cCodConOpe,
       CASE WHEN cDesConOpe = '' OR cDesConOpe IS NULL THEN '.'
            ELSE REPLACE(TRIM(cDesConOpe), '  ', ' ') END cDesConOpe,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHOYO_BI_SNAP.DBO.GENTConOperac

--=============================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=============================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------------------------


--29------[dbo].[SP_KPY_DCONDICIONCONTABLE_BDS]-----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCONDICIONCONTABLE_BDS]
AS
SET NOCOUNT ON
BEGIN

--====================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--====================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--==================== 09_BDS_DCONDICIONCONTABLE =========================
MERGE BDS_BIAMACHOYO.DBO.DCONDICIONCONTABLE AS TARGET
USING STG_DCONDICIONCONTABLE AS SOURCE
    ON TARGET.CODCONDICIONCONTABLE = SOURCE.cCodicCon

WHEN MATCHED
    AND ( TARGET.DESCONDICIONCONTABLE <> SOURCE.cDesConCre )
    THEN UPDATE
        SET TARGET.DESCONDICIONCONTABLE = SOURCE.cDesConCre,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODCONDICIONCONTABLE,
        DESCONDICIONCONTABLE,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.cCodicCon,
        SOURCE.cDesConCre,
        GETDATE()
    );

--====================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--====================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------


--30------[dbo].[SP_KPY_DCONDICIONCONTABLE_STG]---------------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DCONDICIONCONTABLE_STG]
AS
SET NOCOUNT ON
BEGIN

--====================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--====================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--==================== 09_STG_DCONDICIONCONTABLE =========================
TRUNCATE TABLE STG_DCONDICIONCONTABLE

INSERT INTO STG_DCONDICIONCONTABLE
SELECT cCondicCon, cDesConCre, GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHOYO_BI_SNAP.DBO.KPYTConCredit

--====================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--====================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------------------


--31------------[dbo].[SP_KPY_DCUENTACREDITO_BDS]--------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCUENTACREDITO_BDS]
AS
SET NOCOUNT ON
BEGIN

--=======================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=======================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=======================================================
-- 43_BDS_DCUENTACREDITO
--=======================================================
DROP TABLE IF EXISTS #QQUERY

SELECT A.CCODCUENTACREDITO CODCUENTACREDITO,
       B.CCODLINEACRE CODLINEACREDITO,
       ISNULL(C.PKCLIENTE,0) PKCLIENTE,
       ISNULL(B.CCODULTPLA,'000') NRCRONOGRAMA
INTO #QQUERY
FROM STG_DCUENTACREDITO A
LEFT JOIN SOFCMACHYO_BI_SNAP.DBO.GENMCRECLI B
  ON A.CCODCTACRE = B.CCODCTACRE
LEFT JOIN BDS_BIACMACHYO.DBO.DCLIENTE C
  ON ISNULL(B.CCODCLIENTE,'ND') = C.CODCLIENTE

MERGE BDS_BIACMACHYO.DBO.DCUENTACREDITO AS TARGET
USING #QQUERY AS SOURCE
  ON TARGET.CODCUENTACREDITO = SOURCE.CODCUENTACREDITO

WHEN MATCHED
    AND (
        TARGET.CODLINEACREDITO <> SOURCE.CODLINEACREDITO OR
        TARGET.PKCLIENTE <> SOURCE.PKCLIENTE OR
        TARGET.NRCRONOGRAMA <> SOURCE.NRCRONOGRAMA
    )
THEN UPDATE
    SET TARGET.CODLINEACREDITO = SOURCE.CODLINEACREDITO,
        TARGET.PKCLIENTE = SOURCE.PKCLIENTE,
        TARGET.NRCRONOGRAMA = SOURCE.NRCRONOGRAMA,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODCUENTACREDITO,
    CODLINEACREDITO,
    PKCLIENTE,
    NRCRONOGRAMA,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CODCUENTACREDITO,
    SOURCE.CODLINEACREDITO,
    SOURCE.PKCLIENTE,
    SOURCE.NRCRONOGRAMA,
    GETDATE()
);

DROP TABLE #QQUERY

--=======================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=======================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------


--32-------[dbo].[SP_KPY_DCUENTACREDITO_STG]---------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DCUENTACREDITO_STG]
AS
SET NOCOUNT ON
BEGIN

--===============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===============================================================
--==================== 43_STG_DCUENTACREDITO ====================
--===============================================================
TRUNCATE TABLE STG_DCUENTACREDITO

INSERT INTO STG_DCUENTACREDITO
SELECT 
    cCodCtaCre, cCodSolCre, cEstCreCon, cCodClaCre, nPorProCar, cCodClaUri, nPorProUri, cCodClaUriAE,
    nPorProUriAE, nNumCuoApr, nNumDiApr, nDiaFecFij, lCutaCons, cCodTipCuo, cTipPeriodo,
    cLibAmoCre, cUltNumDoc, nNumDesemb, nMonAprCre, nCodCapDes, nMonCapPag, nMonIntPro, nMonIntFec,
    nMonIntPag, nMonGasPro, nMonGasPag, nMonMorPag, cCodTipCre, cCodProducc, cCodSubPro,
    cCodTipRec, cCodRecurS, cCodTipMon, cCodPlazo, cCodModCre, cCodDesCre, nNroLinFin, cTipTasCom, nNroTasCom,
    nTasIntCom, cTipTasMor, nNroTasMor, nTasIntMor, nDiaAtrCre, nDiaAtrAcu, nDiaAtrMax,
    dFecUltPag, dFecCulCre, dFecGenCre, dFecDesCre, dFecModCre, dFecResCre,
    dFecProSld, nTipCamDes, cCodUsuAna, cCodUsuPro, cCodUsuRes, cCodUsuCre,
    nIndEvaADia, nIndEvaAFec, nIndEvaAAnt,
    nIndEvaADia, nIndEvaAFec, nSalCapDia, nMonConven, cCodConven, cCodTntCon, cCreNorRef,
    cCodRefina, cCodReestr, cCodMarJug, cCodCastig, cCodNotSis, cCodNotaAn,
    dFesCofide, cCodFueIng, cSolGarCre, cCodCreRapido, lRedDetCre, nNumRefCre, cConRefAgr,
    cCodInsFin, IdConexion, cCodUsuBlo, cCodEntGasGar, lFlgMigVivi, nmoncuoini, nSalIntDev,
    CCODCIINT, CCODICTAACAP, nMonIntPro, nMonIntFec, cCodProdPag, nMonSalNor, nMonSalVen,
    cCodNicNor, cCondicVen, cCodUsuAna, cMonSalRep, cIndNueRep, cCodOficin, cRieCreCam,
    cAuditCre, cAuditEstation, cAuditClient, dFecSeteFact, GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYMCRECONEM

--===============================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===============================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------




--33--[dbo].[SP_KPY_DDESTINOCREDITO_BDS]-------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DDESTINOCREDITO_BDS]
AS
SET NOCOUNT ON
BEGIN

--===============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===============================================================
--==================== 30_BDS_DDESTINOCREDITO ===================
--===============================================================
MERGE BDS_BIAMCACHYO.DBO.DDESTINOCREDITO AS TARGET
USING STG_DDESTINOCREDITO AS SOURCE
ON TARGET.CODDESTINOCREDITO = SOURCE.CCODDESCRE

WHEN MATCHED
    AND (TARGET.DESDESTINOCREDITO <> SOURCE.CDESCRIDES)
    THEN UPDATE
        SET TARGET.DESDESTINOCREDITO = SOURCE.CDESCRIDES,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODDESTINOCREDITO,
        DESDESTINOCREDITO,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.CCODDESCRE,
        SOURCE.CDESCRIDES,
        GETDATE()
    );

--===============================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===============================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------------------------

--34---[dbo].[SP_KPY_DDESTINOCREDITO_STG]------------------
CREATE PROCEDURE [dbo].[SP_KPY_DDESTINOCREDITO_STG]
AS
SET NOCOUNT ON
BEGIN

--===============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===============================================================
--=================== 30_STG_DDESTINOCREDITO ====================
--===============================================================
TRUNCATE TABLE STG_DDESTINOCREDITO

INSERT INTO STG_DDESTINOCREDITO
SELECT cCodDesCre,
       CASE 
           WHEN cDESCRIDES = '' OR cDESCRIDES IS NULL THEN '.'
           ELSE REPLACE(TRIM(cDESCRIDES), '  ', ' ') 
       END cDescriDes,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYTDesCreCon

--===============================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===============================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------------------



--35-----[dbo].[SP_KPY_DDESTINOPIVOT_BDS]-----------------
CREATE PROCEDURE [dbo].[SP_KPY_DDESTINOPIVOT_BDS]
AS
SET NOCOUNT ON
BEGIN

--===============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===============================================================
--================== 42_STG_DDESTINOPIVOT =======================
--===============================================================
TRUNCATE TABLE BDS_BIACMACHYO.DBO.DDESTINOPIVOT

INSERT INTO BDS_BIACMACHYO.DBO.DDESTINOPIVOT
SELECT PKSOLICITUD, DESTINO
FROM STG_DDESTINOPIVOT_4

--===============================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===============================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-------------------------------------------------------------------


--36---[dbo].[SP_KPY_DDESTINOPIVOT_STG]------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DDESTINOPIVOT_STG]
AS
SET NOCOUNT ON
BEGIN

--=========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=========================================================
-- 42_STG_DDESTINOPIVOT
--=========================================================

TRUNCATE TABLE STG_DDESTINOPIVOT_1
TRUNCATE TABLE STG_DDESTINOPIVOT_2
TRUNCATE TABLE STG_DDESTINOPIVOT_3
TRUNCATE TABLE STG_DDESTINOPIVOT_4

-- CARGA INICIAL
INSERT INTO STG_DDESTINOPIVOT_1
SELECT DISTINCT PKSOLICITUD, CODSOLICITUD
FROM BDS_BIACMACHYO.DBO.DSOLICITUD

-- CARGA DESTINOS
INSERT INTO STG_DDESTINOPIVOT_2
SELECT DISTINCT B.PKSOLICITUD, A.CDESCRIDES DESDESTINOCREDITO
FROM SOFCMACHYO_BI_SNAP.DBO.KPYDDESCRECON AS A WITH (NOLOCK)
INNER JOIN STG_DDESTINOPIVOT_1 AS B
    ON A.CCODSOLICRE = B.CODSOLICITUD
GROUP BY B.PKSOLICITUD, A.CDESCRIDES

-- CONCATENA DESTINOS EN UNA SOLA FILA
INSERT INTO STG_DDESTINOPIVOT_3
SELECT B.PKSOLICITUD, CONVERT(VARCHAR(100),
    STUFF((
        SELECT ', ' + A.DESDESTINOCREDITO
        FROM STG_DDESTINOPIVOT_2 A
        WHERE A.PKSOLICITUD = B.PKSOLICITUD
        ORDER BY A.DESDESTINOCREDITO
        FOR XML PATH('')
    ), 1, 2, '')) AS DESTINO
FROM STG_DDESTINOPIVOT_1 B

-- REEMPLAZA NULL POR "SIN DESTINO"
INSERT INTO STG_DDESTINOPIVOT_4
SELECT PKSOLICITUD, ISNULL(DESTINO, 'SIN DESTINO') AS DESTINO
FROM STG_DDESTINOPIVOT_3

--=========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------


--37----[dbo].[SP_KPY_DENTIDADFINANCIERA_BDS]-------------
CREATE PROCEDURE [dbo].[SP_KPY_DENTIDADFINANCIERA_BDS]
AS
SET NOCOUNT ON
BEGIN

--=========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=========================================================
-- 29_BDS_DENTIDADFINANCIERA
--=========================================================
MERGE BDS_BIACMACHYO.DBO.DENTIDADFINANCIERA AS TARGET
USING STG_DENTIDADFINANCIERA AS SOURCE
ON TARGET.CODENTIDADFINANCIERA = SOURCE.CCODIFI

WHEN MATCHED
    AND (TARGET.DESENTIDADFINANCIERA <> SOURCE.CNOMIFI)
THEN UPDATE
    SET TARGET.DESENTIDADFINANCIERA = SOURCE.CNOMIFI,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODENTIDADFINANCIERA,
    DESENTIDADFINANCIERA,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODIFI,
    SOURCE.CNOMIFI,
    GETDATE()
);

--=========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------


--38---[dbo].[SP_KPY_DENTIDADFINANCIERA_STG]---------
CREATE PROCEDURE [dbo].[SP_KPY_DENTIDADFINANCIERA_STG]
AS
SET NOCOUNT ON
BEGIN

--=========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=========================================================
-- 29_STG_DENTIDADFINANCIERA
--=========================================================
TRUNCATE TABLE STG_DENTIDADFINANCIERA

INSERT INTO STG_DENTIDADFINANCIERA
SELECT 
    cCodIFI,
    CASE 
        WHEN cNOMIFI = '' OR cNOMIFI IS NULL THEN '.'
        ELSE REPLACE(TRIM(cNOMIFI), ' ', '') 
    END AS cNOMIFI,
    GETDATE() AS FECULTACTUALIZACION
FROM URIESGOS.DBO.URIRCCMIFI

--=========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------------



--39----[DBO].[SP_KPY_DESTADOCREDITO_BDS]------------------------
CREATE PROCEDURE [DBO].[SP_KPY_DESTADOCREDITO_BDS]
AS
SET NOCOUNT ON
BEGIN

--=========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=========================================================
-- 07_BDS_DESTADOCREDITO
--=========================================================
MERGE BDS_BIACMACHYO.DBO.DESTADOCREDITO AS TARGET
USING STG_DESTADOCREDITO AS SOURCE
ON TARGET.CODESTADOCREDITO = SOURCE.cEstCreCon

WHEN MATCHED
    AND (TARGET.DESESTADOCREDITO <> SOURCE.cDescriEst)
    THEN UPDATE
        SET TARGET.DESESTADOCREDITO = SOURCE.cDescriEst,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODESTADOCREDITO,
        DESESTADOCREDITO,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.cEstCreCon,
        SOURCE.cDescriEst,
        GETDATE()
    );

--=========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
--------------------------------------------------------------


--40--[DBO].[SP_KPY_DESTADOCREDITO_STG]------------------------
CREATE PROCEDURE [DBO].[SP_KPY_DESTADOCREDITO_STG]
AS
SET NOCOUNT ON
BEGIN

--=========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=========================================================
-- 07_STG_DESTADOCREDITO
--=========================================================
TRUNCATE TABLE STG_DESTADOCREDITO

INSERT INTO STG_DESTADOCREDITO
SELECT 
    TRIM(cEstCreCon) AS cEstCreCon,
    TRIM(cDescriEst) AS cDescriEst,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYTEstCreCon

--=========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------

--41-----[dbo].[SP_KPY_DEVALUACION_BDS]--------------
CREATE PROCEDURE [dbo].[SP_KPY_DEVALUACION_BDS]
AS
SET NOCOUNT ON
BEGIN

--============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--============================================================
-- 39_BDS_DEVALUACION
--============================================================
MERGE BDS_BIAMACHOYO.DBO.DEVALUACION AS TARGET
USING STG_DEVALUACION AS SOURCE
ON TARGET.CODSOLICITUD = SOURCE.CCODESOLCRE
   AND TARGET.NROEVALUACION = SOURCE.NNUMEAVAMES

WHEN MATCHED 
     AND (TARGET.VALOREXCEDENTECREDITO <> SOURCE.NVALEXCCRE 
          OR TARGET.TIPOEVALUACION <> SOURCE.CTIPOEVALUACION)
THEN UPDATE 
    SET TARGET.VALOREXCEDENTECREDITO = SOURCE.NVALEXCCRE,
        TARGET.TIPOEVALUACION = SOURCE.CTIPOEVALUACION,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        NROEVALUACION,
        CODSOLICITUD,
        VALOREXCEDENTECREDITO,
        TIPOEVALUACION,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.NNUMEAVAMES,
        SOURCE.CCODESOLCRE,
        SOURCE.NVALEXCCRE,
        SOURCE.CTIPOEVALUACION,
        GETDATE()
    );

--============================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--============================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------------------

--42--------
CREATE PROCEDURE [dbo].[SP_KPY_DFUENTEINGRESO_BDS]
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO CONTROL_EJECUCION_MALLA_DS 
        (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
    VALUES 
        ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

    MERGE BDS_BIACMACHYO.dbo.DFUENTEINGRESO AS TARGET
    USING STGDFUENTEINGRESO AS SOURCE
    ON TARGET.CODFUENTEINGRESO = SOURCE.CODFUENTEINGRESO

    WHEN MATCHED
        AND (TARGET.DESFUENTEINGRESO <> SOURCE.DESFUENTEINGRESO)
    THEN UPDATE
        SET TARGET.DESFUENTEINGRESO = SOURCE.DESFUENTEINGRESO,
            TARGET.FECHAACTUALIZACION = GETDATE()

    WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODFUENTEINGRESO,
        DESFUENTEINGRESO,
        FECHAACTUALIZACION
    )
    VALUES (
        SOURCE.CODFUENTEINGRESO,
        SOURCE.DESFUENTEINGRESO,
        GETDATE()
    );

    UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
    WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
      AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
      AND FECHA_PROCESO = CAST(GETDATE() AS DATE);
END
-----------------------------------------------------------------------


--43---[dbo].[SP_KPY_DFUENTEINGRESO_STG]-----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DFUENTEINGRESO_STG]
AS
BEGIN
    SET NOCOUNT ON;

    -- Inserta log con el inicio de ejecución
    INSERT INTO CONTROL_EJECUCION_MALLA_DS 
        (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
    VALUES 
        ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

    -- Carga STG_DFUENTEINGRESO
    TRUNCATE TABLE STGDFUENTEINGRESO;

    INSERT INTO STGDFUENTEINGRESO (CODFUENTEINGRESO, DESFUENTEINGRESO, FECHAACTUALIZACION)
    SELECT 
        A.cTipFueIng,
        CASE 
            WHEN ISNULL(A.cDesFueIng, '') = '' THEN '.'
            ELSE REPLACE(TRIM(A.cDesFueIng), ' ', ' ') 
        END,
        GETDATE() AS FECHAACTUALIZACION
    FROM SOFCMACHYO_BI_SNAP.dbo.KPYTFueIngCli A
    WHERE A.cTipFueIng = 'D';

    -- Actualiza log con el fin de ejecución
    UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
    WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
      AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
      AND FECHA_PROCESO = CAST(GETDATE() AS DATE);
END
--------------------------------------------------------------


--44-------[dbo].[SP_KPY_DGARANTIA_BDS]----------------
CREATE PROCEDURE [dbo].[SP_KPY_DGARANTIA_BDS]
AS
SET NOCOUNT ON
BEGIN

--===============================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===============================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
       (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===============================================
-- 28_BDS_DGARANTIA 
--===============================================
MERGE BDS_BIACMACHYO.DBO.DGARANTIA AS TARGET
USING STG_DGARANTIA AS SOURCE
    ON TARGET.CODTIPOGARANTIA = SOURCE.CODTIPOGARANTIA

WHEN MATCHED 
     AND (
         TARGET.DESTIPOGARANTIA   <> SOURCE.DESTIPOGARANTIA
      OR TARGET.CODCLASE          <> SOURCE.CODCLASE
      OR TARGET.DESCLASE          <> SOURCE.DESCLASE
      OR TARGET.CODTIPOCLASE      <> SOURCE.CODTIPOCLASE
      OR TARGET.DESTIPOCLASE      <> SOURCE.DESTIPOCLASE
      OR TARGET.CODSUBTIPOCLASE   <> SOURCE.CODSUBTIPOCLASE
      OR TARGET.DESSUBTIPOCLASE   <> SOURCE.DESSUBTIPOCLASE
     )
THEN UPDATE
    SET TARGET.DESTIPOGARANTIA   = SOURCE.DESTIPOGARANTIA,
        TARGET.CODCLASE          = SOURCE.CODCLASE,
        TARGET.DESCLASE          = SOURCE.DESCLASE,
        TARGET.CODTIPOCLASE      = SOURCE.CODTIPOCLASE,
        TARGET.DESTIPOCLASE      = SOURCE.DESTIPOCLASE,
        TARGET.CODSUBTIPOCLASE   = SOURCE.CODSUBTIPOCLASE,
        TARGET.DESSUBTIPOCLASE   = SOURCE.DESSUBTIPOCLASE,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODTIPOGARANTIA,
    DESTIPOGARANTIA,
    CODCLASE,
    DESCLASE,
    CODTIPOCLASE,
    DESTIPOCLASE,
    CODSUBTIPOCLASE,
    DESSUBTIPOCLASE,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CODTIPOGARANTIA,
    SOURCE.DESTIPOGARANTIA,
    SOURCE.CODCLASE,
    SOURCE.DESCLASE,
    SOURCE.CODTIPOCLASE,
    SOURCE.DESTIPOCLASE,
    SOURCE.CODSUBTIPOCLASE,
    SOURCE.DESSUBTIPOCLASE,
    GETDATE()
);

--===============================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===============================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------



--45---------[dbo].[SP_KPY_DGARANTIA_STG]------------------
CREATE PROCEDURE [dbo].[SP_KPY_DGARANTIA_STG]
AS
SET NOCOUNT ON
BEGIN

--===============================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===============================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS 
       (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===============================================
-- 28_STG_DGARANTIA
--===============================================
TRUNCATE TABLE STG_DGARANTIA

INSERT INTO STG_DGARANTIA
SELECT 
    A.ccodigarat AS CODTIPOGARANTIA,
    TRIM(A.cdestipgar) AS DESTIPOGARANTIA,
    B.ccodclase AS CODCLASE,
    TRIM(B.cdesclagar) AS DESCLASE,
    C.CCODTIPGAR AS CODTIPOCLASE,
    TRIM(C.CDESTIPGAR) AS DESTIPOCLASE,
    D.ccodsubgar AS CODSUBTIPOCLASE,
    TRIM(D.cdessubgar) AS DESSUBTIPOCLASE
FROM SOFCMACHYO_BI_SNAP.DBO.GENDGarantia AS A
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENCTlaGaran AS B ON A.ccodclagar = B.ccodclagar
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTipGaran AS C 
        ON A.ccodtipgar = C.CCODTIPGAR AND B.ccodclagar = C.CCODCLAGAR AND C.lEstTipGar = 1
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTSubTipGar AS D 
        ON C.ccodsubgar = D.ccodsubgar AND C.CCODTIPGAR = D.ccodtipgar
        AND C.CCODCLAGAR = D.ccodclagar AND D.lconestado = 1
WHERE A.lconestado = 1

--===============================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===============================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------


--46--[dbo].[SP_KPY_DJEFEREGIONAL_BDS]-------------
CREATE PROCEDURE [dbo].[SP_KPY_DJEFEREGIONAL_BDS]
AS
SET NOCOUNT ON
BEGIN

--=====================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--=====================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
       (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--=====================================================
-- 32_BDS_DJEFEREGIONAL
--=====================================================
MERGE BDS_BIACMACHYO.DBO.DJEFEREGIONAL AS TARGET
USING STG_DJEFEREGIONAL AS SOURCE
  ON TARGET.CODJEFEREGIONAL = SOURCE.cCodPerson

WHEN MATCHED
     AND (TARGET.NOMJEFEREGIONAL <> SOURCE.cNomPerson)
THEN UPDATE
     SET TARGET.NOMJEFEREGIONAL = SOURCE.cNomPerson,
         TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODJEFEREGIONAL,
    NOMJEFEREGIONAL,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.cCodPerson,
    SOURCE.cNomPerson,
    GETDATE()
);

--=====================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--=====================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
 WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
   AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
   AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------


--47---[dbo].[SP_KPY_DJEFEREGIONAL_STG]-----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DJEFEREGIONAL_STG]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 32_STG_DJEFEREGIONAL ======================
TRUNCATE TABLE STG_DJEFEREGIONAL

INSERT INTO STG_DJEFEREGIONAL
SELECT 
    A.cCodPerson,
    A.cNomPerson,
    A.DFECRINROT,
    A.nCodZonIns,
    GETDATE() AS FECHAACTUALIZACION
FROM (
    SELECT 
        A.CCODPERSON, 
        RTRIM(A.CNOMPERSON) CNOMPERSON,
        G.NCODZONA nCodZonIns, 
        D.DFINASCROT DFECRINROT,
        ROW_NUMBER() OVER (PARTITION BY G.NCODZONA ORDER BY D.DFINASCROT) NORDEN,
        GETDATE() AS FECHAACTUALIZACION
    FROM SOFMACHAYO_BI_SNAP.DBO.SIMPERSONAL A
    INNER JOIN SOFMACHAYO_BI_SNAP.DBO.GENTABSELECT1 BB ON A.CCODESLAB1 = BB.CODSELECTLAB
    INNER JOIN SOFMACHAYO_BI_SNAP.DBO.SIPDASCROTPER D ON A.CCODPERSON = D.CCODPERSON
        AND A.CCODGRUPER = D.CCODGRUPER
    INNER JOIN SOFMACHAYO_BI_SNAP.DBO.GENTOFICINAS E ON B.CODOFICINA = E.CODOFICINA
        AND E.LICONESTADO = 1
    INNER JOIN SOFMACHAYO_BI_SNAP.DBO.GENTOFIZONAS F ON E.CODOFIZONA = F.CODOFICINA
        AND F.LESTZONOFI = 1
    INNER JOIN SOFMACHAYO_BI_SNAP.DBO.GENTZONAS G ON F.NCODZONA = G.NCODZONA
    WHERE A.CCODPERS IN ('JNR')
        AND C.CDESGRPER = 'A'
        AND D.LACTASCROT = 1
) A
WHERE A.NORDEN = 1

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------------------------------



--48-----[dbo].[SP_KPY_DMEDIOPAGO_BDS]-------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DMEDIOPAGO_BDS]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 27_BDS_DMEDIOPAGO ======================
MERGE BDS_BIACMACHYO.DBO.DMEDIOPAGO AS TARGET
USING STG_DMEDIOPAGO AS SOURCE
ON TARGET.CODMEDIOPAGO = SOURCE.CCODITIPPAG

WHEN MATCHED
    AND (TARGET.DESMEDIOPAGO <> SOURCE.CDESTIPPAG)
THEN UPDATE
    SET TARGET.DESMEDIOPAGO = SOURCE.CDESTIPPAG,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODMEDIOPAGO,
    DESMEDIOPAGO,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODITIPPAG,
    SOURCE.CDESTIPPAG,
    GETDATE()
);

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

------------------------------------------


--49---[dbo].[SP_KPY_DMEDIOPAGO_STG]-----------------------
CREATE PROCEDURE [dbo].[SP_KPY_DMEDIOPAGO_STG]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 27_STG_DMEDIOPAGO ======================
TRUNCATE TABLE STG_DMEDIOPAGO

INSERT INTO STG_DMEDIOPAGO
SELECT 
    cCodTipPag,
    CASE 
        WHEN cDESTIPPAG = '' OR cDESTIPPAG IS NULL THEN '.'
        ELSE REPLACE(TRIM(cDESTIPPAG), '  ', ' ') 
    END cDesTipPag,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GENTipoPago

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------


--50--[dbo].[SP_KPY_DMODALIDAD_BDS]----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DMODALIDAD_BDS]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 12_BDS_DMODALIDAD ======================
MERGE BDS_BIACMACHYO.DBO.DMODALIDAD AS TARGET
USING STG_DMODALIDAD AS SOURCE
ON TARGET.CODMODCRE = SOURCE.CCODMODCRE

WHEN MATCHED
    AND (TARGET.DESMODALIDAD <> SOURCE.CDESMODCRE)
THEN UPDATE
    SET TARGET.DESMODALIDAD = SOURCE.CDESMODCRE,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODMODALIDAD,
    DESMODALIDAD,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODMODCRE,
    SOURCE.CDESMODCRE,
    GETDATE()
);

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
CREATE PROCEDURE [dbo].[SP_KPY_DMODALIDAD_BDS]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 12_BDS_DMODALIDAD ======================
MERGE BDS_BIACMACHYO.DBO.DMODALIDAD AS TARGET
USING STG_DMODALIDAD AS SOURCE
ON TARGET.CODMODCRE = SOURCE.CCODMODCRE

WHEN MATCHED
    AND (TARGET.DESMODALIDAD <> SOURCE.CDESMODCRE)
THEN UPDATE
    SET TARGET.DESMODALIDAD = SOURCE.CDESMODCRE,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODMODALIDAD,
    DESMODALIDAD,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODMODCRE,
    SOURCE.CDESMODCRE,
    GETDATE()
);

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

-------------------------------------------------------



--51----[dbo].[SP_KPY_DMODALIDAD_STG]---------------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DMODALIDAD_STG]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 12_STG_DMODALIDAD ======================
TRUNCATE TABLE STG_DMODALIDAD

INSERT INTO STG_DMODALIDAD
SELECT 
    cCodModCre,
    CASE WHEN CDESMODCRE = '' OR CDESMODCRE IS NULL THEN '.'
         ELSE REPLACE(TRIM(CDESMODCRE), '  ', ' ') END cDesModCre,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYtModCredit

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------------------------


--52---[dbo].[SP_KPY_DMONEDA_BDS]-----------------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DMONEDA_BDS]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 13_BDS_DMONEDA ======================
MERGE BDS_BIACMACHYO.DBO.DMONEDA AS TARGET
USING STG_DMONEDA AS SOURCE
ON TARGET.CODMONEDA = SOURCE.CCODTIPMON

WHEN MATCHED 
    AND (TARGET.DESMONEDA <> SOURCE.CDESTIPMON 
         OR TARGET.SIMBOLO <> SOURCE.CDESCORTA)
THEN UPDATE
    SET TARGET.DESMONEDA = SOURCE.CDESTIPMON,
        TARGET.SIMBOLO = SOURCE.CDESCORTA,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODMONEDA,
    DESMONEDA,
    SIMBOLO,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODTIPMON,
    SOURCE.CDESTIPMON,
    SOURCE.CDESCORTA,
    GETDATE()
);

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-------------------------------------------------------

----53---[dbo].[SP_KPY_DMONEDA_STG]-----------------------
CREATE PROCEDURE [dbo].[SP_KPY_DMONEDA_STG]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 13_STG_DMONEDA ======================
TRUNCATE TABLE STG_DMONEDA

INSERT INTO STG_DMONEDA
SELECT cCodTipMon,
       CASE WHEN cDesTipMon = '' OR cDesTipMon IS NULL THEN '.'
            ELSE REPLACE(TRIM(cDesTipMon), '  ', ' ') END cDesTipMon,
       CASE WHEN cDesCorta = '' OR cDesCorta IS NULL THEN '.'
            ELSE REPLACE(TRIM(cDesCorta), '  ', ' ') END cDesCorta,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GENTMoneda
WHERE (cCodTipMon <> 'X')

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------------



--54---[dbo].[SP_KPY_DNIVELAPROBACION_BDS]----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DNIVELAPROBACION_BDS]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 04_BDS_DNIVELAPROBACION ======================
MERGE BDS_BIACMACHYO.DBO.DNIVELAPROBACION AS TARGET
USING STG_DNIVELAPROBACION AS SOURCE
ON TARGET.CODNIVELAPROBACION = SOURCE.CCODTIPACT

WHEN MATCHED
    AND (TARGET.DESNIVELAPROBACION <> SOURCE.CDESTIPACT
         OR TARGET.MONTOMINIMO <> SOURCE.NMONMINACT
         OR TARGET.MONTOMAXIMO <> SOURCE.NMONMAXACT)
THEN UPDATE
    SET TARGET.DESNIVELAPROBACION = SOURCE.CDESTIPACT,
        TARGET.MONTOMINIMO = SOURCE.NMONMINACT,
        TARGET.MONTOMAXIMO = SOURCE.NMONMAXACT,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODNIVELAPROBACION,
    DESNIVELAPROBACION,
    MONTOMINIMO,
    MONTOMAXIMO,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODTIPACT,
    SOURCE.CDESTIPACT,
    SOURCE.NMONMINACT,
    SOURCE.NMONMAXACT,
    GETDATE()
);

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------

--55--[dbo].[SP_KPY_DNIVELAPROBACION_STG]----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DNIVELAPROBACION_STG]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 04_STG_DNIVELAPROBACION ======================
TRUNCATE TABLE STG_DNIVELAPROBACION

INSERT INTO STG_DNIVELAPROBACION
SELECT 
    CCODTIPACT,
    CASE WHEN CDESTIPACT = '' OR CDESTIPACT IS NULL THEN '.'
         ELSE REPLACE(TRIM(CDESTIPACT), ' ', ' ') END CDESTIPACT,
    CASE WHEN NMONMINACT IS NULL THEN 0 ELSE NMONMINACT END NMONMINACT,
    CASE WHEN NMONMAXACT IS NULL THEN 0 ELSE NMONMAXACT END NMONMAXACT,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYTTIPACTA
WHERE (CCODOFICIN = '002')

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------------


--56---[dbo].[SP_KPY_DPAIS_BDS]-------------------
CREATE PROCEDURE [dbo].[SP_KPY_DPAIS_BDS]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 14_BDS_DPAIS ======================
MERGE BDS_BIACMACHYO.DBO.DPAIS AS TARGET
USING STG_DPAIS AS SOURCE
ON TARGET.CCODPAIS = SOURCE.CCODPAIS

WHEN MATCHED
    AND (TARGET.DESPAIS <> SOURCE.CNOMPAIS)
THEN UPDATE
    SET TARGET.DESPAIS = SOURCE.CNOMPAIS,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CCODPAIS,
    DESPAIS,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODPAIS,
    SOURCE.CNOMPAIS,
    GETDATE()
);

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------


--57--[dbo].[SP_KPY_DPAIS_STG]----------------
CREATE PROCEDURE [dbo].[SP_KPY_DPAIS_STG]
AS
SET NOCOUNT ON
BEGIN

-- ====================== INSERTA LOG CON EL INICIO EJECUCION ======================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ====================== 14_STG_DPAIS ======================
TRUNCATE TABLE STG_DPAIS

INSERT INTO STG_DPAIS
SELECT 
    cCodPais,
    CASE 
        WHEN cNOMPAIS = '' OR cNOMPAIS IS NULL THEN '.'
        ELSE REPLACE(TRIM(cNOMPAIS), '  ', ' ') 
    END AS cNomPais,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.GENTPaises

-- ====================== ACTUALIZA LOG CON EL FIN EJECUCION ======================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------------


--58---[dbo].[SP_KPY_DPRODUCTO_BDS]----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DPRODUCTO_BDS]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- CARGA DATOS A BDS_DPRODUCTO
MERGE BDS_BIACMACHYO.DBO.DPRODUCTO AS TARGET
USING STG_DPRODUCTO AS SOURCE
    ON TARGET.CODTIPOCREDITO = SOURCE.CCODTIPCRE
    AND TARGET.CODPRODUCTO = SOURCE.CCODPRODUC
    AND TARGET.CODSUBPRODUCTO = SOURCE.CCODSUBPRO

WHEN MATCHED
    AND (
        TARGET.DESTIPOCREDITO <> SOURCE.CDESTIPCRE OR
        TARGET.DESPRODUCTO     <> SOURCE.CDESPROCRE OR
        TARGET.DESSUBPRODUCTO  <> SOURCE.CDESSUBCRE OR
        TARGET.DESSUBTIPPRODUCTO <> SOURCE.CDESSUBTIP
    )
THEN UPDATE SET
    TARGET.DESTIPOCREDITO = SOURCE.CDESTIPCRE,
    TARGET.DESPRODUCTO     = SOURCE.CDESPROCRE,
    TARGET.DESSUBPRODUCTO  = SOURCE.CDESSUBCRE,
    TARGET.DESSUBTIPPRODUCTO = SOURCE.CDESSUBTIP,
    TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODTIPOCREDITO,
    CODPRODUCTO,
    CODSUBPRODUCTO,
    DESTIPOCREDITO,
    DESPRODUCTO,
    DESSUBPRODUCTO,
    DESSUBTIPPRODUCTO,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODTIPCRE,
    SOURCE.CCODPRODUC,
    SOURCE.CCODSUBPRO,
    SOURCE.CDESTIPCRE,
    SOURCE.CDESPROCRE,
    SOURCE.CDESSUBCRE,
    SOURCE.CDESSUBTIP,
    GETDATE()
);

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------


--59-[dbo].[SP_KPY_DPRODUCTO_STG]---------------------
CREATE PROCEDURE [dbo].[SP_KPY_DPRODUCTO_STG]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- 22_STG_DPRODUCTO
TRUNCATE TABLE STG_DPRODUCTO

INSERT INTO STG_DPRODUCTO
SELECT cCodTipCre,
       cCodProduc,
       cCodSubPro,
       CASE WHEN cDesTipCre = '' OR cDesTipCre IS NULL THEN '.'
            ELSE TRIM(REPLACE(cDesTipCre, ' ', ' ')) END cDesTipCre,
       CASE WHEN cDesSubTip = '' OR cDesSubTip IS NULL THEN '.'
            ELSE TRIM(REPLACE(cDesSubTip, ' ', ' ')) END cDesSubTip,
       CASE WHEN cDesProCre = '' OR cDesProCre IS NULL THEN '.'
            ELSE TRIM(REPLACE(cDesProCre, ' ', ' ')) END cDesProCre,
       CASE WHEN cDesSubCre = '' OR cDesSubCre IS NULL THEN '.'
            ELSE TRIM(REPLACE(cDesSubCre, ' ', ' ')) END cDesSubCre,
       NULL AS FECHAINIVIG,
       NULL AS FECHAFINVIG,
       CAST(lEstado AS VARCHAR(1)) AS FLAGESTADO,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHOYO_BI_SNAP.DBO.KPYStTipCre
WHERE lEstado = '1'

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END

---------------------------------------------------



--60--[dbo].[SP_KPY_DRECURSO_BDS]--------------------------------

CREATE PROCEDURE [dbo].[SP_KPY_DRECURSO_BDS]
AS
SET NOCOUNT ON
BEGIN

    -- INSERTA LOG CON EL INICIO EJECUCION
    INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
    VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

    -- 20_BDS_DRECURSO
    MERGE BDS_BIACMACHYO.DBO.DRECURSO AS TARGET
    USING STG_DRECURSO AS SOURCE
    ON TARGET.CODRECURSO = SOURCE.CCODTIPREC

    WHEN MATCHED
         AND (TARGET.DESRECURSO <> SOURCE.CDESTIPREC)
    THEN UPDATE
        SET TARGET.DESRECURSO = SOURCE.CDESTIPREC,
            TARGET.FECULTACTUALIZACION = GETDATE()

    WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODRECURSO,
        DESRECURSO,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.CCODTIPREC,
        SOURCE.CDESTIPREC,
        GETDATE()
    );

    -- ACTUALIZA LOG CON EL FIN EJECUCION
    UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
    WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
      AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
      AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------

--61--[dbo].[SP_KPY_DRECURSO_STG]--------------
CREATE PROCEDURE [dbo].[SP_KPY_DRECURSO_STG]
AS
SET NOCOUNT ON
BEGIN

    -- INSERTA LOG CON EL INICIO EJECUCION
    INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
    VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

    -- 20_STG_DRECURSO
    TRUNCATE TABLE STG_DRECURSO

    INSERT INTO STG_DRECURSO
    SELECT cCodTipRec,
           CASE WHEN cDesTipRec = '' OR cDesTipRec IS NULL THEN '.'
                ELSE REPLACE(TRIM(cDesTipRec), ' ', '') END cDesTipRec,
           GETDATE() AS FECULTACTUALIZACION
    FROM SOFCMACHYO_BI_SNAP.DBO.KPYTTipRecurs

    -- ACTUALIZA LOG CON EL FIN EJECUCION
    UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
    WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
      AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
      AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------------



--62----[dbo].[SP_KPY_DSECTORECONOMICO_BDS]---------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DSECTORECONOMICO_BDS]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- DESACTIVA ANTIGUOS
MERGE BDS_BIACMACHOYO.DBO.DSECTORECONOMICO AS TARGET
USING STG_DSECTORECONOMICO AS SOURCE
ON TARGET.CODSECTORECONOMICO = SOURCE.CCODSEECO
   AND TARGET.FLAGACTIVO = 1
WHEN MATCHED AND (TARGET.DESSECTORECONOMICO <> SOURCE.CDESSEECO)
     THEN UPDATE SET TARGET.FLAGACTIVO = 0
WHEN NOT MATCHED BY SOURCE AND TARGET.PKSECTORECONOMICO != 0
     THEN UPDATE SET TARGET.FLAGACTIVO = 0

-- INSERTA NUEVOS
MERGE BDS_BIACMACHOYO.DBO.DSECTORECONOMICO AS TARGET
USING STG_DSECTORECONOMICO AS SOURCE
ON TARGET.CODSECTORECONOMICO = SOURCE.CCODSEECO
   AND TARGET.FLAGACTIVO = 1
WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODSECTORECONOMICO,
    DESSECTORECONOMICO,
    FECULTACTUALIZACION,
    FLAGACTIVO)
VALUES (
    SOURCE.CCODSEECO,
    SOURCE.CDESSEECO,
    GETDATE(),
    1)

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------------


--63--[dbo].[SP_KPY_DSECTORECONOMICO_STG]---------------
CREATE PROCEDURE [dbo].[SP_KPY_DSECTORECONOMICO_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

TRUNCATE TABLE STG_DSECTORECONOMICO

INSERT INTO STG_DSECTORECONOMICO
SELECT cCodSecEco,
       CASE WHEN cDESSECECO = '' OR cDESSECECO IS NULL THEN '.'
            ELSE REPLACE(TRIM(cDESSECECO), '  ', ' ') END cDesSecEco,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHOYO_BI_SNAP.DBO.GENTSecEcon

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
---------------------------------------------------


--64- [dbo].[SP_KPY_DSOLICITUD_BDS]----------------------
CREATE PROCEDURE [dbo].[SP_KPY_DSOLICITUD_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
(NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

DROP TABLE IF EXISTS #STG_DSOLICITUD_0

SELECT DISTINCT
    ISNULL(A.CODSOLICITUD, '.') CODSOLICITUD,
    ISNULL(B.PKCLIENTE, 0) PKCLIENTE,
    ISNULL(A.CODEXPECLI, '.') CODEXPEDIENTE,
    ISNULL(D.PKSOLICITUDESTADO, 0) PKSOLICITUDESTADO,
    ISNULL(C.CODLINEACREDITO, '.') CODLINEACREDITO,
    ISNULL(E.PKSOLICITUDSITUACION, 0) PKSOLICITUDSITUACION,
    ISNULL(F.PKMONEDA, 0) PKMONEDA,
    ISNULL(G.PKGRUPOCREDITO, 0) PKGRUPOCREDITO,
    ISNULL(J.PKNIVELAPROBACION, 0) PKNIVELAPROBACION,
    ISNULL(K.PKCOMITE, 0) PKCOMITE,
    ISNULL(L.PKPRODUCTO, 0) PKPRODUCTO,
    ISNULL(L.PKRECURSO, 0) PKRECURSO,
    ISNULL(M.PKSUBRECURSO, 0) PKSUBRECURSO,
    ISNULL(N.PKMODALIDAD, 0) PKMODALIDAD,
    ISNULL(O.PKCANALDESEMBOLSO, 0) PKCANALDESEMBOLSO,
    A.CODTIPOSOLICITUD,
    ISNULL(A.DESTIPOSOLICITUD, '.') DESTIPOSOLICITUD,
    ISNULL(A.CODMOTIVOSOLICITUD, '.') CODMOTIVOSOLICITUD,
    ISNULL(A.DESMOTIVOSOLICITUD, '.') DESMOTIVOSOLICITUD,
    A.MONTOSOLICITUDCREDITO,
    A.NROCOTUASOLICITUD,
    A.NROCUOTASOLICITUD,
    A.PLAZOSOLICITUDCREDITO,
    A.FECHASOLICITUDCREDITO,
    A.CODUSUSOL,
    ISNULL(A.MONTOAPROBADCREDITO, 0) MONTOAPROBADCREDITO,
    A.NROCUOTAAPROBADO,
    A.NRODIASGRACIA,
    A.DIAFECHAFIJA,
    A.PLAZOAPROBADCREDITO,
    A.CODTIPOPERIOD,
    A.DESTIPOPERIOD,
    A.CODTIPOCUOTA,
    A.DESTIPOCUOTA,
    A.FLAGLIBREAMORTIZACIONCREDITO,
    A.FECHAAPROBACIONCREDITO,
    A.NROLINEAFINANCIAMIENTO,
    A.NROTASACOMPENSATORIA,
    A.TASAINTERESCOMPENSATORIA,
    A.NROTASAMORATORIA,
    A.TASAINTERESMORATORIA,
    A.CODUSUING,
    A.NRODIASGRACIAAPROBADO,
    A.CODTIPOCLIENTE,
    A.PKTIPOTASACOMPENSATORIA,
    A.PKTIPOTASAMORATORIA,
    S.PKACTIVIDADECONOMICASOLICITUD,
    P.PKADEUDADO,
    P.PKAGENCIA,
    R.PKEVALUACION,
    T.PKJEFEREGIONAL,
    U.PKADMINISTRADOR,
    V.PKASESOR,
    W.PKASESORNIVEL,
    A.FECHAHORACREACION,
    A.FECHAHORAULTIMODIFICACION,
    ISNULL(L.DESTIPOPROCEDITO, '.') DESTIPOPROCEDITO_HIS,
    ISNULL(L.DESPRODUCTO, '.') DESPRODUCTO_HIS,
    ISNULL(L.DESSUBPRODUCTO, '.') DESSUBPRODUCTO_HIS,
    ISNULL(L.DESSUBTIPOPRODUCTO, '.') DESSUBTIPOPRODUCTO_HIS
INTO #STG_DSOLICITUD_0
FROM STG_DSOLICITUD A
LEFT JOIN BDS_BIACMACHYQ.DBO.DCLIENTE B ON A.CODCLIENT = B.CODCLIENTE
LEFT JOIN BDS_BIACMACHYQ.DBO.DRECURSO C ON A.CODTIPREC = C.CODRECURSO
LEFT JOIN BDS_BIACMACHYQ.DBO.DSOLICITUDESTADO D ON A.CODSOLSEST = D.CODSOLICITUDESTADO
LEFT JOIN BDS_BIACMACHYQ.DBO.DSOLICITUDSITUACION E ON A.CODSOLSIT = E.CODSOLICITUDSITUACION
LEFT JOIN BDS_BIACMACHYQ.DBO.DMONEDA F ON A.CODMONEDA = F.CODMONEDA
LEFT JOIN BDS_BIACMACHYQ.DBO.DGRUPOCREDITO G ON A.GRUPOCREDITO = G.CODGRUPOCREDITO
LEFT JOIN BDS_BIACMACHYQ.DBO.DTIPOTASA H ON A.CODTIPOTASA = H.CODTIPOTASA
LEFT JOIN BDS_BIACMACHYQ.DBO.DTIPOTASA I ON A.CODTIPOTASA = I.CODTIPOTASA
LEFT JOIN BDS_BIACMACHYQ.DBO.DNIVELAPROBACION J ON A.NIVELAPROBACION = J.CODNIVELAPROBACION
LEFT JOIN BDS_BIACMACHYQ.DBO.DCOMITE K ON A.CODCOMITE = K.CODCOMITE
LEFT JOIN BDS_BIACMACHYQ.DBO.DPRODUCTO L ON A.CODPRODUC = L.CODPRODUCTO
LEFT JOIN BDS_BIACMACHYQ.DBO.DSUBRECURSO M ON A.CODRECURS=M.CODSUBRECURSO
LEFT JOIN BDS_BIACMACHYQ.DBO.DMODALIDAD N ON A.CODMODCRE = N.CODMODALIDAD
LEFT JOIN BDS_BIACMACHYQ.DBO.DCANALDESEMBOLSO O ON A.CODCANMODDES = O.CODCANALDESEMBOLSO
LEFT JOIN BDS_BIACMACHYQ.DBO.DAGENCIA P ON A.CODOFICIN = P.CODAGENCIA AND P.FLAGACTIVO = '1'
LEFT JOIN BDS_BIACMACHYQ.DBO.DADEUDADO Q ON A.CODCODRADE = Q.CODADEUDADO
LEFT JOIN BDS_BIACMACHYQ.DBO.DEVALUACION R ON A.NMUEMEAMES = R.NROEVALUACION AND A.CODSOLCRE = R.CODSOLICITUD
LEFT JOIN BDS_BIACMACHYQ.DBO.DACTIVIDADECONOMICA S ON A.CODCOTSILOL = S.CODACTIVIDADECONOMICA AND S.FLAGACTIVO = 1
LEFT JOIN BDS_BIACMACHYQ.DBO.DJEFEREGIONAL T ON A.CODJEFEREGIONAL = T.CODJEFEREGIONAL
LEFT JOIN BDS_BIACMACHYQ.DBO.DADMINISTRADOR U ON A.CODADMINISTRADOR = U.CODADMINISTRADOR
LEFT JOIN BDS_BIACMACHYQ.DBO.DASESOR V ON A.CODUSUANA = V.CODASESOR
LEFT JOIN BDS_BIACMACHYQ.DBO.DASESORNIVEL W ON A.CODPAPAPR = W.CODPAPAPR AND A.CODCONNIVEL = W.CODNIVEL AND A.CODCUSUB = W.CODCLASUB

MERGE BDS_BIACMACHYQ.DBO.DSOLICITUD AS TARGET
USING #STG_DSOLICITUD_0 AS SOURCE
ON TARGET.CODSOLICITUD = SOURCE.CODSOLICITUD
WHEN MATCHED
    AND (
        TARGET.PKCLIENTE <> SOURCE.PKCLIENTE
        OR TARGET.CODEXPEDIENTE <> SOURCE.CODEXPEDIENTE
        OR TARGET.PKSOLICITUDESTADO <> SOURCE.PKSOLICITUDESTADO
        OR TARGET.CODLINEACREDITO <> SOURCE.CODLINEACREDITO
        OR TARGET.PKSOLICITUDSITUACION <> SOURCE.PKSOLICITUDSITUACION
        OR TARGET.PKMONEDA <> SOURCE.PKMONEDA
        OR TARGET.PKGRUPOCREDITO <> SOURCE.PKGRUPOCREDITO
        OR TARGET.PKNIVELAPROBACION <> SOURCE.PKNIVELAPROBACION
        OR TARGET.PKCOMITE <> SOURCE.PKCOMITE
        OR TARGET.PKPRODUCTO <> SOURCE.PKPRODUCTO
        OR TARGET.PKRECURSO <> SOURCE.PKRECURSO
        OR TARGET.PKSUBRECURSO <> SOURCE.PKSUBRECURSO
        OR TARGET.PKMODALIDAD <> SOURCE.PKMODALIDAD
        OR TARGET.PKCANALDESEMBOLSO <> SOURCE.PKCANALDESEMBOLSO
        OR TARGET.CODTIPOSOLICITUD <> SOURCE.CODTIPOSOLICITUD
        OR TARGET.DESTIPOSOLICITUD <> SOURCE.DESTIPOSOLICITUD
        OR TARGET.CODMOTIVOSOLICITUD <> SOURCE.CODMOTIVOSOLICITUD
        OR TARGET.DESMOTIVOSOLICITUD <> SOURCE.DESMOTIVOSOLICITUD
        OR TARGET.MONTOSOLICITUDCREDITO <> SOURCE.MONTOSOLICITUDCREDITO
        OR TARGET.NROCOTUASOLICITUD <> SOURCE.NROCOTUASOLICITUD
        OR TARGET.NROCUOTASOLICITUD <> SOURCE.NROCUOTASOLICITUD
        OR TARGET.PLAZOSOLICITUDCREDITO <> SOURCE.PLAZOSOLICITUDCREDITO
        OR TARGET.FECHASOLICITUDCREDITO <> SOURCE.FECHASOLICITUDCREDITO
        OR TARGET.CODUSUSOL <> SOURCE.CODUSUSOL
        OR TARGET.MONTOAPROBADCREDITO <> SOURCE.MONTOAPROBADCREDITO
        OR TARGET.NROCUOTAAPROBADO <> SOURCE.NROCUOTAAPROBADO
        OR TARGET.NRODIASGRACIA <> SOURCE.NRODIASGRACIA
        OR TARGET.DIAFECHAFIJA <> SOURCE.DIAFECHAFIJA
        OR TARGET.PLAZOAPROBADCREDITO <> SOURCE.PLAZOAPROBADCREDITO
        OR TARGET.CODTIPOPERIOD <> SOURCE.CODTIPOPERIOD
        OR TARGET.DESTIPOPERIOD <> SOURCE.DESTIPOPERIOD
        OR TARGET.CODTIPOCUOTA <> SOURCE.CODTIPOCUOTA
        OR TARGET.DESTIPOCUOTA <> SOURCE.DESTIPOCUOTA
        OR TARGET.FLAGLIBREAMORTIZACIONCREDITO <> SOURCE.FLAGLIBREAMORTIZACIONCREDITO
        OR TARGET.FECHAAPROBACIONCREDITO <> SOURCE.FECHAAPROBACIONCREDITO
        OR TARGET.NROLINEAFINANCIAMIENTO <> SOURCE.NROLINEAFINANCIAMIENTO
        OR TARGET.NROTASACOMPENSATORIA <> SOURCE.NROTASACOMPENSATORIA
        OR TARGET.TASAINTERESCOMPENSATORIA <> SOURCE.TASAINTERESCOMPENSATORIA
        OR TARGET.NROTASAMORATORIA <> SOURCE.NROTASAMORATORIA
        OR TARGET.TASAINTERESMORATORIA <> SOURCE.TASAINTERESMORATORIA
        OR TARGET.CODUSUING <> SOURCE.CODUSUING
        OR TARGET.NRODIASGRACIAAPROBADO <> SOURCE.NRODIASGRACIAAPROBADO
        OR TARGET.CODTIPOCLIENTE <> SOURCE.CODTIPOCLIENTE
        OR TARGET.PKTIPOTASACOMPENSATORIA <> SOURCE.PKTIPOTASACOMPENSATORIA
        OR TARGET.PKTIPOTASAMORATORIA <> SOURCE.PKTIPOTASAMORATORIA
        OR TARGET.PKACTIVIDADECONOMICASOLICITUD <> SOURCE.PKACTIVIDADECONOMICASOLICITUD
        OR TARGET.PKADEUDADO <> SOURCE.PKADEUDADO
        OR TARGET.PKAGENCIA <> SOURCE.PKAGENCIA
        OR TARGET.PKEVALUACION <> SOURCE.PKEVALUACION
        OR TARGET.PKJEFEREGIONAL <> SOURCE.PKJEFEREGIONAL
        OR TARGET.PKADMINISTRADOR <> SOURCE.PKADMINISTRADOR
        OR TARGET.PKASESOR <> SOURCE.PKASESOR
        OR TARGET.PKASESORNIVEL <> SOURCE.PKASESORNIVEL
        OR TARGET.FECHAHORACREACION <> SOURCE.FECHAHORACREACION
        OR TARGET.FECHAHORAULTIMODIFICACION <> SOURCE.FECHAHORAULTIMODIFICACION
    )
THEN UPDATE
    SET TARGET.PXCILENTE                   = SOURCE.PXCILENTE,
        TARGET.CCODEXPEDIENTE              = SOURCE.CCODEXPEDIENTE,
        TARGET.PKSOLICITUDESTADO           = SOURCE.PKSOLICITUDESTADO,
        TARGET.CODLINEACREDITO             = SOURCE.CODLINEACREDITO,
        TARGET.PKSOLICITUDSITUACION        = SOURCE.PKSOLICITUDSITUACION,
        TARGET.PKMONEDA                    = SOURCE.PKMONEDA,
        TARGET.PKGRUPCREDITO               = SOURCE.PKGRUPCREDITO,
        TARGET.PKNIVELAPROBACION           = SOURCE.PKNIVELAPROBACION,
        TARGET.PKCMTIE                     = SOURCE.PKCMTIE,
        TARGET.PKPRODUCTO                  = SOURCE.PKPRODUCTO,
        TARGET.PKRECURSO                   = SOURCE.PKRECURSO,
        TARGET.PKSUBRECURSO                = SOURCE.PKSUBRECURSO,
        TARGET.PKMODALIDAD                 = SOURCE.PKMODALIDAD,
        TARGET.PKCANALEDESMBOLSO           = SOURCE.PKCANALEDESMBOLSO,
        TARGET.CCODTIPOSOLICITUD           = SOURCE.CCODTIPOSOLICITUD,
        TARGET.DFECSOLICITUD               = SOURCE.DFECSOLICITUD,
        TARGET.CCODMOTIVOSOLICITUD         = SOURCE.CCODMOTIVOSOLICITUD,
        TARGET.CDESMOTIVOSOLICITUD         = SOURCE.CDESMOTIVOSOLICITUD,
        TARGET.MONTOSOLICITUDBCREDITO      = SOURCE.MONTOSOLICITUDBCREDITO,
        TARGET.NROCUTASOLICITUD            = SOURCE.NROCUTASOLICITUD,
        TARGET.PLAZOSOLICITUDBCREDITO      = SOURCE.PLAZOSOLICITUDBCREDITO,
        TARGET.FECHASOLICITUDBCREDITO      = SOURCE.FECHASOLICITUDBCREDITO,
        TARGET.MONTOAPROBADOCREDITO        = SOURCE.MONTOAPROBADOCREDITO,
        TARGET.NROCUOTAPROBADO             = SOURCE.NROCUOTAPROBADO,
        TARGET.NRODIASGRACIA               = SOURCE.NRODIASGRACIA,
        TARGET.DFECHAFAFIA                 = SOURCE.DFECHAFAFIA,
        TARGET.PLAZOAPROBADOCREDITO        = SOURCE.PLAZOAPROBADOCREDITO,
        TARGET.CODTIPOPERIDO               = SOURCE.CODTIPOPERIDO,
        TARGET.CODTIPOCUOTA                = SOURCE.CODTIPOCUOTA,
        TARGET.DESTIPOCUOTA                = SOURCE.DESTIPOCUOTA,
        TARGET.FLAGLIBREAMORTIZACIONCREDITO= SOURCE.FLAGLIBREAMORTIZACIONCREDITO,
        TARGET.FECHAPROBACIONCREDITO       = SOURCE.FECHAPROBACIONCREDITO,
        TARGET.NROLINEAFINANCIAMIENTO      = SOURCE.NROLINEAFINANCIAMIENTO,
        TARGET.NROTASCOMPENSATORIA         = SOURCE.NROTASCOMPENSATORIA,
        TARGET.TASAINTERESCOMPENSATORIA    = SOURCE.TASAINTERESCOMPENSATORIA,
        TARGET.NROTASAMORTIZATORIA         = SOURCE.NROTASAMORTIZATORIA,
        TARGET.TASAINTERESAMORTIZATORIA    = SOURCE.TASAINTERESAMORTIZATORIA,
        TARGET.CCODUSUMIS                  = SOURCE.CCODUSUMIS,
        TARGET.NRODIASGRACIAPROBADO        = SOURCE.NRODIASGRACIAPROBADO,
        TARGET.CCODTIPOCLIENTE             = SOURCE.CCODTIPOCLIENTE,
        TARGET.PKTIPOTASACOMPENSATORIA     = SOURCE.PKTIPOTASACOMPENSATORIA,
        TARGET.PKTIPOTASAAMORTIZATORIA     = SOURCE.PKTIPOTASAAMORTIZATORIA,
        TARGET.PKACTIVIDADECONOMICASOLICITUD = SOURCE.PKACTIVIDADECONOMICASOLICITUD,
        TARGET.PXEADUEDADO                 = SOURCE.PXEADUEDADO,
        TARGET.PKAGENCIA                   = SOURCE.PKAGENCIA,
        TARGET.PXEVALUACION                = SOURCE.PXEVALUACION,
        TARGET.PKJEFEREGIONAL              = SOURCE.PKJEFEREGIONAL,
        TARGET.PKADMINISTRADOR             = SOURCE.PKADMINISTRADOR,
        TARGET.PKASESOR                    = SOURCE.PKASESOR,
        TARGET.PKASESORNIVEL               = SOURCE.PKASESORNIVEL,
        TARGET.FECHAHORACREACION           = SOURCE.FECHAHORACREACION,
        TARGET.FECHAHORAUTMODIFICACION     = SOURCE.FECHAHORAUTMODIFICACION,
        TARGET.CTIPOCREDITO_HIS            = SOURCE.CTIPOCREDITO_HIS,
        TARGET.DESPRODUCTO_HIS             = SOURCE.DESPRODUCTO_HIS,
        TARGET.DESSUBPRODUCTO_HIS          = SOURCE.DESSUBPRODUCTO_HIS,
        TARGET.DESSUBTIPOPRODUCTO_HIS      = SOURCE.DESSUBTIPOPRODUCTO_HIS,
        TARGET.FECULTACTUALIZACION         = GETDATE()
WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CCODSOLICITUD,
    PXCILENTE,
    CCODEXPEDIENTE,
    PKSOLICITUDESTADO,
    CODLINEACREDITO,
    PKSOLICITUDSITUACION,
    PKMONEDA,
    PKGRUPCREDITO,
    PKNIVELAPROBACION,
    PKCOMITE,
    PKPRODUCTO,
    PKRECURSO,
    PKSUBRECURSO,
    PKMODALIDAD,
    PKCANALEDESMBOLSO,
    CCODTIPOSOLICITUD,
    DFECSOLICITUD,
    CCODMOTIVOSOLICITUD,
    CDESMOTIVOSOLICITUD,
    MONTOSOLICITUDBCREDITO,
    NROCUTASOLICITUD,
    PLAZOSOLICITUDBCREDITO,
    FECHASOLICITUDBCREDITO,
    CCODUSUASI,
    MONTOAPROBADOCREDITO,
    NROCUOTAPROBADO,
    NRODIASGRACIA,
    DFECHAFAFIA,
    PLAZOAPROBADOCREDITO,
    CCODTIPOPERIDO,
    DESTIPOPERIDO,
    CCODTIPOCUOTA,
    DESTIPOCUOTA,
    FLAGLIBREAMORTIZACIONCREDITO,
    FECHAPROBACIONCREDITO,
    NROLINEAFINANCIAMIENTO,
    NROTASACOMPENSATORIA,
    TASAINTERESCOMPENSATORIA,
    NROTASAMORTIZATORIA,
    TASAINTERESAMORTIZATORIA,
    CCODUSUMIS,
    NRODIASGRACIAPROBADO,
    CCODTIPOCLIENTE,
    PKTIPOTASACOMPENSATORIA,
    PKTIPOTASAAMORTIZATORIA,
    PKACTIVIDADECONOMICASOLICITUD,
    PKEADUEDADO,
    PKAGENCIA,
    PKEVALUACION,
    PKJEFEREGIONAL,
    PKADMINISTRADOR,
    PKASESOR,
    PKASESORNIVEL,
    FECHAHORACREACION,
    FECHAHORAUTMODIFICACION,
    CTIPOCREDITO_HIS,
    DESPRODUCTO_HIS,
    DESSUBPRODUCTO_HIS,
    DESSUBTIPOPRODUCTO_HIS,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.CCODSOLICITUD,
    SOURCE.PXCILIENTE,
    SOURCE.CCODEXPEDIENTE,
    SOURCE.PKSOLICITUDESTADO,
    SOURCE.CODLINEACREDITO,
    SOURCE.PKSOLICITUDSITUACION,
    SOURCE.PKMONEDA,
    SOURCE.PKGRUPCREDITO,
    SOURCE.PKNIVELAPROBACION,
    SOURCE.PKCOMITE,
    SOURCE.PKPRODUCTO,
    SOURCE.PKRECURSO,
    SOURCE.PKSUBRECURSO,
    SOURCE.PKMODALIDAD,
    SOURCE.PKCANALEDESMBOLSO,
    SOURCE.CCODTIPOSOLICITUD,
    SOURCE.DFECSOLICITUD,
    SOURCE.CODMOTIVOSOLICITUD,
    SOURCE.CDESMOTIVOSOLICITUD,
    SOURCE.MONTOSOLICITUDBCREDITO,
    SOURCE.NROCUTASOLICITUD,
    SOURCE.PLAZOSOLICITUDBCREDITO,
    SOURCE.FECHASOLICITUDBCREDITO,
    SOURCE.CCODUSUASI,
    SOURCE.MONTOAPROBADOCREDITO,
    SOURCE.NROCUOTAPROBADO,
    SOURCE.NRODIASGRACIA,
    SOURCE.DFECHAFAFIA,
    SOURCE.PLAZOAPROBADOCREDITO,
    SOURCE.CCODTIPOPERIDO,
    SOURCE.DESTIPOPERIDO,
    SOURCE.CCODTIPOCUOTA,
    SOURCE.DESTIPOCUOTA,
    SOURCE.FLAGLIBREAMORTIZACIONCREDITO,
    SOURCE.FECHAPROBACIONCREDITO,
    SOURCE.NROLINEAFINANCIAMIENTO,
    SOURCE.NROTASACOMPENSATORIA,
    SOURCE.TASAINTERESCOMPENSATORIA,
    SOURCE.NROTASAMORTIZATORIA,
    SOURCE.TASAINTERESAMORTIZATORIA,
    SOURCE.CCODUSUMIS,
    SOURCE.NRODIASGRACIAPROBADO,
    SOURCE.CCODTIPOCLIENTE,
    SOURCE.PKTIPOTASACOMPENSATORIA,
    SOURCE.PKTIPOTASAAMORTIZATORIA,
    SOURCE.PKACTIVIDADECONOMICASOLICITUD,
    SOURCE.PKEADUEDADO,
    SOURCE.PKAGENCIA,
    SOURCE.PKEVALUACION,
    SOURCE.PKJEFEREGIONAL,
    SOURCE.PKADMINISTRADOR,
    SOURCE.PKASESOR,
    SOURCE.PKASESORNIVEL,
    SOURCE.FECHAHORACREACION,
    SOURCE.FECHAHORAUTMODIFICACION,
    SOURCE.CTIPOCREDITO_HIS,
    SOURCE.DESPRODUCTO_HIS,
    SOURCE.DESSUBPRODUCTO_HIS,
    SOURCE.DESSUBTIPOPRODUCTO_HIS,
    GETDATE()
);

DROP TABLE #STG_DSOLICITUD_0

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------------------------



--65---- [dbo].[SP_KPY_DSOLICITUD_STG]-------------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DSOLICITUD_STG]
AS
SET NOCOUNT ON
BEGIN

-- ================================================
-- INSERTA LOG CON EL INICIO EJECUCION
-- ================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ================================================
-- 41_STG_DSOLICITUD
-- ================================================
TRUNCATE TABLE STG_TEMP_DSOLICITUD1
TRUNCATE TABLE STG_TEMP_DSOLICITUDEJEEF
TRUNCATE TABLE STG_TEMP_DSOLICITUDAADM1
TRUNCATE TABLE STG_TEMP_DSOLICITUDISPADASCRTPER
TRUNCATE TABLE STG_TEMP_DSOLICITUDAFM1
TRUNCATE TABLE STG_TEMP_DSOLICITUDASESORF
TRUNCATE TABLE STG_TEMP_DSOLICITUDT2
TRUNCATE TABLE STG_TEMP_DSOLICITUDISTIPCLASUBUNIV
TRUNCATE TABLE STG_DSOLICITUD

INSERT INTO STG_TEMP_DSOLICITUD1
SELECT CCODSOLCRE, MIN(DAUDITDATE) AS FECHAMIN, MAX(DAUDITDATE) AS FECHAMAX
FROM SOFCMACHOYO_BI_SNAP.DBO.KPYMASOLICITUD
GROUP BY CCODSOLCRE
-- ================================================
-- INSERT INTO STG_TEMP_DSOLICITUDEJEEF
-- ================================================
INSERT INTO STG_TEMP_DSOLICITUDEJEEF
SELECT *
FROM (
    SELECT ISNULL(D.DFINASCROT, '20880101') AS DFECINROT,
           ROW_NUMBER() OVER (PARTITION BY A.NCODZONINS ORDER BY ISNULL(D.DFINASCROT, '20880101')) AS NNUMORDREM,
           A.*, B.CNOMPERSOM, C.CDESCARPER
    FROM SOFCMACHOYO_BI_SNAP.DBO.SIPDAISREZON A
    INNER JOIN SOFCMACHOYO_BI_SNAP.DBO.SIMPERSONAL B
        ON A.CCODPERSON = B.CCODPERSON
    INNER JOIN SOFCMACHOYO_BI_SNAP.DBO.SIPTCARGOPER C
        ON B.CCODGRUPER = C.CCODGRUPER
    INNER JOIN SOFCMACHOYO_BI_SNAP.DBO.SIPDASCROTPER D
        ON A.CCODPERSON = D.CCODPERSON
       AND D.LVIGASCROT = 1
       AND D.LACTASCROT = 1
    WHERE LESTADOREG = 1
) AS Z
WHERE NNUMORDREM = 1

-- ================================================
-- INSERT INTO STG_TEMP_DSOLICITUDAADM1
-- ================================================
INSERT INTO STG_TEMP_DSOLICITUDAADM1
SELECT A.CCODPERSON, A.CCODPERANT, A.CCODOFICIN, A.CNOMPERSOM, A.CCODSEXO, A.DFECNACPER,
       A.CCODNACION, A.CCODPNAC, A.CCODDEPENAC, A.CCODPRONAC, A.CCODDISNAC, A.CCODZONNAC,
       A.CLUNGRACPER, A.CPRONACPER, A.CDEPNAACPER, A.CCODTIPDOCID, A.CNUMDOCIDE, A.CCODTIPDOCTR,
       A.CNUMOTRODOC, A.CNUMLIBMIL, A.CCODGRUSAN, A.CCODESTCIV, A.NMEDEPESPER, A.NMEDEPESPER,
       A.NNUMHIJPER, A.CCODPROFES, A.CCODPROFESA, A.CCODIDIOMA, A.CCODPRODOM, A.CCODPRODOM,
       A.CCODDISDOM, A.CCODZONDOM, A.CDIRDOMPER, A.CCODCLIIPER, A.DFECINGINS, A.DFECCESINS,
       A.CNRUCTOPER, A.CCLANUIPER, B.CCODGRUPER, A.CNUMAFPFER, A.DFECINGAFP, A.CCODSNAPER,
       A.CNUMSSSPER, A.DFECINGSSP, A.DFECCISPER, A.NNUMCTSIND, A.CCODRELINS, A.CCODSTIPER,
       B.CCODGRUPER, A.CCODAREAMAC, A.CCODGRUPER, A.CCODCLASPER, A.CCODGRUHOR, A.LPERFUNSSB,
       A.CCTRCHFPER, A.CCODREMEAD, A.CCODUSUREG, A.DFECREGPER, A.CCODSUMOD, A.DFECMODREG,
       A.CTRFREPERL, A.LONESTADO, A.CCODDEPFER, A.CFLAG, A.CNUMTELPER, B.CCODMOTCES,
       A.CDESECESE, B.CCODNIVEL, A.CCODGRUCO, A.CCODCAREEST, A.CCODTITEST, A.CCODCAREEST,
       A.CAUDITUSER, A.CAUDITSTATION, A.DAUDITDATE, A.CCODORGANI, A.CCONDICFUN,
       B.CCLASFICCAP, A.CCODSISPEN, A.CCODPAPPR, A.CCODSUBUNIV, B.CCODCLASUB,
       A.CCODDEGREN, A.CCODCUCUPAC, A.CPERCONIA, A.LAPODERADO, A.NCODPAPPR, A.CCODESTABL,
       A.NCODFINGREN, A.CTIPCOMVAR, B.CDESCARPER
FROM SOFCMACHOYO_BI_SNAP.DBO.SIMPERSONAL AS A
INNER JOIN SOFCMACHOYO_BI_SNAP.DBO.SIPTCARGOPER AS B
    ON A.CCODGRUPER = B.CCODGRUPER
WHERE A.CCODGRUPER = 'ADM'
  AND (A.CCODESTPER = 'A')
-- ================================================
-- INSERT INTO STG_TEMP_DSOLICITUDISPDASCROTPER
-- ================================================
INSERT INTO STG_TEMP_DSOLICITUDISPDASCROTPER
SELECT CCODPERSON, CCODESTASCR, LVIGASCROT, LACTASCROT, CCOADSACROT, DFINASCROT,
       NDIASASCROT, CCOASCROT, CCODGRUPER, CCODFICIN, CCOUSUMOD, DFECMODREG, CCODOFIORI,
       CAUDITUSER, CAUDITSTATION, DAUDITDATE, CCODCLASPER, CCODORGANI,
       CCLASFICCAP, CCODAREAMAC, CCODCAPPAR, CCOONIVEL, CCODSUBUNIV, CCODCLASUB,
       NCODPAPAPR, CARCASROT, CCODIGOODC, LESTVISDOC, CUSUVISDOC, DFECVISDOC
FROM SOFCMACHOYO_BI_SNAP.DBO.SIPDASCROTPER

-- ================================================
-- INSERT INTO STG_TEMP_DSOLICITUDAAMFI
-- ================================================
INSERT INTO STG_TEMP_DSOLICITUDAAMFI
SELECT *
FROM (
    SELECT ISNULL(B.DFINASCROT, '20880101') AS DFECINROT,
           ROW_NUMBER() OVER (PARTITION BY A.CCODOFICIN ORDER BY ISNULL(B.DFINASCROT, '20880101')) AS NNUMORDREM,
           A.*
    FROM STG_TEMP_DSOLICITUDAADM1 A
    INNER JOIN STG_TEMP_DSOLICITUDISPDASCROTPER B
        ON A.CCODPERSON = B.CCODPERSON
       AND B.LVIGASCROT = 1
       AND B.LACTASCROT = 1
) C
WHERE NNUMORDREM = 1

-- ================================================
-- INSERT INTO STG_TEMP_DSOLICITUDASESORF
-- ================================================
INSERT INTO STG_TEMP_DSOLICITUDASESORF
SELECT B.CCODPERSON, B.CCODPERANT, B.CCODOFICIN, B.CNOMPERSOM, B.CCODSEXO, B.DFECNACPER,
       B.CCODNACION, B.CCODPNAC, B.CCODDEPENAC, B.CCODPRONAC, B.CCODDISNAC, B.CCODZONNAC,
       B.CLUNGRACPER, B.CPRONACPER, B.CDEPNAACPER, B.CCODTIPDOCID, B.CNUMDOCIDE, B.CCODTIPDOCTR,
       B.CNUMOTRODOC, B.CNUMLIBMIL, B.CCODGRUSAN, B.CCODESTCIV, B.NMEDEPESPER, B.NMEDEPESPER,
       B.NNUMHIJPER, B.CCODPROFES, B.CCODIDIOMA, B.CCODPRODOM, B.CCODPRODOM,
       B.CCODDISDOM, B.CCODZONDOM, B.CDIRDOMPER, B.CCODCLIIPER, B.DFECINGINS, B.DFECCESINS,
       B.CNRUCTOPER, B.CCLANUIPER, B.CCODGRUPER, B.CNUMAFPFER, B.DFECINGAFP, B.CCODSNAPER,
       B.CNUMSSSPER, B.DFECINGSSP, B.DFECCISPER, B.NNUMCTSIND, B.CCODRELINS, B.CCODSTIPER,
       B.CCODORGANI, B.CCODAREAMAC, B.CCODGRUPER, B.CCODCLASPER, B.CCODGRUHOR, B.LPERFUNSSB,
       B.CCTRCHFPER, B.CCODREMEAD, B.CCODUSUREG, B.DFECREGPER, B.CCODSUMOD, B.DFECMODREG,
       B.CTRFREPERL, B.LONESTADO, B.CCODDEPFER, B.CFLAG, B.CNUMTELPER, B.CCODMOTCES,
       B.CDESECESE, B.CCODNIVEL, B.CCODGRUCO, B.CCODCAREEST, B.CCODTITEST, B.CCODCAREEST,
       B.CAUDITUSER, B.CAUDITSTATION, B.DAUDITDATE, B.CCODORGANI,
       B.CCONDICFUN, B.CCLASFICCAP, B.CCODSISPEN, B.CCODPAPPR, B.CCODSUBUNIV, B.CCODCLASUB,
       B.CCODSALCAR, B.CCODREGPEN, B.CCODCUCUPAC, B.PERCONFIA, B.LAPODERADO, B.NCODPAPAPR,
       B.CCODESTABL, B.NCODFINGREN, B.CTIPCOMVAR, B.CDESCARPER
FROM (
    SELECT DISTINCT CCODUSUANA
    FROM SOFCMACHOYO_BI_SNAP.DBO.KPYMSOLICITUD
) AS A
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.SIMPERSONAL AS B
    ON A.CCODUSUANA = B.CCODPERSON
    -- ================================================
-- INSERT INTO STG_TEMP_DSOLICITUDT2
-- ================================================
INSERT INTO STG_TEMP_DSOLICITUDT2
SELECT A.CCODSOLCRE, A.CCODLINCRE, A.CCODCLIENT, A.CCODEXPCLI, A.CCODESISOL, A.CCODSITSOL,
       A.CCODMONEDA, A.CCODCONVEN AS GRUPOREDITO, A.CTIPTASCOM, A.CTIPTASMOR,
       A.CCODTIPFAC AS NIVELAPROBACION, A.CCODCOMITE, A.CCODTIPCRE, A.CCODPRODUC,
       A.CCODSUBPRO, A.CCODTIPREC, A.CCODGRUSAN, A.CCODMODCRE, A.CCODCITSOL, B.CCODMODDES,
       A.CCODSITPOL, A.CCODFICIN, A.CCODPERSOL, A.DFECMOSOL, A.NMONOSOLCRE, A.NNUMCUOSOL,
       A.NPLASOLCRE, A.DFECISOLCRE, A.CMONEDAAPR, A.NMONAPRCRE, A.NNUMCUOAPR,
       A.NNUMAPRGRA, A.DFECAPRGRA, A.CTIPPERIODO, A.CDESEPRIOD, A.CCODTIPCUO,
       F.CDESCRITIPO, A.CLIBAMORE, A.DFECARGCRE, A.NNUMROLTIN, A.NRROTASCOM, A.NTASINTCOM,
       A.NTASINTMOR, A.CTASINTMOR, A.CCODUSING, A.NNUMDIAGRAAPR, A.CTIPCLIRE, A.CCODCORDEA,
       A.CCODFICIN, K.CCODPERSON AS CCODJEFEREGIONAL, L.CCODPERSON AS CODADMINISTRADOR,
       A.CCODUSUANA, G.NNUEVEMAS, H.FECHAMIN, H.FECHAMAX
FROM SOFCMACHOYO_BI_SNAP.DBO.KPYMSOLICITUD AS A
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.KPYMODDESCRE AS B
    ON A.CCODSOLCRE = B.CCODSOLCRE
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.KPYMTIPSOLCRE AS C
    ON A.CCODTIPSOL = C.CCODTIPBSOL
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.KPYMTOTSOLICI AS D
    ON A.CCODMOTSOL = D.CCODMOTBSOL
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.KPYTIPPERIODO AS E
    ON A.CTIPPERIODO = E.CTIPPERIODO
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.KPYTIPCUOCRE AS F
    ON A.CCODTIPCUO = F.CCODTIPCUO
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.KPYDEVASOLICI AS G
    ON A.CCODSOLCRE = G.CCODSOLCRE
LEFT OUTER JOIN STG_TEMP_DSOLICITUDT1 AS H
    ON A.CCODSOLCRE = H.CCODSOLCRE
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.GENTOFIZONAS AS I
    ON A.CCODFICIN = I.CCODOFICIN
   AND I.LESTZOFIC = 1
LEFT OUTER JOIN SOFCMACHOYO_BI_SNAP.DBO.GENTZONAS AS J
    ON I.NCODZONA = J.NCODZONA
LEFT OUTER JOIN STG_TEMP_DSOLICITUDFEEF AS K
    ON A.NCODZONINS = K.NCODZONINS
LEFT OUTER JOIN STG_TEMP_DSOLICITUDAAMFI AS L
    ON A.CCODFICIN = L.CCODFICIN
LEFT OUTER JOIN STG_TEMP_DSOLICITUDASESORF AS M
    ON A.CCODUSUANA = M.CCODPERSON

-- ================================================
-- INSERT INTO STG_TEMP_DSOLICITUDTCLASUBNIV
-- ================================================
INSERT INTO STG_TEMP_DSOLICITUDTCLASUBNIV
SELECT NCODPAPAPR, CCONNIVEL, CCODSUBUNIV, CCODCLASUB, CDESCLASUB, NREMBASICA, NINCENTVAR,
NINCENTFIJO, LCONESTADO, CCODUSUREG, DFECREGIST, CULUSUMOD, DFECULTMOD
FROM SOFCMACHYO_BI_SNAP.DBO.SIPTCLASUBNIV
-- ================================================
-- INSERT INTO STG_DSOLICITUD
-- ================================================
INSERT INTO STG_DSOLICITUD
SELECT NNUMORDREM, CCODSOLCRE, CCODLINCRE, CCODCLIENT, CCODEXPCLI, CCODESISOL,
       CCODSITSOL, CCODMONEDA, GRUPOREDITO, CTIPTASCOM, CTIPASMOR, NIVELAPROBACION, CCODCOMITE, CCODTIPCRE,
       CCODPRODUC, CCODSUBPRO, CCODTIPREC, CCODGRUSAN, CCODMODCRE, CCODCITSOL, CCODMODDES,
       CCODSITPOL, CDESCRITIP, CCODMOTSOL, DFECMOSOL, NMONOSOLCRE, DFECISOLCRE,
       CCODUSUMOD, CMONEDAAPR, NMONAPRCRE, NNUMCUOAPR, CTIPPERIODO, CDESPERIOD, CCODTIPCUO, CDESCRICUO,
       DFECSOLICUD2, DFECAPRGRA, DFECARGCRE, NNUMROLTIN, NRROTASCOM, NTASINTCOM,
       CCODJEFEREGIONAL, CODADMINISTRADOR, CCODUSUANA, MAX(NNUEVEMAS) NNUEVEMAS, FECHAMIN, FECHAMAX, CCONNIVEL,
       CCODCLASUB, NCODPAPAPR, CDESCLAANA
FROM (
    SELECT ROW_NUMBER() OVER (PARTITION BY A.CCODUSUANA ORDER BY A.NNUEVEMAS DESC) NNUMORDREM,
           A.CCODSOLCRE, A.CCODLINCRE, A.CCODCLIENT, A.CCODEXPCLI, A.CCODESISOL, A.CCODSITSOL,
           A.CCODMONEDA, A.GRUPOREDITO, A.CTIPTASCOM, A.CTIPASMOR, A.NIVELAPROBACION, A.CCODCOMITE, A.CCODTIPCRE,
           A.CCODPRODUC, A.CCODSUBPRO, A.CCODTIPREC, A.CCODGRUSAN, A.CCODMODCRE, A.CCODCITSOL, A.CCODMODDES,
           A.CCODSITPOL, A.CCDESCRITIP, A.CCODMOTSOL, A.DFECMOSOL, A.NMONOSOLCRE, A.DFECISOLCRE,
           A.CCODUSUMOD, A.CCMONEDAAPR, A.NMONAPRCRE, A.NNUMCUOAPR, A.CTIPPERIODO, A.CCDESPERIOD,
           A.CCODTIPCUO, A.CCDESCRICUO, A.DFECSOLICUD2, A.DFECAPRGRA, A.DFECARGCRE, A.NNUMROLTIN,
           A.NRROTASCOM, A.NTASINTCOM, A.CCODUSUANA, A.NNUMDIAGRAAPR, A.CTIPCLIRE, A.CCODCORADE,
           A.CCODFICIN, A.CCODJEFEREGIONAL, A.CODADMINISTRADOR, A.CCODUSUANA, A.NNUEVEMAS, A.FECHAMIN, A.FECHAMAX,
           B1.CCONNIVEL, B1.CCODCLASUB, B1.NCODPAPAPR, B1.CDESCLAANA
    FROM STG_TEMP_DSOLICITUDT2 A
    LEFT JOIN STG_TEMP_DSOLICITUDAASCRIPTER B
        ON A.CCODUSUANA = B.CCODPERSON
       AND ISNULL(A.DFECAPRGRA, A.DFECARGCRE) BETWEEN B.DFINASCROT AND ISNULL(B.DFINSASCROT, GETDATE())
    LEFT JOIN STG_TEMP_DSOLICITUDTCLASUBNIV B1
        ON B.CCONNIVEL = B1.CCONNIVEL
       AND B.CCODSUBUNIV = B1.CCODSUBUNIV
       AND B.CCODCLASUB = B1.CCODCLASUB
       AND B.NCODPAPAPR = B1.NCODPAPAPR
) Z
WHERE NNUMORDREM = 1
GROUP BY Z.NNUMORDREM, Z.CCODSOLCRE, Z.CCODLINCRE, Z.CCODCLIENT, Z.CCODEXPCLI, Z.CCODESISOL, Z.CCODSITSOL,
         Z.CCODMONEDA, Z.GRUPOREDITO, Z.CTIPTASCOM, Z.CTIPASMOR, Z.NIVELAPROBACION, Z.CCODCOMITE, Z.CCODTIPCRE,
         Z.CCODPRODUC, Z.CCODSUBPRO, Z.CCODTIPREC, Z.CCODGRUSAN, Z.CCODMODCRE, Z.CCODCITSOL, Z.CCODMODDES,
         Z.CCODSITPOL, Z.CCDESCRITIP, Z.CCODMOTSOL, Z.DFECMOSOL, Z.NMONOSOLCRE, Z.DFECISOLCRE,
         Z.CCODUSUMOD, Z.CCMONEDAAPR, Z.NMONAPRCRE, Z.NNUMCUOAPR, Z.CTIPPERIODO, Z.CCDESPERIOD, Z.CCODTIPCUO,
         Z.CCDESCRICUO, Z.DFECSOLICUD2, Z.DFECAPRGRA, Z.DFECARGCRE, Z.NNUMROLTIN, Z.NRROTASCOM, Z.NTASINTCOM,
         Z.CCODJEFEREGIONAL, Z.CODADMINISTRADOR, Z.CCODUSUANA, Z.FECHAMIN, Z.FECHAMAX, Z.CCONNIVEL,
         Z.CCODCLASUB, Z.NCODPAPAPR, Z.CDESCLAANA
-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------------------------------------------



--66-----[dbo].[SP_KPY_DSOLICITUDESTADO_BDS]-----------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DSOLICITUDESTADO_BDS]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
       (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 18_BDS_DSOLICITUDESTADO
--===========================================================
MERGE BDS_BIACMACHYO.DBO.DSOLICITUDESTADO AS TARGET
USING STG_DSOLICITUDESTADO AS SOURCE
ON TARGET.CODSOLICITUDESTADO = SOURCE.CCODESOLSOL

WHEN MATCHED 
     AND (TARGET.DESOLICITUDESTADO <> SOURCE.CDESCRIEST)
THEN UPDATE
     SET TARGET.DESOLICITUDESTADO = SOURCE.CDESCRIEST,
         TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT
     (
        CODSOLICITUDESTADO,
        DESOLICITUDESTADO,
        FECULTACTUALIZACION
     )
     VALUES
     (
        SOURCE.CCODESOLSOL,
        SOURCE.CDESCRIEST,
        GETDATE()
     );

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-------------------------------------------------------------

--67---[dbo].[SP_KPY_DSOLICITUDESTADO_STG]------------
CREATE PROCEDURE [dbo].[SP_KPY_DSOLICITUDESTADO_STG]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
       (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 18_STG_DSOLICITUDESTADO
--===========================================================
TRUNCATE TABLE STG_DSOLICITUDESTADO

INSERT INTO STG_DSOLICITUDESTADO
SELECT cCodEstSol,
       CASE WHEN CDESCRIEST = '' OR CDESCRIEST IS NULL THEN '.'
            ELSE REPLACE(TRIM(CDESCRIEST), '  ', ' ') 
       END cDescriEst,
       GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYTEstSolCre

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-------------------------------------------------------------



--68--[DBO].[SP_KPY_DSOLICITUDSITUACION_BDS]-------------------
CREATE PROCEDURE [DBO].[SP_KPY_DSOLICITUDSITUACION_BDS]
AS
SET NOCOUNT ON
BEGIN

--============================================
-- INSERTA LOG CON EL INICIO EJECUCION
--============================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--============================================
-- 05_BDS_DSOLICITUDSITUACION
--============================================
MERGE BDS_BIACMACHYO.DBO.DSOLICITUDSITUACION AS TARGET
USING STG_DSOLICITUDSITUACION AS SOURCE
ON TARGET.CODSITUACIONSOLICITUD = SOURCE.cCodSitSol

WHEN MATCHED
    AND (TARGET.DESSITUACIONSOLICITUD <> SOURCE.cDesSitSol)
    THEN UPDATE 
        SET TARGET.DESSITUACIONSOLICITUD = SOURCE.cDesSitSol,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
    THEN INSERT (
        CODSITUACIONSOLICITUD,
        DESSITUACIONSOLICITUD,
        FECULTACTUALIZACION
    )
    VALUES (
        SOURCE.cCodSitSol,
        SOURCE.cDesSitSol,
        GETDATE()
    );

--============================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--============================================
UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------


--69--[DBO].[SP_KPY_DSOLICITUDSITUACION_STG]-------------------
CREATE PROCEDURE [DBO].[SP_KPY_DSOLICITUDSITUACION_STG]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- 05_STG_DSOLICITUDSITUACION
--===========================================================
TRUNCATE TABLE STG_DSOLICITUDSITUACION

INSERT INTO STG_DSOLICITUDSITUACION
SELECT 
    CCODSITSOL,
    CASE 
        WHEN CDESSITSOL = '' OR CDESSITSOL IS NULL THEN '.'
        ELSE REPLACE(TRIM(CDESSITSOL), '  ', ' ') 
    END AS CDESSITSOL,
    GETDATE() AS FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.KPYTESTSOLSIT

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
------------------------------------------------------------

--70--[dbo].[SP_KPY_DSUBGERENTETERRITORIAL_BDS]-------------------
CREATE PROCEDURE [dbo].[SP_KPY_DSUBGERENTETERRITORIAL_BDS]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- DSUBGERENTETERRITORIAL
--===========================================================
MERGE BDS_BIACMACHYO.DBO.DSUBGERENTETERRITORIAL AS TARGET
USING STG_DSUBGERENTETERRITORIAL AS SOURCE
ON TARGET.CODSUBGERENTETERRITORIAL = SOURCE.cCodPerson

WHEN MATCHED
    AND (TARGET.NOMSUBGERENTETERRITORIAL <> SOURCE.cNomPerson)
THEN UPDATE
    SET TARGET.NOMSUBGERENTETERRITORIAL = SOURCE.cNomPerson,
        TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
    CODSUBGERENTETERRITORIAL,
    NOMSUBGERENTETERRITORIAL,
    FECULTACTUALIZACION
)
VALUES (
    SOURCE.cCodPerson,
    SOURCE.cNomPerson,
    GETDATE()
);

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------


--71--[dbo].[SP_KPY_DSUBGERENTETERRITORIAL_STG]--------------
CREATE PROCEDURE [dbo].[SP_KPY_DSUBGERENTETERRITORIAL_STG]
AS
SET NOCOUNT ON
BEGIN

--===========================================================
-- INSERTA LOG CON EL INICIO EJECUCION
--===========================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

--===========================================================
-- SP_KPY_DSUBGERENTETERRITORIAL_STG
--===========================================================
TRUNCATE TABLE STG_DSUBGERENTETERRITORIAL

INSERT INTO STG_DSUBGERENTETERRITORIAL
SELECT 
    A.CCODPERSON,
    TRIM(A.CNOMPERSON) CNOMPERSON,
    GETDATE() FECULTACTUALIZACION
FROM SOFCMACHYO_BI_SNAP.DBO.SIMPERSONAL A
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPADSCRIPPER D (NOLOCK)
        ON A.CCODPERSON = D.CCODPERSON
        AND A.CCODGRUPER = D.CCODGRUPER
WHERE A.CCODGRUPER = '293'
  AND A.CCODESTPER = 'A'

--===========================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
--===========================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
    AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
    AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------


--72--[dbo].[SP_KPY_DSUBJEFETERRITORIALREC_BDS]---------------
CREATE PROCEDURE [dbo].[SP_KPY_DSUBJEFETERRITORIALREC_BDS]
AS
SET NOCOUNT ON
BEGIN

-- INSERTA LOG CON EL INICIO EJECUCION
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

MERGE BDS_BIACMACHYO.DBO.DSUBJEFETERRITORIALREC AS TARGET
USING STG_DSUBJEFETERRITORIALREC AS SOURCE
ON TARGET.PKSUBJEFETER = SOURCE.PKSUBJEFETER

WHEN MATCHED
    AND (
        TARGET.CODSUBJEFETER <> SOURCE.CODSUBJEFETER
     OR TARGET.NOMSUBJEFETER <> SOURCE.NOMSUBJEFETER
     OR TARGET.CODAGENCIA <> SOURCE.CODAGENCIA
     OR TARGET.LESTADOREG <> SOURCE.LESTADOREG )
    THEN UPDATE
        SET TARGET.CODSUBJEFETER = SOURCE.CODSUBJEFETER,
            TARGET.CODAGENCIA = SOURCE.CODAGENCIA,
            TARGET.LESTADOREG = SOURCE.LESTADOREG,
            TARGET.FECULTACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
     THEN INSERT (
        PKSUBJEFETER,
        CODSUBJEFETER,
        NOMSUBJEFETER,
        CODAGENCIA,
        LESTADOREG,
        FECULTACTUALIZACION
     )
     VALUES (
        SOURCE.PKSUBJEFETER,
        SOURCE.CODSUBJEFETER,
        SOURCE.NOMSUBJEFETER,
        SOURCE.CODAGENCIA,
        SOURCE.LESTADOREG,
        GETDATE()
     );

     -- ACTUALIZA LOG CON EL FIN EJECUCION
--=======================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
   SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)
--=======================================================
END

-----------------------------------------------------------



--73--[dbo].[SP_KPY_DSUBRECURSO_BDS]---------------
CREATE PROCEDURE [dbo].[SP_KPY_DSUBRECURSO_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

MERGE BDS_BIACMHAYCO.DBO.DSUBRECURSO AS TARGET
USING (
    SELECT 
        A.CCODRECURSO CODSUBRECURSO,
        A.DESSUBRECURSO DESSUBRECURSO,
        ISNULL(B.PKRECURSO, 0) PKRECURSO
    FROM STG_DSUBRECURSO A
    LEFT JOIN BDS_BIACMHAYCO.DBO.DRECURSO B
        ON A.CCODTIPREC = B.CCODRECURSO
) AS SOURCE
ON TARGET.CODSUBRECURSO = SOURCE.CODSUBRECURSO

WHEN MATCHED
    AND (TARGET.DESSUBRECURSO <> SOURCE.DESSUBRECURSO 
         OR TARGET.PKRECURSO <> SOURCE.PKRECURSO)
THEN UPDATE
    SET TARGET.DESSUBRECURSO = SOURCE.DESSUBRECURSO,
        TARGET.PKRECURSO = SOURCE.PKRECURSO,
        TARGET.FECACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODSUBRECURSO,
        DESSUBRECURSO,
        PKRECURSO,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CODSUBRECURSO,
        SOURCE.DESSUBRECURSO,
        SOURCE.PKRECURSO,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
----------------------------------------------------


--74--[dbo].[SP_KPY_DSUBRECURSO_STG]------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DSUBRECURSO_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

TRUNCATE TABLE STG_DSUBRECURSO

INSERT INTO STG_DSUBRECURSO
SELECT 
    cCodRecurso,
    cCodTipRec,
    cDesRecurso,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.KPYDRecurso

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
--------------------------------------------------------------------------


--75--[dbo].[SP_KPY_DTERRITORIO_STG]_---------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTERRITORIO_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

TRUNCATE TABLE STG_DTERRITORIO

INSERT INTO STG_DTERRITORIO
SELECT '01' CODTERRITORIO, 'TERRITORIO 01' DESTERRITORIO, GETDATE() FECACTUALIZACION
UNION ALL
SELECT '02', 'TERRITORIO 02', GETDATE() FECACTUALIZACION

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
--------------------------------------------------------------


--76--[dbo].[SP_KPY_DTIPOCREDITO_BDS]-----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOCREDITO_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPOCREDITO AS TARGET
USING STG_DTIPOCREDITO AS SOURCE
    ON TARGET.CODTIPOCREDITO = SOURCE.CCODTIPCRE
WHEN MATCHED
    AND (TARGET.DESTIPOCREDITO <> SOURCE.CDESTIPCRE)
THEN UPDATE
    SET TARGET.DESTIPOCREDITO  = SOURCE.CDESTIPCRE,
        TARGET.FECACTUALIZACION = GETDATE()
WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPOCREDITO,
        DESTIPOCREDITO,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CCODTIPCRE,
        SOURCE.CDESTIPCRE,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-------------------------------------------------------------

--77[dbo].[SP_KPY_DTIPOCREDITO_STG]------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOCREDITO_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPOCREDITO;

INSERT INTO STG_DTIPOCREDITO
SELECT DISTINCT 
    cCodTipCre,
    CASE 
        WHEN cDesTipCre = '' OR cDesTipCre IS NULL THEN '.'
        ELSE REPLACE(TRIM(cDesTipCre), '  ', ' ') 
    END AS cDesTipCre,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.KPYTsSubTipCre
WHERE iEstado = 1;

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
--------------------------------------------------

--78--[dbo].[SP_KPY_DTIPODOCUMENTOIDENTIDAD_BDS]--------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPODOCUMENTOIDENTIDAD_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPODOCUMENTOIDENTIDAD AS TARGET
USING STG_DTIPODOCUMENTOIDENTIDAD AS SOURCE
    ON TARGET.CODTIPODOCUMENTOIDENTIDAD = SOURCE.CCODTIPDOCID

WHEN MATCHED
    AND (TARGET.DESTIPODOCUMENTOIDENTIDAD <> SOURCE.CDESTIPDOCID)
THEN UPDATE
    SET TARGET.DESTIPODOCUMENTOIDENTIDAD = SOURCE.CDESTIPDOCID,
        TARGET.FECACTUALIZACION        = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPODOCUMENTOIDENTIDAD,
        DESTIPODOCUMENTOIDENTIDAD,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CCODTIPDOCID,
        SOURCE.CDESTIPDOCID,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
---------------------------------------------------------------


--79--[dbo].[SP_KPY_DTIPODOCUMENTOIDENTIDAD_STG]-------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPODOCUMENTOIDENTIDAD_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPODOCUMENTOIDENTIDAD;

INSERT INTO STG_DTIPODOCUMENTOIDENTIDAD
SELECT 
    cCodTipDocId,
    CASE 
        WHEN cDesTipDocId = '' OR cDesTipDocId IS NULL THEN '.'
        ELSE TRIM(REPLACE(cDesTipDocId, '  ', ' ')) 
    END AS cDesTipDocId,
    cDesCorta,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.GENTipDocIdc
WHERE iConEstado = 1;

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-----------------------------------------------------------------

--80--[dbo].[SP_KPY_DTIPOEXCEPCIONGARANTIA_BDS]-----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOEXCEPCIONGARANTIA_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPOEXCEPCIONGARANTIA AS TARGET
USING STG_DTIPOEXCEPCIONGARANTIA AS SOURCE
    ON TARGET.CODTIPOEXCEPCIONGARANTIA = SOURCE.CNOMBREPAR

WHEN MATCHED
    AND (TARGET.DESTIPOEXCEPCIONGARANTIA <> SOURCE.CDESPARCRE)
THEN UPDATE
    SET TARGET.DESTIPOEXCEPCIONGARANTIA = SOURCE.CDESPARCRE,
        TARGET.FECACTUALIZACION         = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPOEXCEPCIONGARANTIA,
        DESTIPOEXCEPCIONGARANTIA,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CNOMBREPAR,
        SOURCE.CDESPARCRE,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-----------------------------------------------------------------



--81--[dbo].[SP_KPY_DTIPOEXCEPCIONGARANTIA_STG]----------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOEXCEPCIONGARANTIA_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPOEXCEPCIONGARANTIA;

INSERT INTO STG_DTIPOEXCEPCIONGARANTIA
SELECT 
    cNombrePar,
    CASE 
        WHEN cDesParCre = '' OR cDesParCre IS NULL THEN '.'
        ELSE REPLACE(TRIM(cDesParCre), '  ', ' ') 
    END AS cDesParCre,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.KPYTIPDESPARCRE
WHERE cNombrePar IS NOT NULL;

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-----------------------------------------------------------------



--82--[dbo].[SP_KPY_DTIPOEXCEPCIONPARAMETRO_BDS]---------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOEXCEPCIONPARAMETRO_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPOEXCEPCIONPARAMETRO AS TARGET
USING STG_DTIPOEXCEPCIONPARAMETRO AS SOURCE
    ON TARGET.CODTIPOVALIDACION     = SOURCE.CNTIPVALIDA
   AND TARGET.CODPARAMETRO          = SOURCE.CNCODPAREVA
   AND TARGET.CODTIPOEXCEPCIONPARAMETRO = SOURCE.CPAREVAAL

WHEN MATCHED
    AND (TARGET.DESTIPOEXCEPCIONPARAMETRO <> SOURCE.CDESEVAAL)
THEN UPDATE
    SET TARGET.DESTIPOEXCEPCIONPARAMETRO = SOURCE.CDESEVAAL,
        TARGET.FECACTUALIZACION          = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPOVALIDACION,
        CODPARAMETRO,
        CODTIPOEXCEPCIONPARAMETRO,
        DESTIPOEXCEPCIONPARAMETRO,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CNTIPVALIDA,
        SOURCE.CNCODPAREVA,
        SOURCE.CPAREVAAL,
        SOURCE.CDESEVAAL,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-----------------------------------------------------------------


--83--[dbo].[SP_KPY_DTIPOEXCEPCIONPARAMETRO_STG]---------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOEXCEPCIONPARAMETRO_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPOEXCEPCIONPARAMETRO;

INSERT INTO STG_DTIPOEXCEPCIONPARAMETRO
SELECT 
    nTipValida,
    nCodParEva,
    cParEvaVal,
    CASE 
        WHEN cDesEvaVal = '' OR cDesEvaVal IS NULL THEN '.'
        ELSE REPLACE(TRIM(cDesEvaVal), '  ', ' ') 
    END AS cDesEvaVal,
    GETDATE() AS FECACTUALIZACION,
    iEstEvaVal
FROM SOFCMACHO_BI_SNAP.DBO.GENTParEvaVal
WHERE (nTipValida IS NOT NULL)
  AND (cParEvaVal IS NOT NULL)
  AND (
        (nTipValida = 3) OR NOT (cParEvaVal LIKE '%NumCuopAgr%' OR NOT 
        ((LEN(cDesEvaVal) < 14) AND (NOT (nTipValida = 3)) OR NOT 
        (cParEvaVal LIKE '%nPlaMesSinGra%' OR NOT 
        (iEstEvaVal = 0) AND (NOT (nTipValida = 2)) OR NOT 
        (cParEvaVal LIKE '%nNumMaxCreVig%') OR NOT 
        (iEstEvaVal = 0)))
      );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
---------------------------------------------------------------

--84---[dbo].[SP_KPY_DTIPOINGRESO_BDS]-----------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOINGRESO_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPOINGRESO AS TARGET
USING STG_DTIPOINGRESO AS SOURCE
    ON TARGET.CODTIPOINGRESO = SOURCE.CODTIPOINGRESO

WHEN MATCHED
    AND (TARGET.DESTIPOINGRESO <> SOURCE.DESTIPOINGRESO)
THEN UPDATE
    SET TARGET.DESTIPOINGRESO = SOURCE.DESTIPOINGRESO,
        TARGET.FECACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPOINGRESO,
        DESTIPOINGRESO,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CODTIPOINGRESO,
        SOURCE.DESTIPOINGRESO,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
--------------------------------------------

--85--[dbo].[SP_KPY_DTIPOINGRESO_STG]----------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOINGRESO_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPOINGRESO;

INSERT INTO STG_DTIPOINGRESO (CODTIPOINGRESO, DESTIPOINGRESO, FECACTUALIZACION)
SELECT 
    A.cCodTipFin,
    CASE 
        WHEN ISNULL(A.cDesFueIng, '') = '' THEN '.'
        ELSE REPLACE(TRIM(A.cDesFueIng), '  ', ' ')
    END,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.dbo.GENTipFueIng A
WHERE A.cCodTipFin != 'X'
UNION
SELECT 'M', 'MIXTO', GETDATE();

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
---------------------------------------------------


--86--[dbo].[SP_KPY_DTIPOOPERACION_BDS]---------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOOPERACION_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPOOPERACION AS TARGET
USING STG_DTIPOOPERACION AS SOURCE
    ON TARGET.CODTIPOPERACION = SOURCE.CCODTIPOPE

WHEN MATCHED
    AND (TARGET.DESTIPOOPERACION <> SOURCE.CDESTIPOPE)
THEN UPDATE
    SET TARGET.DESTIPOOPERACION = SOURCE.CDESTIPOPE,
        TARGET.FECACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPOPERACION,
        DESTIPOOPERACION,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CCODTIPOPE,
        SOURCE.CDESTIPOPE,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
--------------------------------------------------------

--87--[dbo].[SP_KPY_DTIPOOPERACION_STG]----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOOPERACION_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPOOPERACION;

INSERT INTO STG_DTIPOOPERACION
SELECT DISTINCT 
    CCODTIPOPE,
    CASE 
        WHEN CDESTIPOPE = '' OR CDESTIPOPE IS NULL THEN '.'
        ELSE REPLACE(TRIM(CDESTIPOPE), '  ', ' ') 
    END AS CDESTIPOPE,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.GENTTipOperac
WHERE cCodTipKar = 'KPY';

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-------------------------------------------------------


--88-[dbo].[SP_KPY_DTIPOTASA_BDS]--------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOTASA_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPOTASA AS TARGET
USING STG_DTIPOTASA AS SOURCE
    ON TARGET.CODTIPOTASA = SOURCE.CCODTIPTAS

WHEN MATCHED
    AND (TARGET.DESTIPOTASA <> SOURCE.CDESITIPAS)
THEN UPDATE
    SET TARGET.DESTIPOTASA      = SOURCE.CDESITIPAS,
        TARGET.FECACTUALIZACION = GETDATE()

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPOTASA,
        DESTIPOTASA,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CCODTIPTAS,
        SOURCE.CDESITIPAS,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
---------------------------------------------------------


--89--[dbo].[SP_KPY_DTIPOTASA_STG]---------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOTASA_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPOTASA;

INSERT INTO STG_DTIPOTASA
SELECT 
    cCodTipTas,
    CASE 
        WHEN cDesTipTas = '' OR cDesTipTas IS NULL THEN '.'
        ELSE REPLACE(TRIM(cDesTipTas), '  ', ' ')
    END AS cDesTipTas,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.KPYTTipTasInt;

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
---------------------------------------------------


--90--[dbo].[SP_KPY_DTIPOVIA_BDS]-----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOVIA_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

MERGE BDS_BIACMHAYCO.DBO.DTIPOVIA AS TARGET
USING STG_DTIPOVIA AS SOURCE
    ON TARGET.CODTIPOVIA = SOURCE.cCodTipVia
WHEN MATCHED
    AND (TARGET.DESTIPOVIA <> SOURCE.cNomTipVia
         OR TARGET.ABRITPOVIA <> SOURCE.cAbrvTipVia)
THEN UPDATE
    SET TARGET.DESTIPOVIA       = SOURCE.cNomTipVia,
        TARGET.ABRITPOVIA       = SOURCE.cAbrvTipVia,
        TARGET.FECACTUALIZACION = GETDATE()
WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODTIPOVIA,
        DESTIPOVIA,
        ABRITPOVIA,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.cCodTipVia,
        SOURCE.cNomTipVia,
        SOURCE.cAbrvTipVia,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-------------------------------------------------

--91--[dbo].[SP_KPY_DTIPOVIA_STG]-------------------
CREATE PROCEDURE [dbo].[SP_KPY_DTIPOVIA_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DTIPOVIA;

INSERT INTO STG_DTIPOVIA
SELECT 
    cCodTipVia,
    CASE 
        WHEN cNomTipVia = '' OR cNomTipVia IS NULL THEN '.'
        ELSE REPLACE(TRIM(cNomTipVia), '  ', ' ')
    END AS cNomTipVia,
    CASE 
        WHEN cAbrvTipVia = '' OR cAbrvTipVia IS NULL THEN '.'
        ELSE REPLACE(TRIM(cAbrvTipVia), '  ', ' ')
    END AS cAbrvTipVia,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.GENTTipVia;

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-----------------------------------------------------------


--92--[dbo].[SP_KPY_DUBIGEO_BDS]-----------------------
CREATE PROCEDURE [dbo].[SP_KPY_DUBIGEO_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

--BDS_BIACMHAYCO.DBO.DUBIGEO
MERGE BDS_BIACMHAYCO.DBO.DUBIGEO AS TARGET
USING STG_DUBIGEO AS SOURCE
    ON  TARGET.CODDEPARTAMENTO = SOURCE.CCODDEPART
    AND TARGET.CODPROVINCIA    = SOURCE.CCODPROVIN
    AND TARGET.CODDISTRITO     = SOURCE.CCODDISTRI
    AND TARGET.CODZONA         = SOURCE.CCODZONA
WHEN MATCHED
    AND (   TARGET.DESDEPARTAMENTO <> SOURCE.CNOMDEPART
         OR TARGET.DESPROVINCIA    <> SOURCE.CNOMPROVIN
         OR TARGET.DESDISTRITO     <> SOURCE.CNOMDISTRI
         OR TARGET.DESZONA         <> SOURCE.CNOMZONA )
THEN UPDATE
    SET TARGET.DESDEPARTAMENTO = SOURCE.CNOMDEPART,
        TARGET.DESPROVINCIA    = SOURCE.CNOMPROVIN,
        TARGET.DESDISTRITO     = SOURCE.CNOMDISTRI,
        TARGET.DESZONA         = SOURCE.CNOMZONA,
        TARGET.FECACTUALIZACION = GETDATE()
WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODDEPARTAMENTO,
        DESDEPARTAMENTO,
        CODPROVINCIA,
        DESPROVINCIA,
        CODDISTRITO,
        DESDISTRITO,
        CODZONA,
        DESZONA,
        FECACTUALIZACION
    )
    VALUES (
        SOURCE.CCODDEPART,
        SOURCE.CNOMDEPART,
        SOURCE.CCODPROVIN,
        SOURCE.CNOMPROVIN,
        SOURCE.CCODDISTRI,
        SOURCE.CNOMDISTRI,
        SOURCE.CCODZONA,
        SOURCE.CNOMZONA,
        GETDATE()
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
-----------------------------------------------


--93---[dbo].[SP_KPY_DUBIGEO_STG]-----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DUBIGEO_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DUBIGEO;

INSERT INTO STG_DUBIGEO
SELECT 
    A.cCodDepart,
    A.cNomDepart,
    B.cCodProvin,
    B.cNomProvin,
    C.cCodDistri,
    C.cNomDistri,
    D.cCodZona,
    TRIM(D.cNomZona) AS cNomZona,
    GETDATE() AS FECACTUALIZACION
FROM SOFCMACHO_BI_SNAP.DBO.GENTDepartame AS A
INNER JOIN SOFCMACHO_BI_SNAP.DBO.GENTProvincia AS B
    ON A.cCodDepart = B.cCodDepart
INNER JOIN SOFCMACHO_BI_SNAP.DBO.GENTDistrito AS C
    ON B.cCodDepart = C.cCodDepart 
   AND B.cCodProvin = C.cCodProvin
INNER JOIN SOFCMACHO_BI_SNAP.DBO.GENTZona AS D
    ON C.cCodDepart = D.cCodDepart
   AND C.cCodProvin = D.cCodProvin
   AND C.cCodDistri = D.cCodDistri;

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
------------------------------------------------------------



--94--[dbo].[SP_KPY_DZONA_BDS]----------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DZONA_BDS]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

DROP TABLE IF EXISTS #STG_DZONA;

SELECT 
    A.nCodZona,
    A.cDesZona,
    B.CODTERRITORIO,
    B.DESTERRITORIO,
    A.FECACTUALIZACION,
    A.nOrdVisual
INTO #STG_DZONA
FROM STG_DZONA A
INNER JOIN BDS_BIACMHAYCO.DBO.DZONATERRITORIO B
    ON A.nCodZona = B.CODZONA;

MERGE BDS_BIACMHAYCO.DBO.DZONA AS TARGET
USING #STG_DZONA AS SOURCE
    ON TARGET.CODZONA = SOURCE.nCodZona

WHEN MATCHED
    AND (   TARGET.DESZONA      <> SOURCE.cDesZona
         OR TARGET.CODTERRITORIO <> SOURCE.CODTERRITORIO
         OR TARGET.DESTERRITORIO <> SOURCE.DESTERRITORIO
         OR TARGET.NORDENZONA    <> SOURCE.nOrdVisual )
THEN UPDATE
    SET TARGET.DESZONA         = SOURCE.cDesZona,
        TARGET.CODTERRITORIO   = SOURCE.CODTERRITORIO,
        TARGET.DESTERRITORIO   = SOURCE.DESTERRITORIO,
        TARGET.FECACTUALIZACION = GETDATE(),
        TARGET.NORDENZONA      = SOURCE.nOrdVisual

WHEN NOT MATCHED BY TARGET
THEN INSERT (
        CODZONA,
        DESZONA,
        CODTERRITORIO,
        DESTERRITORIO,
        FECACTUALIZACION,
        NORDENZONA
    )
    VALUES (
        SOURCE.nCodZona,
        SOURCE.cDesZona,
        SOURCE.CODTERRITORIO,
        SOURCE.DESTERRITORIO,
        GETDATE(),
        SOURCE.nOrdVisual
    );

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
---------------------------------------------------

--95--[dbo].[SP_KPY_DZONA_STG]-----------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_DZONA_STG]
AS
SET NOCOUNT ON
BEGIN

INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

TRUNCATE TABLE STG_DZONA;

INSERT INTO STG_DZONA
SELECT 
    nCodZona,
    cDesZona,
    GETDATE() AS FECACTUALIZACION,
    nOrdVisual
FROM SOFCMACHO_BI_SNAP.DBO.GENTZONAS;

UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE);

END
----------------------------------------------------------------

--96--[dbo].[SP_KPY_FAGCUENTACREDITO_BDS]--------------------------
CREATE PROCEDURE [dbo].[SP_KPY_FAGCUENTACREDITO_BDS]
AS
SET NOCOUNT ON
BEGIN
    -- ================================================================
    -- INSERTA LOG CON EL INICIO EJECUCION
    -- ================================================================
    INSERT INTO CONTROL_EJECUCION_MALLA_DS
        (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
    VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

    DECLARE @V_PERIODOMES INT = CAST(FORMAT(DATEADD(D,-1,GETDATE()), 'yyyyMM') AS INT),
            @V_TIPOCAMBIO NUMERIC(16,4)

    SELECT @V_TIPOCAMBIO = CVALVARAPL
    FROM HYO804A4.SOFCMACHYO_BI_SNAP.DBO.ADMWVARIABLE
    WHERE CNOMVARAPL = 'GNTIPCAMFIJ'
      AND CCDOFICIN = '002'

    DROP TABLE IF EXISTS #STG_FAGCTACRE3
    SELECT 
        [PERIODOMES] = @V_PERIODOMES,
        [PKCUENTACREDITO],
        [PKCLIENTE],
        [PKSOLICITUD],
        [PKESTADOCREDITO],
        [PKPRODUCTO],
        [PKRECURSO],
        [PKSUBRECURSO],
        [PKMONEDA],
        [PKMODALIDAD],
        [PKTIPOTASACOMPENSATORIA],
        [PKTIPOTASAMORATORIA],
        [PKGRUPOCREDITO],
        [PKACTIVIDADECONOMICACC],
        [PKCONDICIONCONTABLE],
        [PKCALIFICACIONCREDITICAINTERNA],
        [PKCALIFICACIONCREDITICAEXTERNA],
        [PKAGENCIA],
        [PKTIPOTASACOMPENSATORIAJUDICIAL],
        [PKTIPOTASAMORATORIAJUDICIAL],
        [PKJEFEREGIONAL],
        [PKADMINISTRADOR],
        [PKASESOR],
        [PKASESORNVIEL],
        [NROCUOTAS],
        [NRODIAS],
        [NRODIASGRACIA],
        [NRONROGRAMA],
        [DIAFECHAFIJA],
        [CODTIPOCUOTA],
        [CODTIPOPERIDOC],
        [CODPLAZO],
        [CODDESEMBOLSOCREDITO],
        [CODLINEACREDITO],
        [NROTASACOMPENSATORIA],
        [TASAINTERESCOMPENSATORIA],
        [NROTASAMORATORIA],
        [TASAINTERESAMORATORIA],
        [DIASTATRASOCREDITO],
        [FECHACULMINACIONCREDITO],
        [FECHAIGENERACIONCREDITO],
        [FECHADESMBOLSOCREDITO],
        [TIPOCAMBIODESEMBOLSO],
        [CODCUENTAANORMAL],
        [CODCUENTAVENCIDO],
        [FLAGLIBREAMORTIZACION],
        [FLAGREFINANCIADO],
        [FLAGREESTRUCTURADO],
        [FLAGREPROGRAMADO],
        [FLAGJUDICIAL],
        [FLAGCASTIGADO],
        [FLAGNUEVORECURRENTTE],
        [FLAGCLIENTENUEVOCAJAHUANCAYO],
        [FLAGCLIENTENUEVO],
        [FLAGCLIENTECARTERA],
        [DESTIPOCREDITO_HIS],
        [DESPRODUCTO_HIS],
        [DESUBTIPPRODUCTO_HIS],
        [MONTOAPROBADCREDITO],
        [MONTOCAPITALDESEMBOLSADO],
        [MONTOCAPITALPAGADO],
        [MONTOINTERESPAGADO],
        [MONTOINTERESPROGRAMADO],
        [MONTOINTERESALAFECHA],
        [MONTOINTERESPAGADOJUDICIAL],
        [MONTOINTERESCOMPENSATORIO],
        [MONTOGASTOPROGRAMADO],
        [MONTOGASTOPAGADO],
        [MONTOGASTOPAGADOJUDICIAL],
        [MONTOINTERESMORATORIO],
        [MONTOINTERESGENERADO],
        [MONTOINTERESGENERADOJUDICIAL],
        [MONTOINTERESCASTIGADO],
        [MONTOINTERESANULADO],
        [MONTOINTERESREFINANCIADO],
        [MONTOSALDONORMAL],
        [MONTOSALDOVENCIDO],
        [MONTOCASTIGADO],
        [MONTOGASTOGENERADO],
        [MONTOCAPITALINICIO],
        [MONTOCAPITALINICIOJUDICIAL],
        [MONTOSALDOINTERES],
        [MONTOSALDOMORATORIO],
        [MONTOSALDOGASTO],
        [MONTOSALDOCAPITALJUD],
        [MONTOSALDOCASTIGADO],
        [MONTOSALDOVENCIDOMORATORIO],
        [MONTOSALDOVENCIDOINTERES],
        [MONTOCASTIGADOJUDICIAL],
        [MONTOCAPITALCASTIGADO],
        [MONTOINTERESCASTIGADO],
        [MONTOSALDOCAPITAL],
        [SALDODEFERIDOPRODERANARIO] = 0,
        [SALDODEFERIDOPROAMPLIADOS] = 0,
        [SALDODEFERIDOPRODUCTOS] = 0,
        [SALDODEFERIDOCOMISIONES] = 0,
        [SALDODEFERIDOGASTOSCARTAFIANZA] = 0,
        [SALDODEFERIDOGASTOSVARIOSLEASING] = 0,
        [SALDODEVENEGADO] = ISNULL(NINTEGOVA, 0),
        [CODCUENTAVENCIDOMONEDA] = ISNULL(CODCUENTAVENCIDOMONEDA, '.'),
        [SALDOPROVISIONGENERICA] = ISNULL(NMONOPROACT_P1 * CASE WHEN PKMONEDA = 1 THEN 1 ELSE @V_TIPOCAMBIO END, 0),
        [SALDOPROVISIONESPECIFICA] = ISNULL(NMONOPROACT_P2 * CASE WHEN PKMONEDA = 1 THEN 1 ELSE @V_TIPOCAMBIO END, 0),
        [SALDOPROVISIONPROCCLICA] = ISNULL(NMONOPROACT_P3 * CASE WHEN PKMONEDA = 1 THEN 1 ELSE @V_TIPOCAMBIO END, 0),
        [SALDOPROVISIONGENERICAUS] = ISNULL(NMONOPROACT_S1 * CASE WHEN PKMONEDA = 1 THEN 1 ELSE @V_TIPOCAMBIO END, 0),
        [SALDOPROVISIONESPECIFICAUS] = ISNULL(NMONOPROACT_S2 * CASE WHEN PKMONEDA = 1 THEN 1 ELSE @V_TIPOCAMBIO END, 0),
        [SALDOPROVISIONPROCCLICAUS] = ISNULL(NMONOPROACT_S3 * CASE WHEN PKMONEDA = 1 THEN 1 ELSE @V_TIPOCAMBIO END, 0),
        [PKABOGADOJUD] = ISNULL(PKABOGADOJUD, 0),
        [NROCREDITOSENTRADA] = ISNULL(NROCREDITOSENTRADA, 0),
        [SALDOCAPITALPAGADOJUDICIALVENTA] = ISNULL(SALDOCAPITALPAGADOJUDICIALVENTA, 0),
        [SALDOINTERESPAGADOJUDICIALVENTA] = ISNULL(SALDOINTERESPAGADOJUDICIALVENTA, 0),
        [SALDOMORAPAGADOJUDICIALVENTA] = ISNULL(SALDOMORAPAGADOJUDICIALVENTA, 0),
        [SALDOGASTOPAGADOJUDICIALVENTA] = ISNULL(SALDOGASTOPAGADOJUDICIALVENTA, 0),
        [NROCREDITOSCAPTURAJUDICIAL] = ISNULL(NROCREDITOSCAPTURAJUDICIAL, 0),
        [MONTOCAPITALINICIOJUDICIAL] = ISNULL(MONTOCAPITALINICIOJUDICIAL, 0),
        [NROCREDITOSCANCELADOSJUD] = ISNULL(NROCREDITOSCANCELADOSJUD, 0),
        [NROCREDITOSRECUPERADOSJUD] = ISNULL(NROCREDITOSRECUPERADOSJUD, 0),
        [CODCUENTACONTABLE43] = ISNULL(CODCUENTACONTABLE43, '.'),
        [MONTODEBEPROVISIONGENERICA43] = ISNULL(MONTODEBEPROVISIONGENERICA43, 0),
        [MONTOHABERPROVISIONGENERICA43] = ISNULL(MONTOHABERPROVISIONGENERICA43, 0),
        [MONTODEBEPROVISIONESPECIFICA43] = ISNULL(MONTODEBEPROVISIONESPECIFICA43, 0),
        [MONTOHABERPROVISIONESPECIFICA43] = ISNULL(MONTOHABERPROVISIONESPECIFICA43, 0),
        [MONTODEBEPROVISIONPROCCLICA43] = ISNULL(MONTODEBEPROVISIONPROCCLICA43, 0),
        [MONTOHABERPROVISIONPROCCLICA43] = ISNULL(MONTOHABERPROVISIONPROCCLICA43, 0),
        [CODCUENTACONTABLE54] = ISNULL(CODCUENTACONTABLE54, '.'),
        [MONTODEBEPROVISIONGENERICA54] = ISNULL(MONTODEBEPROVISIONGENERICA54, 0),
        [MONTOHABERPROVISIONGENERICA54] = ISNULL(MONTOHABERPROVISIONGENERICA54, 0),
        [MONTODEBEPROVISIONESPECIFICA54] = ISNULL(MONTODEBEPROVISIONESPECIFICA54, 0),
        [MONTOHABERPROVISIONESPECIFICA54] = ISNULL(MONTOHABERPROVISIONESPECIFICA54, 0),
        [MONTODEBEPROVISIONPROCCLICA54] = ISNULL(MONTODEBEPROVISIONPROCCLICA54, 0),
        [MONTOHABERPROVISIONPROCCLICA54] = ISNULL(MONTOHABERPROVISIONPROCCLICA54, 0),
        [CODCUENTACONTABLE43SUS] = ISNULL(CODCUENTACONTABLE43SUS, '.'),
        [MONTODEBEPROVISIONGENERICA43SUS] = ISNULL(MONTODEBEPROVISIONGENERICA43SUS, 0),
        [MONTOHABERPROVISIONGENERICA43SUS] = ISNULL(MONTOHABERPROVISIONGENERICA43SUS, 0),
        [MONTODEBEPROVISIONESPECIFICA43SUS] = ISNULL(MONTODEBEPROVISIONESPECIFICA43SUS, 0),
        [MONTOHABERPROVISIONESPECIFICA43SUS] = ISNULL(MONTOHABERPROVISIONESPECIFICA43SUS, 0),
        [MONTODEBEPROVISIONPROCCLICA43SUS] = ISNULL(MONTODEBEPROVISIONPROCCLICA43SUS, 0),
        [MONTOHABERPROVISIONPROCCLICA43SUS] = ISNULL(MONTOHABERPROVISIONPROCCLICA43SUS, 0),
        [CODCUENTACONTABLE54SUS] = ISNULL(CODCUENTACONTABLE54SUS, '.'),
        [MONTODEBEPROVISIONGENERICA54SUS] = ISNULL(MONTODEBEPROVISIONGENERICA54SUS, 0),
        [MONTOHABERPROVISIONGENERICA54SUS] = ISNULL(MONTOHABERPROVISIONGENERICA54SUS, 0),
        [MONTODEBEPROVISIONESPECIFICA54SUS] = ISNULL(MONTODEBEPROVISIONESPECIFICA54SUS, 0),
        [MONTOHABERPROVISIONESPECIFICA54SUS] = ISNULL(MONTOHABERPROVISIONESPECIFICA54SUS, 0),
        [MONTODEBEPROVISIONPROCCLICA54SUS] = ISNULL(MONTODEBEPROVISIONPROCCLICA54SUS, 0),
        [MONTOHABERPROVISIONPROCCLICA54SUS] = ISNULL(MONTOHABERPROVISIONPROCCLICA54SUS, 0),
        PKRANGODESEMBOLSO = CASE
            WHEN MONTOCAPITALDESEMBOLSADO <= 1000.0000 THEN 1
            WHEN MONTOCAPITALDESEMBOLSADO > 1000.0000  AND MONTOCAPITALDESEMBOLSADO <= 5000.0000 THEN 2
            WHEN MONTOCAPITALDESEMBOLSADO > 5000.0000  AND MONTOCAPITALDESEMBOLSADO <= 10000.0000 THEN 3
            WHEN MONTOCAPITALDESEMBOLSADO > 10000.0000 AND MONTOCAPITALDESEMBOLSADO <= 20000.0000 THEN 4
            WHEN MONTOCAPITALDESEMBOLSADO > 20000.0000 AND MONTOCAPITALDESEMBOLSADO <= 40000.0000 THEN 5
            WHEN MONTOCAPITALDESEMBOLSADO > 40000.0000 AND MONTOCAPITALDESEMBOLSADO <= 60000.0000 THEN 6
            WHEN MONTOCAPITALDESEMBOLSADO > 60000.0000 AND MONTOCAPITALDESEMBOLSADO <= 80000.0000 THEN 7
            WHEN MONTOCAPITALDESEMBOLSADO > 80000.0000 AND MONTOCAPITALDESEMBOLSADO <= 100000.0000 THEN 8
            WHEN MONTOCAPITALDESEMBOLSADO > 100000.0000 AND MONTOCAPITALDESEMBOLSADO <= 150000.0000 THEN 9
            WHEN MONTOCAPITALDESEMBOLSADO > 150000.0000 AND MONTOCAPITALDESEMBOLSADO <= 300000.0000 THEN 10
            WHEN MONTOCAPITALDESEMBOLSADO > 300000.0000 AND MONTOCAPITALDESEMBOLSADO <= 500000.0000 THEN 11
            WHEN MONTOCAPITALDESEMBOLSADO > 500000.0000 THEN 12
        END
    INTO #STG_FAGCTACRE3
    FROM STG_FAGCUENTACREDITO_3

    DELETE FROM BDS_BIACMACHYO.DBO.FAGCUENTACREDITO
    WHERE PERIODOMES = @V_PERIODOMES

    INSERT INTO BDS_BIACMACHYO.DBO.FAGCUENTACREDITO
    SELECT * FROM #STG_FAGCTACRE3

    -- ================================================================
    -- ACTUALIZA LOG CON EL FIN EJECUCION
    -- ================================================================
    UPDATE CONTROL_EJECUCION_MALLA_DS
    SET FECHAHORA_FIN = GETDATE()
    WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
      AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
      AND FECHA_PROCESO = CAST(GETDATE() AS DATE)
END
----------------------------------------------------------------


--97--[dbo].[SP_KPY_FAGCUENTACREDITO_STG]---------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_FAGCUENTACREDITO_STG]
AS
SET NOCOUNT ON
BEGIN

-- ===============================================================
-- INSERTA LOG CON EL INICIO EJECUCION
-- ===============================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
    (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())
-- ===============================================================

-- ===============================================================
DECLARE @FECHACARGA DATE = DATEADD(D,-1,GETDATE())

DECLARE @N_PERIODOMES INT, @N_PERIODODIA INT,
        @N_PERIODODIA_INI INT, @N_PERIODODIA_FIN INT,
        @F_PERIODODIA_INI DATE, @F_PERIODODIA_FIN DATE

SET @N_PERIODOMES = CAST(FORMAT(@FECHACARGA, 'yyyyMM') AS INT)
SET @N_PERIODODIA = CAST(FORMAT(@FECHACARGA, 'yyyyMMdd') AS INT)
SET @N_PERIODODIA_INI = CAST(FORMAT(DATEADD(D,1,EOMONTH(@FECHACARGA,-1)), 'yyyyMMdd') AS INT)
SET @N_PERIODODIA_FIN = CAST(FORMAT(@FECHACARGA, 'yyyyMMdd') AS INT)
SET @F_PERIODODIA_INI = DATEADD(D,1,EOMONTH(@FECHACARGA,-1))
SET @F_PERIODODIA_FIN = EOMONTH(@FECHACARGA)

TRUNCATE TABLE STG_TEMP_FAGCUENTACREDITO01

INSERT INTO STG_TEMP_FAGCUENTACREDITO01
SELECT [PERIODODIA] , [PKCUENTACREDITO] , [PKCLIENTE] , [PKSOLICITUD] , [PKESTADOCREDITO] , [PKPRODUCTO] ,
       [PKRECURSO] , [PKSURECURSO] , [PKMONEDA] , [PKMODALIDAD] , [PKTIPOTASACOMPENSATORIA] , [PKTIPOTASAMORATORIA] ,
       [PKGRUPOCREDITO] , [PKACTIVIDADECONOMICAACC] , [PKCONDICIONCONTABLE] , [PKCALIFICACIONCREDITICIAINTERNA] ,
       [PKCALIFICACIONCREDITICIAEXTERNA] , [PKAGENCIA] , [PKTIPOTASACOMPENSATORIAJUDICIAL] , [PKTIPOTASAMORATORIAJUDICIAL] ,
       [PKJEFEREGIONAL] , [PKADMINISTRADOR] , [PKASESOR] , [PKASESORNIVEL] , [NROCUOTAS] , [NRODIAS] , [NRODIASGRACIA] ,
       [NROCRONOGRAMA] , [DIAFECHAFIJA] , [CODTIPOCUOTA] , [CODTIPOPERIODO] , [CODPLAZO] , [CODDESEMBOLSOCREDITO] ,
       [NOTASACOMPENSATORIA] , [TASAINTERESCOMPENSATORIA] , [TASAINTERESMORATORIA] , [DIASATRASOCREDITO] ,
       [FECHACULMINACIONCREDITO] , [FECHAGENERACIONCREDITO] , [FECHADESEMBOLSOCREDITO] , [TIPOCAMBIODESembolso] ,
       [CODCUENTANORMAL] , [CODCUENTAVENCIDO] , [FLAGLIBREAMORTIZACION] , [FLAGREFINANCIADO] , [FLAGREESTRUCTURADO] ,
       [FLAGREPROGRAMADO] , [FLAGJUDICIAL] , [FLAGCASTIGADO] , [FLAGNUEVOCURRENTE] , [FLAGCLIENTENUEVOCAJAHUANCAYO] ,
       [FLAGCLIENTENUEVO] , [FLAGCLIENTECARTERA] , [DESTITROCREDITO_HIS] , [DESPRODUCTO_HIS] , [DESSUBPRODUCTO_HIS] ,
       [MONTOPROBADCREDITO] , [MONTOCAPITALDESEMBOLSADO] , [MONTOCAPITALPAGADO] , [MONTOINTERESPROGRAMADO] ,
       [MONTOINTERESALAFECHA] , [MONTOINTERESPAGADO] , [MONTOINTERESPROGRAMADA] , [MONTOGASTOPAGADO] ,
       [MONTOSALDONORMAL] , [MONTOSALDOVENCIDO] , [MONTOCOSTOEFECTIVO] , [FECHAINGRESOJUDICIAL] , [MONTOCAPITALINICIO] ,
       [MONTOINTERESINICIO] , [MONTOMORAANTICIPO] , [MONTOMORACOSTOINICIO] , [NRODIASATRASOINICIO] , [MONTOINTERESGENERADO] ,
       [MONTOMORAGENERADO] , [MONTOGASTOGENERADO] , [MONTOSALDOCAPITALJUD] , [MONTOSALDOINTERES] , [MONTOSALDOMORATORIO] ,
       [MONTOSALDOGASTOS] , [MONTOCAPITALPAGADOJUDICIAL] , [MONTOINTERESPAGADOJUDICIAL] , [MONTOMORAPAGADOJUDICIAL] ,
       [MONTOMORAPAGADOJUDICIAL] , [TASAINTERESCOMPENSATORIAJUDICIAL] , [TASAINTERESCOMPENSATORIAJUDICIAL] ,
       [COODORRELACIONPAGO] , [MONTOCAPITALCASTIGADO] , [MONTOINTERESCASTIGADO] , [MONTOMORACASTIGADO] ,
       [MONTOGASTOCASTIGADO] , [FECHACASTIGOCRÉDITO] , [CODMOVITOCANCELACION] , [CAR_VIG_CAPITAL] , [CAR_VIG_INT_COMPENSATORIO] ,
       [CAR_VIG_INT_MORATORIO] , [CAR_VIG_GASTOS] , [CAR_VEN_CAPITAL] , [CAR_VEN_INT_COMPENSATORIO] , [CAR_VEN_INT_MORATORIO] ,
       [CAR_VEN_GASTOS] , [CAR_REF_CAPITAL] , [CAR_REF_INT_COMPENSATORIO] , [CAR_REF_INT_MORATORIO] , [CAR_REF_GASTOS] ,
       [CAR_REP_CAPITAL] , [CAR_REP_INT_COMPENSATORIO] , [CAR_REP_INT_MORATORIO] , [CAR_REP_GASTOS] , [CAR_AMP_CAPITAL] ,
       [CAR_AMP_INT_COMPENSATORIO] , [CAR_AMP_INT_MORATORIO] , [CAR_AMP_GASTOS] , [CAR_JUD_CAPITAL] , [CAR_JUD_INT_COMPENSATORIO] ,
       [CAR_JUD_INT_MORATORIO] , [CAR_JUD_GASTOS] , [CAR_CAS_CAPITAL] , [CAR_CAS_INT_COMPENSATORIO] , [CAR_CAS_INT_MORATORIO] ,
       [CAR_CAS_GASTOS] , [CAR_CON_CAPITAL] , [CAR_CON_INT_COMPENSATORIO] , [CAR_CON_INT_MORATORIO] , [CAR_CON_GASTOS] ,
       [MONTOSALDOCREDITO] , [NROCREDITOSENTRADA] , [SALDOCAPITALPAGADOJUDICIALVENTA] , [SALDOINTERESPAGADOJUDICIALVENTA] ,
       [SALDOMORAPAGADOJUDICIALVENTA] , [NROCREDITOSRECUPERADOSJUD] , [PKABOGADOJUD] , [NROCREDITOSENTRADA] , [SALDOCAPITALPAGADOJUDICIALVENTA] , [SALDOINTERESPAGADOJUDICIALVENTA] , 
[SALDOMORAPAGADOJUDICIALVENTA] , [SALDOGASTOPAGADOJUDICIALVENTA] , [NROCREDITOSCAPTURAJUDICIAL] , 
[MONTOCAPITALINICIOJUDICIAL] , [NROCREDITOSCANCELADOSJUD] , [NROCREDITOSRECUPERADOSJUD]

FROM BDS_BIACMACHOYO.DBO.FCUENTACREDITO
WHERE PERIODODIA >= @N_PERIODODIA_INI
  AND PERIODODIA <= @N_PERIODODIA_FIN
  AND FECHACULMINACIONCREDITO >= @F_PERIODODIA_INI
  AND FECHACULMINACIONCREDITO <= @F_PERIODODIA_FIN
  AND PKESTADOCREDITO = 4

INSERT INTO STG_TEMP_FAGCUENTACREDITO01
SELECT [PERIODODIA] , [PKCUENTACREDITO] , [PKCLIENTE] , [PKSOLICITUD] , [PKESTADOCREDITO] , [PKPRODUCTO] ,
       [PKRECURSO] , [PKSUBRECURSO] , [PKMONEDA] , [PKMODALIDAD] , [PKTIPOTASACOMPENSATORIA] , [PKTIPOTASAMORATORIA] ,
       [PKGRUPOCREDITO] , [PKACTIVIDADECONOMICAACC] , [PKCONDICIONCONTABLE] , [PKCALIFICACIONCREDITICIAINTERNA] ,
       [PKCALIFICACIONCREDITICIAEXTERNA] , [PKAGENCIA] , [PKTIPOTASACOMPENSATORIAJUDICIAL] , [PKTIPOTASAMORATORIAJUDICIAL] ,
       [PKJEFEREGIONAL] , [PKADMINISTRADOR] , [PKASESOR] , [PKASESORNIVEL] , [NROCUOTAS] , [NRODIAS] , [NRODIASGRACIA] ,
       [NROCRONOGRAMA] , [DIAFECHAFIJA] , [CODTIPOCUOTA] , [CODTIPOPERIODO] , [CODPLAZO] , [CODDESEMBOLSOCREDITO] ,
       [NOTASACOMPENSATORIA] , [TASAINTERESCOMPENSATORIA] , [TASAINTERESMORATORIA] , [DIASATRASOCREDITO] ,
       [FECHACULMINACIONCREDITO] , [FECHAGENERACIONCREDITO] , [FECHADESEMBOLSOCREDITO] , [TIPOCAMBIODESEMBOLSO] ,
       [CODCUENTANORMAL] , [CODCUENTAVENCIDO] , [FLAGLIBREAMORTIZACION] , [FLAGREFINANCIADO] , [FLAGREESTRUCTURADO] ,
       [FLAGREPROGRAMADO] , [FLAGJUDICIAL] , [FLAGCASTIGADO] , [FLAGNUEVOCURRENTE] , [FLAGCLIENTENUEVOCAJAHUANCAYO] ,
       [FLAGCLIENTENUEVO] , [FLAGCLIENTECARTERA] , [DESTITROCREDITO_HIS] , [DESPRODUCTO_HIS] , [DESSUBPRODUCTO_HIS] ,
       [MONTOPROBADCREDITO] , [MONTOCAPITALDESEMBOLSADO] , [MONTOCAPITALPAGADO] , [MONTOINTERESPROGRAMADO] ,
       [MONTOINTERESALAFECHA] , [MONTOINTERESPAGADO] , [MONTOINTERESPROGRAMADA] , [MONTOGASTOPAGADO] ,
       [MONTOSALDONORMAL] , [MONTOSALDOVENCIDO] , [MONTOCOSTOEFECTIVO] , [FECHAINGRESOJUDICIAL] , [MONTOCAPITALINICIO] ,
       [MONTOINTERESINICIO] , [MONTOMORAANTICIPO] , [MONTOMORACOSTOINICIO] , [NRODIASATRASOINICIO] , [MONTOINTERESGENERADO] ,
       [MONTOMORAGENERADO] , [MONTOGASTOGENERADO] , [MONTOSALDOCAPITALJUD] , [MONTOSALDOINTERES] , [MONTOSALDOMORATORIO] ,
       [MONTOSALDOGASTOS] , [MONTOCAPITALPAGADOJUDICIAL] , [MONTOINTERESPAGADOJUDICIAL] , [MONTOMORAPAGADOJUDICIAL] ,
       [TASAINTERESCOMPENSATORIAJUDICIAL] , [TASAINTERESMORATORIOJUDICIAL] , [COODORRELACIONPAGO] ,
       [MONTOCAPITALCASTIGADO] , [MONTOINTERESCASTIGADO] , [MONTOMORACASTIGADO] , [MONTOGASTOCASTIGADO] ,
       [FECHACASTIGOCREDITO] , [CODMOTIVOCANCELACION] , [CAR_VIG_CAPITAL] , [CAR_VIG_INT_COMPENSATORIO] ,
       [CAR_VIG_INT_MORATORIO] , [CAR_VIG_GASTOS] , [CAR_VEN_CAPITAL] , [CAR_VEN_INT_COMPENSATORIO] ,
       [CAR_VEN_INT_MORATORIO] , [CAR_VEN_GASTOS] , [CAR_REF_CAPITAL] , [CAR_REF_INT_COMPENSATORIO] ,
       [CAR_REF_INT_MORATORIO] , [CAR_REF_GASTOS] , [CAR_REP_CAPITAL] , [CAR_REP_INT_COMPENSATORIO] ,
       [CAR_REP_INT_MORATORIO] , [CAR_REP_GASTOS] , [CAR_AMP_CAPITAL] , [CAR_AMP_INT_COMPENSATORIO] ,
       [CAR_AMP_INT_MORATORIO] , [CAR_AMP_GASTOS] , [CAR_JUD_CAPITAL] , [CAR_JUD_INT_COMPENSATORIO] ,
       [CAR_JUD_INT_MORATORIO] , [CAR_JUD_GASTOS] , [CAR_CAS_CAPITAL] , [CAR_CAS_INT_COMPENSATORIO] ,
       [CAR_CAS_INT_MORATORIO] , [CAR_CAS_GASTOS] , [CAR_CON_CAPITAL] , [CAR_CON_INT_COMPENSATORIO] ,
       [CAR_CON_INT_MORATORIO] , [CAR_CON_GASTOS] , [MONTOSALDOCREDITO] , GETDATE() [FECULTACTUALIZACION] ,
       'V' [TIPO] , [PKABOGADOJUD] , [NROCREDITOSENTRADA] , [SALDOCAPITALPAGADOJUDICIALVENTA] , [SALDOINTERESPAGADOJUDICIALVENTA] , 
[SALDOMORAPAGADOJUDICIALVENTA] , [SALDOGASTOPAGADOJUDICIALVENTA] , [NROCREDITOSCAPTURAJUDICIAL] , 
[MONTOCAPITALINICIOJUDICIAL] , [NROCREDITOSCANCELADOSJUD] , [NROCREDITOSRECUPERADOSJUD]

FROM BDS_BIACMACHOYO.DBO.FCUENTACREDITO
WHERE PERIODODIA = @N_PERIODODIA
  AND PKESTADOCREDITO IN (3,5,6)

-- ================================ CREDITOS COVID REPORTE35 ================================
DROP TABLE IF EXISTS #Cred_COVID
SELECT cCodCtaCre
INTO #Cred_COVID
FROM SOFCMACHYO_BI_SNAP.dbo.KPYMRepCreRep
WHERE cAñoProReg + cMesProReg = (
    SELECT MAX(cAñoProReg + cMesProReg)
    FROM SOFCMACHYO_BI_SNAP.dbo.KPYMRepCreRep
)

-- ================================ 72_STG_FAGCUENTACREDITO ================================
TRUNCATE TABLE STG_FAGCUENTACREDITO

DROP TABLE IF EXISTS #QUERY_FTCARED
SELECT 
    B.[CODCUENTACREDITO],
    A.[PERIODODIA] [PERIODOMES],
    A.[PKCUENTACREDITO],
    A.[PKCLIENTE],
    [PKSOLICITUD],
    [PKESTADOCREDITO],
    [PKPRODUCTO],
    [PKRECURSO],
    [PKSUBRECURSO],
    A.[PKMONEDA],
    [PKMODALIDAD],
    [PKTIPOTASACOMPENSATORIA],
    [PKTIPOTASAMORATORIA],
    [PKGRUPOCREDITO],
    [PKACTIVIDADECONOMICAICC],
    [PKCONDICIONCONTABLE],
    [PKCALIFICACIONCREDITICIAINTERNA],
    [PKCALIFICACIONCREDITICIAEXTERNA],
    [PKAGENCIA],
    [PKTIPOTASACOMPENSATORIAJUDICIAL],
    [PKTIPOTASAMORATORIAJUDICIAL],
    [PKJEFEREGIONAL],
    [PKADMINISTRADOR],
    [PKASESOR],
    [PKASESORNIVEL],
    [NROCUOTAS],
    [NRODIAS],
    [NRODIASGRACIA],
    A.[NROCRONOGRAMA],
    [DIAFECHAFIJA],
    [CODTIPOCUOTA],
    [CODTIPOPERIODO],
    [CODPLAZO],
    [CODDESEMBOLSOCREDITO],
    A.[CODLINEACREDITO],
    [NROTASACOMPENSATORIA],
    [TASAINTERESCOMPENSATORIA],
    [NROTASAMORATORIA],
    [TASAINTERESMORATORIA],
    [DIASATRASOCREDITO],
    [FECHACULMINACIONCREDITO],
    [FECHAGENERACIONCREDITO],
    [FECHADESEMBOLSOCREDITO],
    [TIPOCAMBIODESEMBOLSO],
    [CODCUENTANORMAL],
    [CODCUENTAVENCIDO],
    [FLAGLIBREAMORTIZACION],
    [FLAGREFINANCIADO],
    [FLAGREESTRUCTURADO],
    CASE 
        WHEN D.CCODCTACRE IS NULL THEN [FLAGREPROGRAMADO] 
        ELSE 'C' 
    END [FLAGREPROGRAMADO],
    [FLAGJUDICIAL],
    [FLAGCASTIGADO],
    [FLAGNUEVOVOCURRENTE],
    [FLAGCLIENTENUEVOCajaHUANCAYO],
    [FLAGCLIENTENUEVO],
    [FLAGCLIENTECARTERA],
    [DESTIPOCREDITO_HIS],
    [DESPRODUCTO_HIS],
    [DESSUBPRODUCTO_HIS],
    [MONTOAPROBADOORCREDITO],
    [MONTOCAPITALDESEMBOLSADO],
    [MONTOCAPITALPAGADO],
    [MONTOINTERESPROGRAMADO],
    [MONTOINTERESALAFECHA],
    [MONTOINTERESPAGADO],
    [MONTOMORAPROGRAMADA],
    [MONTOMORAPAGADA],
    [MONTOGASTOPROGRAMADO],
    [MONTOGASTOPAGADO],
    [MONTOSALDONORMAL],
    [MONTOSALDOVENCIDO],
    [MONTOCOSTOEFECTIVO],
    [FECHAINGRESOJUDICIAL],
    [MONTOCAPITALINICIO],
    [MONTOINTERESINICIO],
    [MONTOMORAINICIO],
    [MONTOGASTOINICIO],
    [NRODIASATRASOINICIO],
    [MONTOINTERESGENERADO],
    [MONTOMORAGENERADO],
    [MONTOGASTOGENERADO],
    [MONTOCAPITALGENERADO],
    [MONTOSALDOCAPITALJUD],
    [MONTOSALDOINTERES],
    [MONTOSALDOMORATORIO],
    [MONTOSALDOGASTO],
    [MONTOCAPITALPAGADOJUDICIAL],
    [MONTOINTERESPAGADOJUDICIAL],
    [MONTOMORAPAGADOJUDICIAL],
    [MONTOGASTOPAGADOJUDICIAL],
    [TASAINTERESCOMPENSATORIOJUDICIAL],
    [TASAINTERESMORATORIOJUDICIAL],
    [COODORDENRELACIONPAGO],
    [MONTOCAPITALCASTIGADO],
    [MONTOINTERESCASTIGADO],
    [MONTOMORACASTIGADO],
    [MONTOGASTOCASTIGADO],
    [FECHACASTIGOCREDITO],
    [CODMOTIVOCANCELACION],
    [CAR_VIG_CAPITAL],
    [CAR_VIG_INT_COMPENSATORIO],
    [CAR_VIG_INT_MORATORIO],
    [CAR_VIG_GASTOS],
    [CAR_VEN_CAPITAL],
    [CAR_VEN_INT_COMPENSATORIO],
    [CAR_VEN_INT_MORATORIO],
    [CAR_VEN_GASTOS],
    [CAR_REF_CAPITAL],
    [CAR_REF_INT_COMPENSATORIO],
    [CAR_REF_INT_MORATORIO],
    [CAR_REF_GASTOS],
    [CAR_REP_CAPITAL],
    [CAR_REP_INT_COMPENSATORIO],
    [CAR_REP_INT_MORATORIO],
    [CAR_REP_GASTOS],
    [CAR_AMP_CAPITAL],
    [CAR_AMP_INT_COMPENSATORIO],
    [CAR_AMP_INT_MORATORIO],
    [CAR_AMP_GASTOS],
    [CAR_JUD_CAPITAL],
    [CAR_JUD_INT_COMPENSATORIO],
    [CAR_JUD_INT_MORATORIO],
    [CAR_JUD_GASTOS],
    [CAR_CAS_CAPITAL],
    [CAR_CAS_INT_COMPENSATORIO],
    [CAR_CAS_INT_MORATORIO],
    [CAR_CAS_GASTOS],
    [CAR_CON_CAPITAL],
    [CAR_CON_INT_COMPENSATORIO],
    [CAR_CON_INT_MORATORIO],
    [CAR_CON_GASTOS],
    [MONTO_SALDOCREDITO],
    GETDATE() [FECULTACTUALIZACION],
    [PKABOGADOJUD],
    [NROCREDITOSENTRADA],
    [SALDOCAPITALPAGADOJUDICIALVENTA],
    [SALDOINTERESPAGADOJUDICIALVENTA],
    [SALDOMORAPAGADOJUDICIALVENTA],
    [SALDOGASTOPAGADOJUDICIALVENTA],
    [NROCREDITOSCAPTURAJUDICIAL],
    [MONTOCAPITALINICIOJUDICIAL],
    [NROCREDITOSCANCELADOSJUD],
    [NROCREDITOSRECUPERADOSJUD]
INTO #QUERY_FTCARED
FROM STG_TEMP_FAGCUENTACREDITO01 A
INNER JOIN BDS_BIACMACHYO.DBO.DCUENTACREDITO B
    ON A.PKCUENTACREDITO = B.PKCUENTACREDITO
LEFT JOIN #Cred_COVID D
    ON B.CODCUENTACREDITO = D.CCODCTACRE

DROP TABLE IF EXISTS #QUERY_TRANSF
SELECT [CODCUENTACREDITO] ,
       [PERIODOMES] , [PKCUENTACREDITO] , [PKCLIENTE] , [PKSOLICITUD] , [PKESTADOCREDITO] , [PKPRODUCTO] ,
       [PKRECURSO] , [PKSUBRECURSO] , [PKMONEDA] , [PKMODALIDAD] , [PKTIPOTASACOMPENSATORIA] , [PKTIPOTASAMORATORIA] ,
       [PKGRUPOCREDITO] , [PKACTIVIDADECONOMICAICC] , [PKCONDICIONCONTABLE] , [PKCALIFICACIONCREDITICIAINTERNA] ,
       [PKCALIFICACIONCREDITICIAEXTERNA] , [PKAGENCIA] , [PKTIPOTASACOMPENSATORIAJUDICIAL] , [PKTIPOTASAMORATORIAJUDICIAL] ,
       [PKJEFEREGIONAL] , [PKADMINISTRADOR] , [PKASESOR] , [PKASESORNIVEL] , [NROCUOTAS] , [NRODIAS] , [NRODIASGRACIA] ,
       [NROCRONOGRAMA] , [DIAFECHAFIJA] , [CODTIPOCUOTA] , [CODTIPOPERIODO] , [CODPLAZO] , [CODDESEMBOLSOCREDITO] ,
       [CODLINEACREDITO] , [NROTASACOMPENSATORIA] , [TASAINTERESCOMPENSATORIA] , [NROTASAMORATORIA] , [TASAINTERESMORATORIA] ,
       [DIASATRASOCREDITO] , [FECHACULMINACIONCREDITO] , [FECHAGENERACIONCREDITO] , [FECHADESEMBOLSOCREDITO] , [TIPOCAMBIODESEMBOLSO] ,
       [CODCUENTANORMAL] , [CODCUENTAVENCIDO] , [FLAGLIBREAMORTIZACION] , [FLAGREFINANCIADO] , [FLAGREESTRUCTURADO] ,
       [FLAGREPROGRAMADO] , [FLAGJUDICIAL] , [FLAGCASTIGADO] , [FLAGNUEVOCURRENTE] , [FLAGCLIENTENUEVOCAJAHUANCAYO] ,
       [FLAGCLIENTENUEVO] , [FLAGCLIENTECARTERA] , [DESTITPOCREDITO_HIS] , [DESPRODUCTO_HIS] , [DESSUBPRODUCTO_HIS] ,
       [DESSUBTIPOPRODUCTO_HIS] , [MONTOAPROBADOCREDITO] , [MONTOCAPITALDESEMBOLSADO] , [MONTOCAPITALPAGADO] , [MONTOINTERESPROGRAMADO] ,
       [MONTOINTERESALAFECHA] , [MONTOINTERESPAGADO] , [MONTOMORAPROGRAMADA] , [MONTOMORAPAGADA] , [MONTOGASTOPROGRAMADO] ,
       [MONTOGASTOPAGADO] , [MONTOSALDONORMAL] , [MONTOSALDOVENCIDO] , [MONTOCOSTOEFECTIVO] , [FECHAINGRESOJUDICIAL] , [MONTOCAPITALINICIO] ,
       [MONTOINTERESINICIO] , [MONTOMORAINICIO] , [MONTOGASTOINICIO] , [NRODIASATRASOINICIO] , [MONTOINTERESGENERADO] ,
       [MONTOMORAGENERADO] , [MONTOGASTOGENERADO] , [MONTOCAPITALGENERADO] , [MONTOSALDOCAPITALJUD] , [MONTOSALDOINTERES] ,
       [MONTOSALDOMORATORIO] , [MONTOSALDOGASTO] , [MONTOCAPITALPAGADOJUDICIAL] , [MONTOINTERESPAGADOJUDICIAL] ,
       [MONTOMORAPAGADOJUDICIAL] , [MONTOGASTOPAGADOJUDICIAL] , [TASAINTERESCOMPENSATORIAJUDICIAL] , [TASAINTERESMORATORIOJUDICIAL] ,
       [COODENRELACIONPAGO] , [MONTOCAPITALCASTIGADO] , [MONTOINTERESCASTIGADO] , [MONTOMORACASTIGADO] , [MONTOGASTOCASTIGADO] ,
       [FECHACASTIGOCREDITO] , [CODMOTIVOCANCELACION] , [CAR_VIG_CAPITAL] , [CAR_VIG_INT_COMPENSATORIO] , [CAR_VIG_INT_MORATORIO] ,
       [CAR_VIG_GASTOS] , [CAR_VEN_CAPITAL] , [CAR_VEN_INT_COMPENSATORIO] , [CAR_VEN_INT_MORATORIO] , [CAR_VEN_GASTOS] ,
       [CAR_REF_CAPITAL] , [CAR_REF_INT_COMPENSATORIO] , [CAR_REF_INT_MORATORIO] , [CAR_REF_GASTOS] , [CAR_REP_CAPITAL] ,
       [CAR_REP_INT_COMPENSATORIO] , [CAR_REP_INT_MORATORIO] , [CAR_REP_GASTOS] , [CAR_AMP_CAPITAL] , [CAR_AMP_INT_COMPENSATORIO] ,
       [CAR_AMP_INT_MORATORIO] , [CAR_AMP_GASTOS] , [CAR_JUD_CAPITAL] , [CAR_JUD_INT_COMPENSATORIO] , [CAR_JUD_INT_MORATORIO] ,
       [CAR_JUD_GASTOS] , [CAR_CAS_CAPITAL] , [CAR_CAS_INT_COMPENSATORIO] , [CAR_CAS_INT_MORATORIO] , [CAR_CAS_GASTOS] ,
       [CAR_CON_CAPITAL] , [CAR_CON_INT_COMPENSATORIO] , [CAR_CON_INT_MORATORIO] , [CAR_CON_GASTOS] ,
       [MONTOSALDOCAPITALVENTA] , [NINTDEVCTA] , [CCODCTACTB] , [PKABOGADOJUD] , [NROCREDITOSENTRADA] ,
       [SALDOCAPITALPAGADOJUDICIALVENTA] , [SALDOINTERESPAGADOJUDICIALVENTA] , [SALDOMORAPAGADOJUDICIALVENTA] ,
       [SALDOGASTOPAGADOJUDICIALVENTA] , [NROCREDITOSCAPTURAJUDICIAL] , [MONTOCAPITALINICIOJUDICIAL] ,
       [NROCREDITOSCANCELADOSJUD] , [NROCREDITOSRECUPERADOSJUD]
INTO #QUERY_TRANSF
FROM #QUERY_FTCARED A
LEFT JOIN SOFCMACHYO_BI_SNAP.DBO.DEVKYP B
  ON A.CODCUENTACREDITO = B.CCODCTACRE
DROP TABLE IF EXISTS #QUERY_P_TIPPRO_G
SELECT [CCODCTACRE] , [NFEPRO] , [CCODTIPPRO] , [NMONPROACT]
INTO #QUERY_P_TIPPRO_G
FROM SOFCMACHYO_BI_SNAP.DBO.KPYWPROCRE
WHERE CCODTIPPRO = 'G'
  AND NFEPRO = @N_PERIODODIA_FIN

DROP TABLE IF EXISTS #QUERY_P_TIPPRO_E
SELECT [CCODCTACRE] , [NFEPRO] , [CCODTIPPRO] , [NMONPROACT]
INTO #QUERY_P_TIPPRO_E
FROM SOFCMACHYO_BI_SNAP.DBO.KPYWPROCRE
WHERE CCODTIPPRO = 'E'
  AND NFEPRO = @N_PERIODODIA_FIN

DROP TABLE IF EXISTS #QUERY_P_TIPPRO_P
SELECT [CCODCTACRE] , [NFEPRO] , [CCODTIPPRO] , [NMONPROACT]
INTO #QUERY_P_TIPPRO_P
FROM SOFCMACHYO_BI_SNAP.DBO.KPYWPROCRE
WHERE CCODTIPPRO = 'P'
  AND NFEPRO = @N_PERIODODIA_FIN

DROP TABLE IF EXISTS #QUERY_S_TIPPRO_G
SELECT [CCODCTACRE] , [NFEPRO] , [CCODTIPPRO] , [NMONPROACT]
INTO #QUERY_S_TIPPRO_G
FROM SOFCMACHYO_BI_SNAP.DBO.KPYWPROCESUS
WHERE CCODTIPPRO = 'G'
  AND NFEPRO = @N_PERIODODIA_FIN

DROP TABLE IF EXISTS #QUERY_S_TIPPRO_E
SELECT [CCODCTACRE] , [NFEPRO] , [CCODTIPPRO] , [NMONPROACT]
INTO #QUERY_S_TIPPRO_E
FROM SOFCMACHYO_BI_SNAP.DBO.KPYWPROCESUS
WHERE CCODTIPPRO = 'E'
  AND NFEPRO = @N_PERIODODIA_FIN

DROP TABLE IF EXISTS #QUERY_S_TIPPRO_P
SELECT [CCODCTACRE] , [NFEPRO] , [CCODTIPPRO] , [NMONPROACT]
INTO #QUERY_S_TIPPRO_P
FROM SOFCMACHYO_BI_SNAP.DBO.KPYWPROCESUS
WHERE CCODTIPPRO = 'P'
  AND NFEPRO = @N_PERIODODIA_FIN
DROP TABLE IF EXISTS #QUERY_JOIN
SELECT [PERIODOMES] , [PKCUENTACREDITO] ,
       [PKCLIENTE] , [PKSOLICITUD] , [PKESTADOCREDITO] , [PKPRODUCTO] ,
       [PKRECURSO] , [PKSUBRECURSO] , [PKMONEDA] , [PKMODALIDAD] , [PKTIPOTASACOMPENSATORIA] , [PKTIPOTASAMORATORIA] ,
       [PKGRUPOCREDITO] , [PKACTIVIDADECONOMCACC] , [PKCONDICIONCONTABLE] , [PKCALIFICACIONCREDITICIAINTERNA] ,
       [PKCALIFICACIONCREDITICIAEXTERNA] , [PKAGENCIA] , [PKTIPOTASACOMPENSATORIAJUDICIAL] , [PKTIPOTASAMORATORIAJUDICIAL] ,
       [PKJEFEREGIONAL] , [PKADMINISTRADOR] , [PKASESOR] , [PKASESORNIVEL] , [NROCUOTAS] , [NRODIAS] , [NRODIASGRACIA] ,
       [NROCRONOGRAMA] , [DIAFECHAFIJA] , [CODTIPOCUOTA] , [CODTIPOPERIOD] , [CODPLAZO] , [CODDESEMBOLSOCREDITO] ,
       [CODLINEACREDITO] , [NROTASACOMPENSATORIA] , [TASAINTERESCOMPENSATORIA] , [NROTASAMORATORIA] , [TASAINTERESMORATORIA] ,
       [DIASATRASOCREDITO] , [FECHACULMINACIONCREDITO] , [FECHAGENERACIONCREDITO] , [FECHADESEMBOLSOCREDITO] , [TIPOCAMBIODESEMBOLSO] ,
       [CODCUENTAANORMAL] , [CODCUENTAVENCIDO] , [FLAGLIBREAMORTIZACION] , [FLAGREFINANCIADO] , [FLAGREESTRUCTURADO] ,
       [FLAGREPROGRAMADO] , [FLAGJUDICIAL] , [FLAGCASTIGADO] , [FLAGNUEVORECURRENTE] , [FLAGCLIENTENUEVOCAJAHUANCAYO] ,
       [FLAGCLIENTENUEVO] , [FLAGCLIENTECARTERA] , [DESTIPOCREDITO_HIS] , [DESPRODUCTO_HIS] , [DESSUBPRODUCTO_HIS] ,
       [MONTOAPRROBADOCREDITO] , [MONTOCAPITALDESEMBOLSADO] , [MONTOCAPITALPAGADO] , [MONTOINTERESPROGRAMADO] ,
       [MONTOINTERESALAFECHA] , [MONTOINTERESPAGADO] , [MONTOMORAPROGRAMADA] , [MONTOMORAPAGADA] , [MONTOGASTOPROGRAMADO] ,
       [MONTOGASTOPAGADO] , [MONTOSALDONORMAL] , [MONTOSALDOVENCIDO] , [MONTOCOSTOEFECTIVO] , [FECHAINGRESOJUDICIAL] , [MONTOCAPITALINICIO] ,
       [MONTOINTERESINICIO] , [MONTOMORAINICIO] , [MONTOSASTOINICIO] , [NRODIASATRASOINICIO] , [MONTOINTERESGENERADO] ,
       [MONTOMORAGENERADO] , [MONTOGASTOGENERADO] , [MONTOCAPITALGENERADO] , [MONTOSALDOCAPITALJUD] , [MONTOSALDOINTERES] ,
       [MONTOSALDOMORATORIO] , [MONTOSALDOGASTO] , [MONTOCAPITALPAGADOJUDICIAL] , [MONTOINTERESPAGADOJUDICIAL] ,
       [MONTOGASTOPAGADOJUDICIAL] , [TASAINTERESCOMPENSATORIOJUDICIAL] , [TASAINTERESMORATORIOJUDICIAL] , [CODORDENRELACIONPAGO] ,
       [MONTOCAPITALCASTIGADO] , [MONTOINTERESCASTIGADO] , [MONTOMORACASTIGADO] , [MONTOGASTOCASTIGADO] , [FECHACASTIGOCREDITO] ,
       [CODMOTIVOCANCELACION] , [CAR_VIG_CAPITAL] , [CAR_VIG_INT_COMPENSATORIO] , [CAR_VIG_INT_MORATORIO] , [CAR_VIG_GASTOS] ,
       [CAR_VEN_CAPITAL] , [CAR_VEN_INT_COMPENSATORIO] , [CAR_VEN_INT_MORATORIO] , [CAR_VEN_GASTOS] , [CAR_REF_CAPITAL] ,
       [CAR_REF_INT_COMPENSATORIO] , [CAR_REF_INT_MORATORIO] , [CAR_REF_GASTOS] , [CAR_REP_CAPITAL] , [CAR_REP_INT_COMPENSATORIO] ,
       [CAR_REP_INT_MORATORIO] , [CAR_REP_GASTOS] , [CAR_AMP_CAPITAL] , [CAR_AMP_INT_COMPENSATORIO] , [CAR_AMP_INT_MORATORIO] ,
       [CAR_AMP_GASTOS] , [CAR_JUD_CAPITAL] , [CAR_JUD_INT_COMPENSATORIO] , [CAR_JUD_INT_MORATORIO] , [CAR_JUD_GASTOS] , [CAR_CAS_CAPITAL] ,
       [CAR_CAS_INT_COMPENSATORIO] , [CAR_CAS_INT_MORATORIO] , [CAR_CAS_GASTOS] , [CAR_CON_CAPITAL] , [CAR_CON_INT_COMPENSATORIO] ,
       [CAR_CON_INT_MORATORIO] , [CAR_CON_GASTOS] , [MONTOSALDOCREDITO] , [NINTDEVCTA] , [CCODCTACTB] , B.[NMONPROACT] [NMONPROACT_P2] ,
       C.[NMONPROACT] [NMONPROACT_P1] , D.[NMONPROACT] [NMONPROACT_S2] , G.[NMONPROACT] [NMONPROACT_S3] , GETDATE() [FECULTACTUALIZACION] ,
       [PKABOGADOJUD] , [NROCREDITOSENTRADA] , [SALDOCAPITALPAGADOJUDICIALVENTA] , [SALDOMORAPAGADOJUDICIALVENTA] ,
       [SALDOGASTOPAGADOJUDICIALVENTA] , [NROCREDITOSCAPTURAJUDICIAL] , [NROCREDITOSCANCELADOSJUD] , [NROCREDITOSRECUPERADOSJUD]
INTO #QUERY_JOIN
FROM #QUERY_TRANSF A
LEFT JOIN #QUERY_P_TIPPRO_G B
    ON A.CODCUENTACREDITO = B.CCODCTACRE
   AND A.PERIODOMES = B.NFECPRO
LEFT JOIN #QUERY_P_TIPPRO_E C
    ON A.CODCUENTACREDITO = C.CCODCTACRE
   AND A.PERIODOMES = C.NFECPRO
LEFT JOIN #QUERY_P_TIPPRO_P D
    ON A.CODCUENTACREDITO = D.CCODCTACRE
   AND A.PERIODOMES = D.NFECPRO
LEFT JOIN #QUERY_S_TIPPRO_G E
    ON A.CODCUENTACREDITO = E.CCODCTACRE
   AND A.PERIODOMES = E.NFECPRO
LEFT JOIN #QUERY_S_TIPPRO_E F
    ON A.CODCUENTACREDITO = F.CCODCTACRE
   AND A.PERIODOMES = F.NFECPRO
LEFT JOIN #QUERY_S_TIPPRO_P G
    ON A.CODCUENTACREDITO = G.CCODCTACRE
   AND A.PERIODOMES = G.NFECPRO;

INSERT INTO STG_FAGCUENTACREDITO
SELECT *
  FROM #QUERY_JOIN;

DROP TABLE IF EXISTS #QUERY_FCTACRED;
DROP TABLE IF EXISTS #QUERY_TRANSF;
DROP TABLE IF EXISTS #QUERY_P_TIPPRO_G;
DROP TABLE IF EXISTS #QUERY_P_TIPPRO_E;
DROP TABLE IF EXISTS #QUERY_P_TIPPRO_P;
DROP TABLE IF EXISTS #QUERY_S_TIPPRO_G;
DROP TABLE IF EXISTS #QUERY_S_TIPPRO_E;
DROP TABLE IF EXISTS #QUERY_S_TIPPRO_P;
DROP TABLE IF EXISTS #QUERY_JOIN;
DROP TABLE IF EXISTS #Cred_COVID;

-- ============================ 73_STG_FAGCUENTACREDITO_2 ============================
TRUNCATE TABLE STG_FAGCUENTACREDITO_1

DROP TABLE IF EXISTS #QUERY_SQL
SELECT ROW_NUMBER() OVER(PARTITION BY PKCUENTACREDITO ORDER BY PERIODOMES DESC) RANKING , A.*
INTO #QUERY_SQL
FROM STG_FAGCUENTACREDITO A

DROP TABLE IF EXISTS #QUERY
SELECT [PERIODOMES] , [PKCUENTACREDITO] ,
       [PKCLIENTE] , [PKSOLICITUD] , [PKESTADOCREDITO] , [PKPRODUCTO] ,
       [PKRECURSO] , [PKSUBRECURSO] , [PKMONEDA] , [PKMODALIDAD] , [PKTIPOTASACOMPENSATORIA] , [PKTIPOTASAMORATORIA] ,
       [PKGRUPOCREDITO] , [PKACTIVIDADECONOMCACC] , [PKCONDICIONCONTABLE] , [PKCALIFICACIONCREDITICIAINTERNA] ,
       [PKCALIFICACIONCREDITICIAEXTERNA] , [PKAGENCIA] , [PKTIPOTASACOMPENSATORIAJUDICIAL] , [PKTIPOTASAMORATORIAJUDICIAL] ,
       [PKJEFEREGIONAL] , [PKADMINISTRADOR] , [PKASESOR] , [PKASESORNIVEL] , [NROCUOTAS] , [NRODIAS] , [NRODIASGRACIA] ,
       [NROCRONOGRAMA] , [DIAFECHAFIJA] , [CODTIPOCUOTA] , [CODTIPOPERIODO] , [CODPLAZO] , [CODDESEMBOLSOCREDITO] ,
       [CODLINEACREDITO] , [NROTASACOMPENSATORIA] , [TASAINTERESCOMPENSATORIA] , [NROTASAMORATORIA] , [TASAINTERESMORATORIA] ,
       [DIASATRASOCREDITO] , [FECHACULMINACIONCREDITO] , [FECHAGENERACIONCREDITO] , [FECHADESEMBOLSOCREDITO] , [TIPOCAMBIODESEMBOLSO] ,
       [CODCUENTANORMAL] , [CODCUENTAVENCIDO] , [FLAGLIBREAMORTIZACION] , [FLAGREFINANCIADO] , [FLAGREESTRUCTURADO] ,
       [FLAGREPROGRAMADO] , [FLAGJUDICIAL] , [FLAGCASTIGADO] , [FLAGNUEVORECURRENTE] , [FLAGCLIENTENUEVOCAJAHUANCAYO] ,
       [FLAGCLIENTENUEVO] , [FLAGCLIENTECARTERA] , [DESTIPOCREDITO_HIS] , [DESPRODUCTO_HIS] , [DESSUBPRODUCTO_HIS] ,
       [DESUBTIPOPRODUCTO_HIS] , [MONTOAPROBADCREDITO] , [MONTOCAPITALDESEMBOLSADO] , [MONTOCAPITALPAGADO] , [MONTOINTERESPROGRAMADO] ,
       [MONTOINTERESALAFECHA] , [MONTOINTERESPAGADO] , [MONTOMORAPROGRAMADA] , [MONTOMORAPAGADA] , [MONTOGASTOPROGRAMADO] ,
       [MONTOGASTOPAGADO] , [MONTOSALDONORMAL] , [MONTOSALDOVENCIDO] , [MONTOCOSTOEFECTIVO] , [FECHAINGRESOJUDICIAL] , [MONTOCAPITALINICIO] ,
       [MONTOINTERESINICIO] , [MONTOMORAINICIO] , [MONTOGASTOINICIO] , [NRODIASATRASOINICIO] , [MONTOINTERESGENERADO] ,
       [MONTOMORAGENERADO] , [MONTOGASTOGENERADO] , [MONTOCAPITALGENERADO] , [MONTOSALDOCAPITALJUD] , [MONTOSALDOINTERES] ,
       [MONTOSALDOMORATORIO] , [MONTOSALDOGASTO] , [MONTOCAPITALPAGADOJUDICIAL] , [MONTOINTERESPAGADOJUDICIAL] ,
       [MONTOMORAPAGADOJUDICIAL] , [MONTOGASTOPAGADOJUDICIAL] , [TASAINTERESCOMPENSATORIOJUDICIAL] , [TASAINTERESMORATORIOJUDICIAL] ,
       [COORDENRELACIONPAGO] , [MONTOCAPITALCASTIGADO] , [MONTOINTERESCASTIGADO] , [MONTOMORACASTIGADO] , [MONTOGASTOCASTIGADO] , [FECHACASTIGOCREDITO] ,
       [CODMOTIVOCANCELACION] , [CAR_VIG_CAPITAL] , [CAR_VIG_INT_COMPENSATORIO] , [CAR_VIG_INT_MORATORIO] , [CAR_VIG_GASTOS] ,
       [CAR_VEN_CAPITAL] , [CAR_VEN_INT_COMPENSATORIO] , [CAR_VEN_INT_MORATORIO] , [CAR_VEN_GASTOS] , [CAR_REF_CAPITAL] ,
       [CAR_REF_INT_COMPENSATORIO] , [CAR_REF_INT_MORATORIO] , [CAR_REF_GASTOS] , [CAR_REP_CAPITAL] , [CAR_REP_INT_COMPENSATORIO] ,
       [CAR_REP_INT_MORATORIO] , [CAR_REP_GASTOS] , [CAR_AMP_CAPITAL] , [CAR_AMP_INT_COMPENSATORIO] , [CAR_AMP_INT_MORATORIO] ,
       [CAR_AMP_GASTOS] , [CAR_JUD_CAPITAL] , [CAR_JUD_INT_COMPENSATORIO] , [CAR_JUD_INT_MORATORIO] , [CAR_JUD_GASTOS] ,
       [CAR_CAS_CAPITAL] , [CAR_CAS_INT_COMPENSATORIO] , [CAR_CAS_INT_MORATORIO] , [CAR_CAS_GASTOS] ,
       [CAR_CON_CAPITAL] , [CAR_CON_INT_COMPENSATORIO] , [CAR_CON_INT_MORATORIO] , [CAR_CON_GASTOS] ,
       [NINTDEVCTA] , [CCODCTACTB] , [NMONPROACT_P1] , [NMONPROACT_P2] , [NMONPROACT_P3] , [NMONPROACT_S1] , [NMONPROACT_S2] , [NMONPROACT_S3] ,
       GETDATE() [FECULTACTUALIZACION] , [PKABOGADOJUD] , [NROCREDITOSENTRADA] , [SALDOCAPITALPAGADOJUDICIALVENTA] , [SALDOINTERESPAGADOJUDICIALVENTA] , 
       [SALDOMORAPAGADOJUDICIALVENTA] , [SALDOGASTOPAGADOJUDICIALVENTA] , [NROCREDITOSCAPTURAJUDICIAL] , 
       [MONTOCAPITALINICIOJUDICIAL] , [NROCREDITOSCANCELADOSJUD] , [NROCREDITOSRECUPERADOSJUD]
INTO #QUERY
FROM #QUERY_SQL
WHERE RANKING = 1

INSERT INTO STG_FAGCUENTACREDITO_1
SELECT *
FROM #QUERY

DROP TABLE #QUERY_SQL, #QUERY

-- ============================ 74_STG_FAGCUENTACREDITO_3 ============================
TRUNCATE TABLE STG_FAGCUENTACREDITO_3

DROP TABLE IF EXISTS #QUERY_1
SELECT [PERIODOMES] , A.[PKCUENTACREDITO] ,
       A.[PKCLIENTE] , [PKSOLICITUD] , [PKESTADOCREDITO] , [PKPRODUCTO] ,
       [PKRECURSO] , [PKSUBRECURSO] , A.[PKMONEDA] , [PKMODALIDAD] , [PKTIPOTASACOMPENSATORIA] , [PKTIPOTASAMORATORIA] ,
       [PKGRUPOCREDITO] , [PKACTIVIDADECONOMCACC] , [PKCONDICIONCONTABLE] , [PKCALIFICACIONCREDITICIAINTERNA] ,
       [PKCALIFICACIONCREDITICIAEXTERNA] , [PKAGENCIA] , [PKTIPOTASACOMPENSATORIAJUDICIAL] , [PKTIPOTASAMORATORIAJUDICIAL] ,
       [PKJEFEREGIONAL] , [PKADMINISTRADOR] , [PKASESOR] , [PKASESORNIVEL] , [NROCUOTAS] , [NRODIAS] , [NRODIASGRACIA] ,
       A.[NROCRONOGRAMA] , [DIAFECHAFIJA] , [CODTIPOCUOTA] , [CODTIPOPERIODO] , [CODPLAZO] , [CODDESEMBOLSOCREDITO] ,
       A.[CODLINEACREDITO] , [NROTASACOMPENSATORIA] , [TASAINTERESCOMPENSATORIA] , [NROTASAMORATORIA] , [TASAINTERESMORATORIA] ,
       [DIASATRASOCREDITO] , [FECHACULMINACIONCREDITO] , [FECHAGENERACIONCREDITO] , [FECHADESEMBOLSOCREDITO] , [TIPOCAMBIODESEMBOLSO] ,
       [CODCUENTANORMAL] , [CODCUENTAVENCIDO] , [FLAGLIBREAMORTIZACION] , [FLAGREFINANCIADO] , [FLAGREESTRUCTURADO] ,
       [FLAGREPROGRAMADO] , [FLAGJUDICIAL] , [FLAGCASTIGADO] , [FLAGNUEVORECURRENTE] , [FLAGCLIENTENUEVOCAJAHUANCAYO] ,
       [FLAGCLIENTENUEVO] , [FLAGCLIENTECARTERA] , [DESTIPOCREDITO_HIS] , [DESPRODUCTO_HIS] , [DESSUBPRODUCTO_HIS] ,
       [DESUBTIPOPRODUCTO_HIS] , [MONTOAPROBADO CREDITO] , [MONTOCAPITALDESEMBOLSADO] , [MONTOCAPITALPAGADO] , [MONTOINTERESPROGRAMADO] ,
       [MONTOINTERESALAFECHA] , [MONTOINTERESPAGADO] , [MONTOMORAPROGRAMADA] , [MONTOMORAPAGADA] , [MONTOGASTOPROGRAMADO] ,
       [MONTOGASTOPAGADO] , [MONTOSALDONORMAL] , [MONTOSALDOVENCIDO] , [MONTOCOSTOEFECTIVO] , [FECHAINGRESOJUDICIAL] , [MONTOCAPITALINICIO] ,
       [MONTOINTERESINICIO] , [MONTOMORAINICIO] , [MONTOGASTOINICIO] , [NRODIASATRASOINICIO] , [MONTOINTERESGENERADO] ,
       [MONTOMORAGENERADO] , [MONTOGASTOGENERADO] , [MONTOCAPITALGENERADO] , [MONTOSALDOCAPITALJUD] , [MONTOSALDOINTERES] ,
       [MONTOSALDOMORATORIO] , [MONTOSALDOGASTO] , [MONTOCAPITALPAGADOJUDICIAL] , [MONTOINTERESPAGADOJUDICIAL] ,
       [MONTOMORAPAGADOJUDICIAL] , [TASAINTERESCOMPENSATORIOJUDICIAL] , [TASAINTERESMORATORIOJUDICIAL] , [COORDENRELACIONPAGO] ,
       [MONTOCAPITALCASTIGADO] , [MONTOINTERESCASTIGADO] , [MONTOMORACASTIGADO] , [MONTOGASTOCASTIGADO] , [FECHACASTIGOCREDITO] ,
       [CODMOTIVOCANCELACION] , [CAR_VIG_CAPITAL] , [CAR_VIG_INT_COMPENSATORIO] , [CAR_VIG_INT_MORATORIO] , [CAR_VIG_GASTOS] ,
       [CAR_VEN_CAPITAL] , [CAR_VEN_INT_COMPENSATORIO] , [CAR_VEN_INT_MORATORIO] , [CAR_VEN_GASTOS] , [CAR_REF_CAPITAL] ,
       [CAR_REF_INT_COMPENSATORIO] , [CAR_REF_INT_MORATORIO] , [CAR_REF_GASTOS] , [CAR_REP_CAPITAL] , [CAR_REP_INT_COMPENSATORIO] ,
       [CAR_REP_INT_MORATORIO] , [CAR_REP_GASTOS] , [CAR_AMP_CAPITAL] , [CAR_AMP_INT_COMPENSATORIO] , [CAR_AMP_INT_MORATORIO] ,
       [CAR_AMP_GASTOS] , [CAR_JUD_CAPITAL] , [CAR_JUD_INT_COMPENSATORIO] , [CAR_JUD_INT_MORATORIO] , [CAR_JUD_GASTOS] , [CAR_CAS_CAPITAL] ,
       [CAR_CAS_INT_COMPENSATORIO] , [CAR_CAS_INT_MORATORIO] , [CAR_CAS_GASTOS] , [CAR_CON_CAPITAL] , [CAR_CON_INT_COMPENSATORIO] ,
       [CAR_CON_INT_MORATORIO] , [CAR_CON_GASTOS] , [MONTOSALDOCREDITO] , [NINTDEVCTA] , [CCODCTACTB] ,
       [NMONPROACT_P1] , [NMONPROACT_P2] , [NMONPROACT_P3] , [NMONPROACT_S1] , [NMONPROACT_S2] , [NMONPROACT_S3] ,
       GETDATE() [FECULTACTUALIZACION] , [PKABOGADOJUD] ,[NROCREDITOSENTRADA] ,[SALDOCAPITALPAGADOJUDICIALVENTA] ,[SALDOINTERESPAGADOJUDICIALVENTA] ,
       [SALDOMORAPAGADOJUDICIALVENTA] ,[SALDOGASTOPAGADOJUDICIALVENTA] ,[NROCREDITOSCAPTURAJUDICIAL] ,[MONTOCAPITALINICIOJUDICIAL] ,
       [NROCREDITOSCANCELADOSJUD] ,[NROCREDITOSRECUPERADOSJUD] ,B.[CODCUENTACREDITO]
INTO #QUERY_1
FROM STG_FAGCUENTACREDITO_1 A
INNER JOIN BDS_BIACMACHYO.DBO.DCUENTACREDITO B
    ON A.PKCUENTACREDITO = B.PKCUENTACREDITO

DROP TABLE IF EXISTS #QUERY_11
SELECT 
    [CCODAPL],
    [DFECASICTB],
    [CCODCTACRE],
    [CCODCREACT],
    [CCODTIPMON],
    [CCODPLACTACTB],
    [NMONTODEBE],
    [NMONTOHABE],
    [CCODTIPPRO],
    CAST(FORMAT(DFECASICTB, 'yyyyMMdd') AS INT) AS [PERIODOMES]
INTO #QUERY_11
FROM SOFCMACHYO_BI_SNAP.DBO.KPYDPROCREPREP
WHERE LEFT(CCODPLACTACTB, 2) IN ('43', '54')
    AND DFECASICTB >= @F_PERIODODIA_INI
    AND DFECASICTB <= @F_PERIODODIA_FIN
SELECT
    [CODCUENTACREDITO] = A.[CCODCTACRE],
    [CODCUENTACONTABLE43] = MAX(CASE WHEN LEFT(A.cCodPlaCtaCtb, 2) = '43' THEN A.CCODPLACTACTB ELSE NULL END),
    [MONTODEBEPROVISIONGENERICA43] = SUM(
        CASE
            WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('43')
                THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTOHABERPROVISIONGENERICA43] = SUM(
        CASE
            WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('43')
                THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTODEBEPROVISIONESPECIFICA43] = SUM(
        CASE
            WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('43')
                THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTOHABERPROVISIONESPECIFICA43] = SUM(
        CASE
            WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('43')
                THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTODEBEPROVISIONPROCICLICA43] = SUM(
        CASE
            WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('43')
                THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTOHABERPROVISIONPROCICLICA43] = SUM(
        CASE
            WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('43')
                THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [CODCUENTACONTABLE54] = MAX(CASE WHEN LEFT(A.cCodPlaCtaCtb, 2) = '54' THEN A.CCODPLACTACTB ELSE NULL END),
    [MONTODEBEPROVISIONGENERICA54] = SUM(
        CASE
            WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('54')
                THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTOHABERPROVISIONGENERICA54] = SUM(
        CASE
            WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('54')
                THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTODEBEPROVISIONESPECIFICA54] = SUM(
        CASE
            WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('54')
                THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTOHABERPROVISIONESPECIFICA54] = SUM(
        CASE
            WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('54')
                THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTODEBEPROVISIONPROCICLICA54] = SUM(
        CASE
            WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('54')
                THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END),
    [MONTOHABERPROVISIONPROCICLICA54] = SUM(
        CASE
            WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb, 2) IN ('54')
                THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1' THEN 1 ELSE B.nTipCamFij END
            ELSE 0
        END)
INTO #QUERY_12
FROM #QUERY_11 A
INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTIPCAMBIO B
    ON CAST(A.DFECASICTB AS DATE) = CAST(B.DFECIPCAM AS DATE)
WHERE B.DFECIPCAM >= @F_PERIODODIA_INI
  AND B.DFECIPCAM <= @F_PERIODODIA_FIN
GROUP BY A.[CCODCTACRE];
DROP TABLE IF EXISTS #QUERY_21
SELECT [CCODAPLI] , [DFECASICTB] , [CCODCTACRE] , [CCODCREACT] ,
       [CCODTIPMON] , [CCODPLACTACTB] , [NMONTODEBE] , [NMONTOHABE] ,
       [CCODTIPPRO] , CAST(FORMAT(DFECASICTB, 'yyyyMMdd') AS INT) [PERIODOMES]
INTO #QUERY_21
FROM SOFCMACHYO_BI_SNAP.DBO.KPYDPROCREPESUS
WHERE LEFT(cCodPlaCtaCtb,2) IN ('43','54')
  AND (dFecAsiCtb >= @F_PERIODODIA_INI
       AND dFecAsiCtb <= @F_PERIODODIA_FIN)

DROP TABLE IF EXISTS #QUERY_22
SELECT [CODCUENTACREDITO] = A.[CCODCTACRE]
     , [CODCUENTACONTABLE43SUS] = MAX(CASE WHEN LEFT(A.cCodPlaCtaCtb,2) = '43'
                                           THEN A.CCODPLACTACTB
                                           ELSE NULL END)
     , [MONTODEBEPROVISIONGENERICA43SUS] = SUM(CASE WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb,2) IN ('43')
                                                    THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1'
                                                                             THEN 1
                                                                             ELSE B.nTipCamFij END
                                                    ELSE 0 END)
     , [MONTOHABERPROVISIONGENERICA43SUS] = SUM(CASE WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb,2) IN ('43')
                                                     THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1'
                                                                               THEN 1
                                                                               ELSE B.nTipCamFij END
                                                     ELSE 0 END)
     , [MONTODEBEPROVISIONESPECIFICA43SUS] = SUM(CASE WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb,2) IN ('43')
                                                      THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1'
                                                                                THEN 1
                                                                                ELSE B.nTipCamFij END
                                                      ELSE 0 END)
     , [MONTOHABERPROVISIONESPECIFICA43SUS] = SUM(CASE WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb,2) IN ('43')
                                                       THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1'
                                                                                 THEN 1
                                                                                 ELSE B.nTipCamFij END
                                                       ELSE 0 END)
     , [MONTODEBEPROVISIONPROCICLICA43SUS] = SUM(CASE WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb,2) IN ('43')
                                                      THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1'
                                                                                THEN 1
                                                                                ELSE B.nTipCamFij END
                                                      ELSE 0 END)
     , [MONTOHABERPROVISIONPROCICLICA43SUS] = SUM(CASE WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb,2) IN ('43')
                                                       THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1'
                                                                                 THEN 1
                                                                                 ELSE B.nTipCamFij END
                                                       ELSE 0 END)
     , [CODCUENTACONTABLE54SUS] = MAX(CASE WHEN LEFT(A.cCodPlaCtaCtb,2) = '54'
                                           THEN A.CCODPLACTACTB
                                           ELSE NULL END)
     , [MONTODEBEPROVISIONGENERICA54SUS] = SUM(CASE WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb,2) IN ('54')
                                                    THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1'
                                                                             THEN 1
                                                                             ELSE B.nTipCamFij END
                                                    ELSE 0 END)
     , [MONTOHABERPROVISIONGENERICA54SUS] = SUM(CASE WHEN A.cCodTipPro = 'G' AND LEFT(A.cCodPlaCtaCtb,2) IN ('54')
                                                     THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1'
                                                                               THEN 1
                                                                               ELSE B.nTipCamFij END
                                                     ELSE 0 END)
     , [MONTODEBEPROVISIONESPECIFICA54SUS] = SUM(CASE WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb,2) IN ('54')
                                                      THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1'
                                                                                THEN 1
                                                                                ELSE B.nTipCamFij END
                                                      ELSE 0 END)
     , [MONTOHABERPROVISIONESPECIFICA54SUS] = SUM(CASE WHEN A.cCodTipPro = 'E' AND LEFT(A.cCodPlaCtaCtb,2) IN ('54')
                                                       THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1'
                                                                                 THEN 1
                                                                                 ELSE B.nTipCamFij END
                                                       ELSE 0 END)
     , [MONTODEBEPROVISIONPROCICLICA54SUS] = SUM(CASE WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb,2) IN ('54')
                                                      THEN A.nMontoDebe * CASE WHEN A.cCodTipMon = '1'
                                                                                THEN 1
                                                                                ELSE B.nTipCamFij END
                                                      ELSE 0 END)
     , [MONTOHABERPROVISIONPROCICLICA54SUS] = SUM(CASE WHEN A.cCodTipPro = 'P' AND LEFT(A.cCodPlaCtaCtb,2) IN ('54')
                                                       THEN A.nMontoHabe * CASE WHEN A.cCodTipMon = '1'
                                                                                 THEN 1
                                                                                 ELSE B.nTipCamFij END
                                                       ELSE 0 END)
INTO #QUERY_22
FROM #QUERY_21 A
INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTTIPCAMBIO B
        ON CAST(A.DFECASICTB AS DATE) = CAST(B.DFECTIPCAM AS DATE)
WHERE B.DFECTIPCAM >= @F_PERIODODIA_INI
  AND B.DFECTIPCAM <= @F_PERIODODIA_FIN
GROUP BY A.[CCODCTACRE]
DROP TABLE IF EXISTS #QUERY_03
SELECT [PERIODOMES] , [PKCUENTACREDITO] ,
       [PKCLIENTE] , [PKSOLICITUD] , [PKESTADOCREDITO] , [PKPRODUCTO] ,
       [PKRECURSO] , [PKSUBRECURSO] , [PKMONEDA] , [PKMODALIDAD] , [PKTIPOTASACOMPENSATORIA] , [PKTIPOTASAMORATORIA] ,
       [PKGRUPOCREDITO] , [PKACTIVIDADECONOMICA] , [PKCONDICIONCONTABLE] , [PKCALIFICACIONCREDITICIAINTERNA] ,
       [PKCALIFICACIONCREDITICIAEXTERNA] , [PKAGENCI] , [PKTIPOTASACOMPENSATORIAJUDICIAL] , [PKTIPOTASAMORATORIAJUDICIAL] ,
       [PKREFERENCIAL] , [PKADMINISTRADOR] , [PKASESOR] , [PKASESOR NIVEL] , [NROCUOTAS] , [NRODIASGRACIA] ,
       [NROCRONOGRAMA] , [DIAFECHAFIJA] , [CODTIPOPERIODD] , [CODPLAZO] , [CODDESEMBOLSOCREDITO] ,
       [CODLINEACREDITO] , [NROTASACOMPENSATORIA] , [TASAINTERESCOMPENSATORIA] , [NROTASAMORATORIA] , [TASAINTERES MORATORIA] ,
       [DIASATRASOCREDITO] , [FECHACULMINACIONCREDITO] , [FECHAGENERACIONCREDITO] , [FECHADESMBOLSOCREDITO] ,
       [TIPOCAMBIODESEMBOLSO] , [CODCUENTANORMAL] , [CODCUENTAVENCIDA] , [FLAGLIBREAMORTIZACION] , [FLAGREFINANCIADO] ,
       [FLAGREESTRUCTURADO] , [FLAGREPROGRAMADO] , [FLAGJUDICIAL] , [FLAGCASTIGADO] , [FLAGVENCURRRECURRENTE] ,
       [FLAGCLIENTENUEVO] , [FLAGCLIENTECARTERA] , [DESTIPOCREDITO_HIS] , [DESPRODUCTO_HIS] , [DESSUBPRODUCTO_HIS] ,
       [DESSUBTIPOPRODUCTO_HIS] , [MONTOAPROBACIONCREDITO] , [MONTOCAPITALDESEMBOLSADO] , [MONTOCAPITALPAGADO] , [MONTOINTERESPROGRAMADO] ,
       [MONTOINTERESALAFECHA] , [MONTOINTERESMORALES] , [MONTOMORAPROGRAMADA] , [MONTOMORAPAGADA] , [MONTOGASTOPROGRAMADO] ,
       [MONTOGASTOSPAGADO] , [MONTOSALDOMORAL] , [MONTOSALDOMORAINICIO] , [MONTOMORAOBJETIVO] , [FECHAINGRESOJUDICIAL] ,
       [MONTOCAPITALINICIO] , [MONTOINTERESINICIO] , [MONTOMORAINICIO] , [NRODIASATRASOINICIO] , [MONTOINTERESGENERADO] ,
       [MONTOMORAGENERADO] , [MONTOGASTOGENERADO] , [MONTOCAPITALGENERADO] , [MONTOSALDOCAPITALJUD] , [MONTOSALDOINTERES] ,
       [MONTOSALDOMORATORIO] , [MONTO SALDOGASTOS] , [MONTOCAPITALPAGADOJUDICIAL] , [MONTOINTERESPAGADOJUDICIAL] ,
       [MONTOGASTOSPAGADOJUDICIAL] , [TASAINTERESCOMPENSATORIAJUDICIAL] , [TASAINTERES MORATORIOJUDICIAL] , [CODORDENRELACIONPAGO] ,
       [MONTOCAPITALCASTIGADO] , [MONTOINTERESCASTIGADO] , [MONTOMORACASTIGADO] , [MONTOGASTOSCASTIGADO] ,
       [CODMOTIVOCANCELACION] , [CAR_VIG_CAPITAL] , [CAR_VIG_INT_COMPENSATORIO] , [CAR_VIG_INT_MORATORIO] , [CAR_VIG_GASTOS] ,
       [CAR_VEN_CAPITAL] , [CAR_VEN_INT_COMPENSATORIO] , [CAR_VEN_INT_MORATORIO] , [CAR_VEN_GASTOS] ,
       [CAR_REF_INT_COMPENSATORIO] , [CAR_REF_INT_MORATORIO] , [CAR_REF_GASTOS] , [CAR_REF_CAPITAL] ,
       [CAR_REP_INT_MORATORIO] , [CAR_REP_GASTOS] , [CAR_AMP_CAPITAL] , [CAR_AMP_INT_COMPENSATORIO] ,
       [CAR_AMP_INT_MORATORIO] , [CAR_AMP_GASTOS] , [CAR_JUD_CAPITAL] , [CAR_JUD_INT_COMPENSATORIO] , [CAR_JUD_INT_MORATORIO] ,
       [CAR_JUD_GASTOS] , [CAR_CAS_CAPITAL] , [CAR_CAS_INT_COMPENSATORIO] , [CAR_CAS_INT_MORATORIO] , [CAR_CAS_GASTOS] ,
       [CAR_CON_CAPITAL] , [CAR_CON_INT_COMPENSATORIO] , [CAR_CON_INT_MORATORIO] , [CAR_CON_GASTOS] , [MONTOSALDOCREDITCB] ,
       [NMNONPROACT_P1] , [NMNONPROACT_P2] , [NMNONPROACT_S1] , [NMNONPROACT_S2] , [NMNONPROACT_S3] , GETDATE() [FECLACTUALIZACION],
       [PKABOGADOJUD] , [NROCREDITOSENTRADA] , [SALDOCAPITALPAGADOJUDICIALVENTA] , [SALDOINTERESPAGADOJUDICIALVENTA] , [SALDOMORAPAGADOJUDICIALVENTA] ,
       [SALDOGASTOSPAGADOJUDICIALVENTA] , [NROCREDITOSCAPTURAJUDICIAL] , [MONTOCAPITALINICIOJUDICIAL] , [NROCREDITOSCANCELADOSJUD] ,
       [NROCREDITOSRECUPERADOSJUD] , [CODCUENTACONTABLE43] , [MONTODEBEPROVISIONGENERICA43] , [MONTOHABERPROVISIONGENERICA43] ,
       [MONTODEBEPROVISIONESPECIFICA43] , [MONTOHABERPROVISIONESPECIFICA43] , [MONTODEBEPROVISIONPROCICLICA43] , [MONTOHABERPROVISIONPROCICLICA43] ,
       [CODCUENTACONTABLE54] , [MONTODEBEPROVISIONGENERICA54] , [MONTOHABERPROVISIONGENERICA54] , [MONTODEBEPROVISIONESPECIFICA54] ,
       [MONTOHABERPROVISIONESPECIFICA54] , [MONTODEBEPROVISIONPROCICLICA54] , [MONTOHABERPROVISIONPROCICLICA54] , [CODCUENTACONTABLE43SUS] ,
       [MONTODEBEPROVISIONGENERICA43SUS] , [MONTOHABERPROVISIONGENERICA43SUS] , [MONTODEBEPROVISIONESPECIFICA43SUS] ,
       [MONTOHABERPROVISIONESPECIFICA43SUS] , [MONTODEBEPROVISIONPROCICLICA43SUS] , [MONTOHABERPROVISIONPROCICLICA43SUS] , [CODCUENTACONTABLE54SUS] ,
       [MONTODEBEPROVISIONGENERICA54SUS] , [MONTOHABERPROVISIONGENERICA54SUS] , [MONTODEBEPROVISIONESPECIFICA54SUS] ,
       [MONTOHABERPROVISIONESPECIFICA54SUS] , [MONTODEBEPROVISIONPROCICLICA54SUS] , [MONTOHABERPROVISIONPROCICLICA54SUS]
-- , GETDATE() [FECLACTUALIZACION_1]
INTO #QUERY_03
FROM #QUERY_1 A
LEFT JOIN #Query_12 B
       ON A.CODCUENTACREDITO = B.CODCUENTACREDITO
LEFT JOIN #Query_22 C
       ON A.CODCUENTACREDITO = C.CODCUENTACREDITO

INSERT INTO STG_FAGCUENTACREDITO_3
SELECT *
FROM #QUERY_03

DROP TABLE #QUERY_1, #QUERY_11, #QUERY_12, #QUERY_21, #QUERY_22, #QUERY_03
-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
--------------------------------------------------------------------------------------------------



--98--[dbo].[SP_KPY_FCUENTACREDITO_BDS]---------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_FCUENTACREDITO_BDS]
AS
SET NOCOUNT ON
BEGIN

-- ================================================================
-- INSERTA LOG CON EL INICIO EJECUCION
-- ================================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
       (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ================================================================
DECLARE @V_PERIODODIA INT = CAST(FORMAT(DATEADD(D, -1, GETDATE()), 'yyyyMMdd') AS INT)
--SET @V_PERIODODIA = IIF(@V_PERIODODIA = 0, CAST(FORMAT(DATEADD(D, -1, GETDATE()), 'yyyyMMdd') AS INT), @V_PERIODODIA)

-- ===================== 69_DBS_FCUENTACREDITO =====================
DROP TABLE IF EXISTS #QUERY_TIPTASACOM
SELECT [PKTIPOTASA] , [CODTIPOTASA] , [DESTIPOTASA] , GETDATE() [FECLACTUALIZACION]
INTO #QUERY_TIPTASACOM
FROM BDS_BIACMACHYO.DBO.DTIPOTASA

DROP TABLE IF EXISTS #QUERY_TIPTASAMOR
SELECT [PKTIPOTASA] , [CODTIPOTASA] , [DESTIPOTASA] , GETDATE() [FECLACTUALIZACION]
INTO #QUERY_TIPTASAMOR
FROM BDS_BIACMACHYO.DBO.DTIPOTASA

DROP TABLE IF EXISTS #QUERY_TIPTASACOMJUD
SELECT [PKTIPOTASA] , [CODTIPOTASA] , [DESTIPOTASA] , GETDATE() [FECLACTUALIZACION]
INTO #QUERY_TIPTASACOMJUD
FROM BDS_BIACMACHYO.DBO.DTIPOTASA

DROP TABLE IF EXISTS #QUERY_TIPTASAMORJUD
SELECT [PKTIPOTASA] , [CODTIPOTASA] , [DESTIPOTASA] , GETDATE() [FECLACTUALIZACION]
INTO #QUERY_TIPTASAMORJUD
FROM BDS_BIACMACHYO.DBO.DTIPOTASA

DROP TABLE IF EXISTS #QUERY_CALIFCREDINTERNA
SELECT [PKCALIFICACIONCREDITICIA] , [CODCALIFICACIONCREDITICIA] ,
       [DESCALIFICACIONCREDITICIA] , GETDATE() [FECLACTUALIZACION]
INTO #QUERY_CALIFCREDINTERNA
FROM BDS_BIACMACHYO.DBO.DCALIFICACIONCREDITICIA

DROP TABLE IF EXISTS #QUERY_CALIFCREDEXTERNA
SELECT [PKCALIFICACIONCREDITICIA] , [CODCALIFICACIONCREDITICIA] ,
       [DESCALIFICACIONCREDITICIA] , GETDATE() [FECLACTUALIZACION]
INTO #QUERY_CALIFCREDEXTERNA
FROM BDS_BIACMACHYO.DBO.DCALIFICACIONCREDITICIA

DROP TABLE IF EXISTS #QUERY
SELECT A.PERIODODIA             [PERIODODIA] ,
       ISNULL(B.PKCUENTACREDITO, 0)   [PKCUENTACREDITO] ,
       ISNULL(C.PKCLIENTE, 0)         [PKCLIENTE] ,
       ISNULL(D.PKSOLICITUD, 0)       [PKSOLICITUD] ,
       ISNULL(E.PKESTADOCREDITO, 0)   [PKESTADOCREDITO] ,
       ISNULL(F.PKPRODUCTO, 0)        [PKPRODUCTO] ,
       ISNULL(G.PKRECURSO, 0)         [PKRECURSO] ,
       ISNULL(H.PKSUBRECURSO, 0)      [PKSUBRECURSO] ,
       ISNULL(I.PKMONEDA, 0)          [PKMONEDA] ,
       ISNULL(J.PKMODALIDAD, 0)       [PKMODALIDAD] ,
       ISNULL(K.PKTIPOTASA, 0)        [PKTIPOTASACOMPENSATORIA] ,
       ISNULL(L.PKTIPOTASA, 0)        [PKTIPOTASAMORATORIA] ,
       ISNULL(O.PKGRUPOCREDITO, 0)    [PKGRUPOCREDITO] ,
       ISNULL(P.PKACTIVIDADECONOMICA, 0) [PKACTIVIDADECONOMICAACC] ,
       ISNULL(Q.PKCONDICIONCONTABLE, 0) [PKCONDICIONCONTABLE] ,
       ISNULL(W1.PKCALIFICACIONCREDITICIA, 0) [PKCALIFICACIONCREDITICIAINTERNA] ,
       ISNULL(W2.PKCALIFICACIONCREDITICIA, 0) [PKCALIFICACIONCREDITICIAEXTERNA] ,
       ISNULL(M.PKTIPOTASA, 0)        [PKTIPOTASACOMPENSATORIAJUDICIAL] ,
       ISNULL(N.PKTIPOTASA, 0)        [PKTIPOTASAMORATORIAJUDICIAL] ,
       ISNULL(U.PKASESOR, 0)          [PKASESOR] ,
       ISNULL(V.PKASESOR NIVEL, 0)    [PKASESORNIVEL] ,
       ISNULL(A.NNUMCUOTAPR, 0)       [NROCUOTAS] ,
       ISNULL(A.NNUMDIAAPR, 0)        [NRODIAS] ,
       ISNULL(A.NNUMDIAGRAC, 0)       [NRODIASGRACIA] ,
       ISNULL(A.CCODUITPLA, '-')      [NROCRONOGRAMA] ,
       ISNULL(A.NDIAFECHFIJ, 0)       [DIAFECHAFIJA] ,
       ISNULL(A.CCODTIPCUO, '.')      [CODTIPOCUOTA] ,
       ISNULL(A.CTIPOPERIODD, '.')    [CODTIPOPERIODD] ,
       ISNULL(A.CCODPLAZO, '.')       [CODPLAZO] ,
       ISNULL(A.CCODULTDES, '.')      [CODDESEMBOLSOCREDITO] ,
       ISNULL(A.CCODLINCRE, '.')      [CODLINEACREDITO] ,
       ISNULL(A.NROTASACOM, 0)        [NROTASACOMPENSATORIA] ,
       ISNULL(A.NTASINTCOM, 0)        [TASAINTERESCOMPENSATORIA] ,
       ISNULL(A.NROTASAMOR, 0)        [NROTASAMORATORIA] ,
       ISNULL(A.NTASINTMOR, 0)        [TASAINTERESMORATORIA] ,
       ISNULL(A.NDIAATR CRE, 0)       [DIASATRASOCREDITO] ,
       A.DFECCULCRE                [FECHACULMINACIONCREDITO] ,
       A.DFEGENCRE                 [FECHAGENERACIONCREDITO] ,
       A.DFEDESC CRE               [FECHADESMBOLSOCREDITO] ,
       ISNULL(A.NTIPCAMDES, 0)        [TIPOCAMBIODESEMBOLSO] ,
       ISNULL(A.CCODCTANOR, '.')      [CODCUENTANORMAL] ,
       ISNULL(A.CCODCTAVEN, '.')      [CODCUENTAVENCIDO] ,
       ISNULL(A.CLIBAMORC, '.')       [FLAGLIBREAMORTIZACION] ,
       ISNULL(A.CCODREFINA, '.')      [FLAGREFINANCIADO] ,
       ISNULL(A.CCODREESTR, '.')      [FLAGREESTRUCTURADO] ,
       ISNULL(A.CCODREPROG, '.')      [FLAGREPROGRAMADO] ,
       ISNULL(A.CCODJUDICI, '.')      [FLAGJUDICIAL] ,
       ISNULL(A.CCODCASTIG, '.')      [FLAGCASTIGADO] ,
       ISNULL(A.CINDUEREP, '.')       [FLAGNUEVORECURRENTE] ,
       X.FLAGCLIENTENUEVOCAJAHUANCAYO [FLAGCLIENTENUEVO] ,
       CASE WHEN Y.CODCLIENTE IS NULL THEN 0 ELSE 1 END [FLAGCLIENTECARTERA]
ISNULL(A.CLIENTECARTERA, -1)            [FLAGCLIENTECARTERA] ,
ISNULL(F.DESTIPOCREDITO, '..')          [DESTIPOCREDITO_HIS] ,
ISNULL(F.DESPRODUCTO, '..')             [DESPRODUCTO_HIS] ,
ISNULL(F.DESSUBPRODUCTO, '..')          [DESSUBPRODUCTO_HIS] ,
ISNULL(F.DESSUBTIPOPRODUCTO, '..')      [DESSUBTIPOPRODUCTO_HIS] ,
ISNULL(A.NMONAPRCRE, 0)                 [MONTOAPROBADCREDITO] ,
ISNULL(A.NMONCAPDES, 0)                 [MONTOCAPITALDESEMBOLSADO] ,
ISNULL(A.NMONCAPPAG, 0)                 [MONTOCAPITALPAGADO] ,
ISNULL(A.NMONINTPRO, 0)                 [MONTOINTERESPROGRAMADO] ,
ISNULL(A.NMONINTEFC, 0)                 [MONTOINTERESALAFECHA] ,
ISNULL(A.NMONINTPAG, 0)                 [MONTOINTERESPAGADO] ,
ISNULL(A.NMONMORPRO, 0)                 [MONTOMORAPROGRAMADA] ,
ISNULL(A.NMONMORPAG, 0)                 [MONTOMORAPAGADA] ,
ISNULL(A.NMONGASPRO, 0)                 [MONTOGASTOPROGRAMADO] ,
ISNULL(A.NMONGASPAG, 0)                 [MONTOGASTOPAGADO] ,
ISNULL(A.NMONSALNOR, 0)                 [MONTOSALDONORMAL] ,
ISNULL(A.NMONSALVEN, 0)                 [MONTOSALDOVENCIDO] ,
ISNULL(A.NCOSEFEACT, 0)                 [MONTOCOSTOEFECTIVO] ,
A.DFECINGJUD                              [FECHAINGRESOJUDICIAL] ,
ISNULL(A.NMONCAPINI, 0)                 [MONTOCAPITALINICIO] ,
ISNULL(A.NMONINTINI, 0)                 [MONTOINTERESINICIO] ,
ISNULL(A.NMONMORINI, 0)                 [MONTOMORAINICIO] ,
ISNULL(A.NMONGASINI, 0)                 [MONTOGASTOINICIO] ,
ISNULL(A.NDIAATRINI, 0)                 [NRODIASATRASOINICIO] ,
ISNULL(A.NMONINTGEN, 0)                 [MONTOINTERESGENERADO] ,
ISNULL(A.NMONMORGEN, 0)                 [MONTOMORAGENERADO] ,
ISNULL(A.NMONGASGEN, 0)                 [MONTOGASTOGENERADO] ,
ISNULL(A.NMONCAPGEN, 0)                 [MONTOCAPITALGENERADO] ,
ISNULL(A.NMONSALCAP, 0)                 [MONTOSALDOCAPITALJUD] ,
ISNULL(A.NMONSALINT, 0)                 [MONTOSALDOINTERES] ,
ISNULL(A.NMONSALMOR, 0)                 [MONTOSALDOMORATORIO] ,
ISNULL(A.NMONSALGAS, 0)                 [MONTOSALDOGASTO] ,
ISNULL(A.NMONCAPPAGJUD, 0)              [MONTOCAPITALPAGADOJUDICIAL] ,
ISNULL(A.NMONINTPAGJUD, 0)              [MONTOINTERESPAGADOJUDICIAL] ,
ISNULL(A.NMONMORPAGJUD, 0)              [MONTOMORAPAGADOJUDICIAL] ,
ISNULL(A.NMONGASPAGJUD, 0)              [MONTOGASTOPAGADOJUDICIAL] ,
ISNULL(A.NTASINTCOMJUD, 0)              [TASAINTERESCOMPENSATORIAJUDICIAL] ,
ISNULL(A.NTASINTMORJUD, 0)              [TASAINTERESMORATORIOJUDICIAL] ,
ISNULL(A.CODORDENRELACIONPAGO, '..')    [CODORDENRELACIONPAGO] ,
ISNULL(A.NMONCAPCAS, 0)                 [MONTOCAPITALCASTIGADO] ,
ISNULL(A.NMONINTCAS, 0)                 [MONTOINTERESCASTIGADO] ,
ISNULL(A.NMONMORCAS, 0)                 [MONTOMORACASTIGADO] ,
ISNULL(A.NMONGASCAS, 0)                 [MONTOGASTOSCASTIGADO] ,
A.DFECACSCRE                              [FECHACASTIGOCREDITO] ,
ISNULL(A.CCODMOTCAN, '..')              [CODMOTIVOCANCELACION] ,
ISNULL(A.CAR_VIG_CAPITAL, 0)            [CAR_VIG_CAPITAL] ,
ISNULL(A.CAR_VIG_INT_COMPENSATORIO, 0)  [CAR_VIG_INT_COMPENSATORIO] ,
ISNULL(A.CAR_VIG_INT_MORATORIO, 0)      [CAR_VIG_INT_MORATORIO] ,
ISNULL(A.CAR_VIG_GASTOS, 0)             [CAR_VIG_GASTOS] ,
ISNULL(A.CAR_VEN_CAPITAL, 0)            [CAR_VEN_CAPITAL] ,
ISNULL(A.CAR_VEN_INT_COMPENSATORIO, 0)  [CAR_VEN_INT_COMPENSATORIO] ,
ISNULL(A.CAR_VEN_INT_MORATORIO, 0)      [CAR_VEN_INT_MORATORIO] ,
ISNULL(A.CAR_VEN_GASTOS, 0)             [CAR_VEN_GASTOS] ,
ISNULL(A.CAR_REF_CAPITAL, 0)            [CAR_REF_CAPITAL] ,
ISNULL(A.CAR_REF_INT_COMPENSATORIO, 0)  [CAR_REF_INT_COMPENSATORIO] ,
ISNULL(A.CAR_REF_INT_MORATORIO, 0)      [CAR_REF_INT_MORATORIO] ,
ISNULL(A.CAR_REF_GASTOS, 0)             [CAR_REF_GASTOS] ,
ISNULL(A.CAR_REP_CAPITAL, 0)            [CAR_REP_CAPITAL] ,
ISNULL(A.CAR_REP_INT_COMPENSATORIO, 0)  [CAR_REP_INT_COMPENSATORIO] ,
ISNULL(A.CAR_REP_INT_MORATORIO, 0)      [CAR_REP_INT_MORATORIO] ,
ISNULL(A.CAR_REP_GASTOS, 0)             [CAR_REP_GASTOS] ,
ISNULL(A.CAR_AMP_CAPITAL, 0)            [CAR_AMP_CAPITAL] ,
ISNULL(A.CAR_AMP_INT_COMPENSATORIO, 0)  [CAR_AMP_INT_COMPENSATORIO] ,
ISNULL(A.CAR_AMP_INT_MORATORIO, 0)      [CAR_AMP_INT_MORATORIO] ,
ISNULL(A.CAR_AMP_GASTOS, 0)             [CAR_AMP_GASTOS] ,
ISNULL(A.CAR_JUD_CAPITAL, 0)            [CAR_JUD_CAPITAL] ,
ISNULL(A.CAR_JUD_INT_COMPENSATORIO, 0)  [CAR_JUD_INT_COMPENSATORIO] ,
ISNULL(A.CAR_JUD_INT_MORATORIO, 0)      [CAR_JUD_INT_MORATORIO] ,
ISNULL(A.CAR_JUD_GASTOS, 0)             [CAR_JUD_GASTOS] ,
ISNULL(A.CAR_CAS_CAPITAL, 0)            [CAR_CAS_CAPITAL] ,
ISNULL(A.CAR_CAS_INT_COMPENSATORIO, 0)  [CAR_CAS_INT_COMPENSATORIO] ,
ISNULL(A.CAR_CAS_INT_MORATORIO, 0)      [CAR_CAS_INT_MORATORIO] ,
ISNULL(A.CAR_CAS_GASTOS, 0)             [CAR_CAS_GASTOS] ,
ISNULL(A.CAR_CON_CAPITAL, 0)            [CAR_CON_CAPITAL] ,
ISNULL(A.CAR_CON_INT_COMPENSATORIO, 0)  [CAR_CON_INT_COMPENSATORIO] ,
ISNULL(A.CAR_CON_INT_MORATORIO, 0)      [CAR_CON_INT_MORATORIO] ,
ISNULL(A.CAR_CON_GASTOS, 0)             [CAR_CON_GASTOS] ,
ISNULL(A.MONTOSALDOCLIENTE, 0)          [MONTOSALDOCREDITO] ,
GETDATE()                                [FECLACTUALIZACION] ,
ISNULL(Z.PKABOGADOJUD, 0)               [PKABOGADOJUD] ,
ISNULL(A.NROCREDITOSENTRADA, 0)         [NROCREDITOSENTRADA] ,
ISNULL(A.SALDOCAPITALPAGADOJUDICIALVENTA, 0)  [SALDOCAPITALPAGADOJUDICIALVENTA] ,
ISNULL(A.SALDOINTERESPAGADOJUDICIALVENTA, 0)  [SALDOINTERESPAGADOJUDICIALVENTA] ,
ISNULL(A.SALDOMORAPAGADOJUDICIALVENTA, 0)     [SALDOMORAPAGADOJUDICIALVENTA] ,
ISNULL(A.SALDOGASTOPAGADOJUDICIALVENTA, 0)    [SALDOGASTOPAGADOJUDICIALVENTA] ,
ISNULL(A.NROCREDITOSCAPTURAJUDICIAL, 0)       [NROCREDITOSCAPTURAJUDICIAL] ,
ISNULL(A.MONTOCAPITALINICIOJUDICIAL, 0)       [MONTOCAPITALINICIOJUDICIAL] ,
ISNULL(A.NROCREDITOSCANCELADOSJUD, 0)         [NROCREDITOSCANCELADOSJUD] ,
ISNULL(A.NROCREDITOSRECUPERADOSJUD, 0)        [NROCREDITOSRECUPERADOSJUD]
INTO #QUERY
FROM STG_FCUENTACREDITO_1 A
LEFT JOIN BDS_BIACMACHYO.DBO.DCUENTACREDITO B
  ON A.CCODCTACRE = B.CODCUENTACREDITO
LEFT JOIN BDS_BIACMACHYO.DBO.DCLIENTE C
  ON A.CCODCLIENTE = C.CODCLIENTE
LEFT JOIN BDS_BIACMACHYO.DBO.DSOLICITUD D
  ON A.CCODSOLCRE = D.CODSOLICITUD
LEFT JOIN BDS_BIACMACHYO.DBO.DESTADOCREDITO E
  ON A.CESTCRECON = E.CODESTADOCREDITO
LEFT JOIN BDS_BIACMACHYO.DBO.DPRODUCTO F
  ON A.CCODTIPCRE = F.CODTIPOCREDITO
 AND A.CCODPRODUC = F.CODPRODUCTO
 AND A.CCODSUBPRO = F.CODSUBPRODUCTO
LEFT JOIN BDS_BIACMACHYO.DBO.DRECURSO G
  ON A.CCODTIPREC = G.CODRECURSO
LEFT JOIN BDS_BIACMACHYO.DBO.DSUBRECURSO H
  ON A.CCODRECURS = H.CODSUBRECURSO
 AND G.PKRECURSO = H.PKRECURSO
LEFT JOIN BDS_BIACMACHYO.DBO.DMONEDA I
  ON A.CCODTIPMON = I.CODMONEDA
LEFT JOIN BDS_BIACMACHYO.DBO.DMODALIDAD J
  ON A.CCODMODCRE = J.CODMODALIDAD
LEFT JOIN #Query_TipTasCom K
  ON A.CTIPTASCOM = K.CODTIPOTASA
LEFT JOIN #Query_TipTasMor L
  ON A.CTIPTASMOR = L.CODTIPOTASA
LEFT JOIN #Query_TipTasComJUD M
  ON A.CTIPTASCOMJUD = M.CODTIPOTASA
LEFT JOIN #Query_TipTasMorJUD N
  ON A.CTIPTASMORJUD = N.CODTIPOTASA
LEFT JOIN BDS_BIACMACHYO.DBO.DGRUPOCREDITO O
  ON A.CCODCONVEN = O.CODGRUPOCREDITO
LEFT JOIN BDS_BIACMACHYO.DBO.DACTIVIDADECONOMICA P
  ON A.CCODACTIVI = P.CODACTIVIDADECONOMICA
 AND P.FLAGACTIVO = 1
LEFT JOIN BDS_BIACMACHYO.DBO.DCONDICIONCONTABLE Q
  ON A.CCONDICCON = Q.CODCONDICIONCONTABLE
LEFT JOIN BDS_BIACMACHYO.DBO.DAGENCIA R
  ON A.CCODOFICIN = R.CODAGENCIA
 AND R.FLAGACTIVO = '1'
LEFT JOIN BDS_BIACMACHYO.DBO.DJEFEREGIONAL S
  ON UPPER(A.CCODJEFEREGIONAL) = UPPER(S.CODJEFEREGIONAL)
LEFT JOIN BDS_BIACMACHYO.DBO.DADMINISTRADOR T
  ON UPPER(A.ADMINISTRADOR) = UPPER(T.CODADMINISTRADOR)
LEFT JOIN BDS_BIACMACHYO.DBO.DASESOR U
  ON UPPER(A.CCODSUSANA) = UPPER(U.CODASESOR)
LEFT JOIN BDS_BIACMACHYO.DBO.DASESORNIVEL V
  ON A.NCODPAPAPR = V.CODPAPAPR
 AND A.CCODNIVEL  = V.CODNIVEL
 AND A.CCODSUBNIV = V.CODSUBNIVEL
 AND A.CCODCLASUB = V.CODCLASUB
LEFT JOIN #Query_CalifCredInterna W1
  ON A.CCODCLACAR = W1.CODCALIFICACIONCREDITICIA
LEFT JOIN #Query_CalifCredExterna W2
  ON A.CCODCLAURI = W2.CODCALIFICACIONCREDITICIA
LEFT JOIN STG_FCUENTACREDITO_FLAG X
  ON A.CCODCLIENTE = X.CODCLIENTE
LEFT JOIN STG_FCUENTACREDITO_CLIEXCLUSIV Y
  ON A.CCODCLIENTE = Y.CODCLIENTE
LEFT JOIN BDS_BIACMACHYO.DBO.DABOGADOJUD Z
  ON A.CODABOGADOJUD = Z.CODABOGADOJUD

-- ================================================================
DELETE
FROM BDS_BIACMACHYO.DBO.FCUENTACREDITO
WHERE PERIODODIA = @V_PERIODODIA

INSERT INTO BDS_BIACMACHYO.DBO.FCUENTACREDITO
SELECT *
FROM #QUERY

DROP TABLE #QUERY_TIPTASCOM, #QUERY_TIPTASMOR, #QUERY_TIPTASCOMJUD, #QUERY
DROP TABLE #QUERY_TIPTASMORJUD, #QUERY_CALIFCREDINTERNA, #QUERY_CALIFCREDEXTERNA

-- ================================================================
-- ACTUALIZA LOG CON EL FIN EJECUCION
-- ================================================================
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-----------------------------------------------------------------


--99--[dbo].[SP_KPY_FCUENTACREDITO_STG]----------------------------
CREATE PROCEDURE [dbo].[SP_KPY_FCUENTACREDITO_STG]
AS
SET NOCOUNT ON
BEGIN

-- ================================================================
-- INSERTA LOG CON EL INICIO EJECUCION
-- ================================================================
INSERT INTO CONTROL_EJECUCION_MALLA_DS
       (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
VALUES ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE())

-- ================================================================
DECLARE @V_PERIODODIA DATE = CAST(DATEADD(D, -1, GETDATE()) AS DATE)
DECLARE @V_TIPOCAMBIO NUMERIC(16,4)

SELECT @V_TIPOCAMBIO = CVALVARAPL
FROM SOFCMACHYO_BI_SNAP.DBO.ADMVARVARIABLE
WHERE CNOMVARAPL = 'GNTIPCAMFIJ'
  AND CCODOFICIN = '002'

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_CREDITO

INSERT INTO STG_TEMP_FCUENTACREDITO_CREDITO
SELECT [CCODCTACRE] , [CCODSOLCRE] , [CESTCRECON] , [CCODTIPCRE] , [CCODPRODUC] , [CCODSUBPRO] ,
       [CCODCONVEN] , [CCODACTIVI] , [CCODRECURS] , [CCODTIPMON] , [CCODMODCRE] , [CTIPTASCOM] , [CTIPTASMOR] ,
       [NUMNUMCUOPAG] , [NUMNUMDIAPRI] , [NUMNUMDIAGRA] , [NDIAFECHFIJ] , [CCODTIPCUO] , [CTIPOPERIODD] ,
       [CCODPLAZO] , [NROTASACOM] , [NTASINTCOM] , [NROTASAMOR] , [NTASINTMOR] , [NDIAATRASCRE] ,
       [DFECCULCRE] , [DFEGENCRE] , CAST([DFECDECSRE] AS DATE) [DFECDECSRE] ,
       [NTIPCAMDES] , [CCODCTANOR] , [CCODCTAVEN] , [CLIBAMORCRE] , [CCODREFINA] , [CCODREESTR] ,
       [CCODREPROG] , [CCODJUDICI] , [CCODCASTIG] , [CINDUEREP] , [NMONAPRCRE] , [NMONCAPDES] ,
       [NMONCAPPAG] , [NMONINTPRO] , [NMONINTEFC] , [NMONINTPAG] , [NMONMORPRO] , [NMONMORPAG] ,
       [NMONGASPRO] , [NMONGASPAG] , [NMONSALNOR] , [NMONSALVEN] , [NCOSEFEACT]
FROM SOFCMACHYO_BI_SNAP.DBO.KPYMCRECONVEN
WHERE CESTCRECON IN ('F','H','I')
   OR (CESTCRECON = 'G' AND DFECULCRE = @V_PERIODODIA)

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_CLIENTE

INSERT INTO STG_TEMP_FCUENTACREDITO_CLIENTE
SELECT A.[CCODCTACRE] , [CCODCLIENTE] , [CCONDICCON] , [CCODULTPLA] , [CCODULTDES] , [CCODLINCRE]
FROM SOFCMACHYO_BI_SNAP.DBO.GENMCRECLI A
INNER JOIN STG_TEMP_FCUENTACREDITO_CREDITO B
        ON A.CcodCtaCre = B.CCODCTACRE

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_CREDJUDICIAL

INSERT INTO STG_TEMP_FCUENTACREDITO_CREDJUDICIAL
SELECT [CCODCTACRE] , [CTIPTASCOM] , [CTIPTASMOR] , [DFECINGJUD] , [NMONCAPINI] , [NMONINTINI] ,
       [NMONMORINI] , [NMONGASINI] , [NDIAATRINI] , [NMONINTGEN] , [NMONMORGEN] , [NMONGASGEN] ,
       [NMONCAPGEN] , [NMONSALCAP] , [NMONSALINT] , [NMONSALMOR] , [NMONSALGAS] , [NMONCAPPAG] ,
       [NMONINTPAG] , [NMONMORPAG] , [NMONGASPAG] , [NTASINTCOM] , [NTASINTMOR] , [CCODRECUPR] ,
       [NMONCAPCAS] , [NMONINTCAS] , [NMONMORCAS] , [NMONGASCAS] , [DFECACSCRE] , [CCODMOTCAN]
FROM SOFCMACHYO_BI_SNAP.DBO.KJUMCREJUDICI

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_OFIZONAS

INSERT INTO STG_TEMP_FCUENTACREDITO_OFIZONAS
SELECT [CCODOFICIN] , [LESTZONOFI] , [NCODOZONA]
FROM SOFCMACHYO_BI_SNAP.DBO.GENTOFIZONAS

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_ZONAS

INSERT INTO STG_TEMP_FCUENTACREDITO_ZONAS
SELECT [NCODOZONA]
FROM SOFCMACHYO_BI_SNAP.DBO.GENTZONAS

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_SUBNIVEL

INSERT INTO STG_TEMP_FCUENTACREDITO_SUBNIVEL
SELECT [NCODPAPAPR] , [CCODNIVEL] , [CCODSUBNIV] , [CCODCLASUB] , [CDESCLASUB]
FROM SOFCMACHYO_BI_SNAP.DBO.SIPTCLASUBNIV

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_SOLICITUD

INSERT INTO STG_TEMP_FCUENTACREDITO_SOLICITUD
SELECT A.[CCODSOLCRE] , [CCODMOTSOL]
FROM SOFCMACHYO_BI_SNAP.DBO.KPYMSOLICITUD A
INNER JOIN STG_TEMP_FCUENTACREDITO_CREDITO B
        ON A.CcodSolCre = B.CCODSOLCRE

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_JEFEREGIONAL

INSERT INTO STG_TEMP_FCUENTACREDITO_JEFEREGIONAL
SELECT [CCODPERSON] , [NCODOZONINS] , [LESTADOREG] , [CNOMPERSON] , [CDESCARPER] ,
       [DFINASCROT] , [DIFINASCROT] , [NNUMORDREM]
FROM (
    SELECT A.CCODPERSON , G.nCodoZona NCODOZONINS , 1 LESTADOREG , A.CNOMPERSON , 
           RTRIM(B.CDESCARPER) CDESCARPER ,
           ISNULL(D.DFINASCROT, '2080.01.01 00:00:00') DFINASCROT , A.CCODOFICIN , A.CCODGRUPER , A.CCODDESTPER ,
           ROW_NUMBER() OVER(PARTITION BY G.nCodoZona ORDER BY D.DFINASCROT) AS NNUMORDREM
    FROM SOFCMACHYO_BI_SNAP.DBO.SIPMPERSONAL A
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPTCARGOPER B
            ON A.CCODGRUPER = B.CCODGRUPER
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTESTABLECI BB
            ON A.CCODESTABL = BB.CCODESTABL
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.ADMVUSUARIO C
            ON A.CCODUSUADM = C.CCODUSUADM
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPDASCROTPER D
            ON A.CCODPERSON = D.CCODPERSON
           AND A.CCODGRUPER = D.CCODGRUPER
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTOFICINAS E
            ON BB.CCODOFICIN = E.CCODOFICIN
           AND E.LICESTADO = 1
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTOFIZONAS F
            ON E.CCODOFICIN = F.CCODOFICIN
           AND F.LESTZONOFI = 1
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.GENTZONAS G
            ON F.NCODOZONA = G.NCODOZONA
           AND G.LICESTADO = 1
    WHERE A.CCODGRUPER IN ('JNR')
      AND A.CCODDESTPER = 'A'
      AND D.LVIGASCROT = 1
      AND D.LACTASCROT = 1
) Z
WHERE NNUMORDREM = 1

-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_ADMINISTRADOR

INSERT INTO STG_TEMP_FCUENTACREDITO_ADMINISTRADOR
SELECT [CCODPERSON] , [CNOMPERSON] , [CDESCARPER] , [DFINASCROT] ,
       [CCODOFICIN] , [CCODGRUPER] , [CCODDESTPER] , [NNUMORDREM]
FROM (
    SELECT A.CCODPERSON , A.CCODOFICIN , A.CNOMPERSON , A.CCODGRUPER , A.CCODDESTPER ,
           ISNULL(C.DFINASCROT , '2080.01.01 00:00:00') DFINASCROT , CDESCARPER ,
           ROW_NUMBER() OVER(PARTITION BY A.CCODOFICIN ORDER BY A.CCODOFICIN , DFINASCROT) AS NNUMORDREM
    FROM SOFCMACHYO_BI_SNAP.DBO.SIMPMPERSONAL A
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPTCARGOPER B
            ON A.CCODGRUPER = B.CCODGRUPER
    INNER JOIN SOFCMACHYO_BI_SNAP.DBO.SIPDASCROTPER C
            ON A.CCODPERSON = C.CCODPERSON
           AND A.CCODGRUPER = C.CCODGRUPER
           AND C.LVIGASCROT = 1
           AND C.LACTASCROT = 1
    WHERE A.CCODGRUPER = 'ADM'
      AND A.CCODDESTPER = 'A'
) Z
WHERE [NNUMORDREM] = 1
-- ================================================================


-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_ASESORES

DROP TABLE IF EXISTS #Query_Transf_Asesor
SELECT DISTINCT [CCODUSUANA]
INTO #Query_Transf_Asesor
FROM SOFCMACHYO_BI_SNAP.DBO.KPYMCRECONVEN

DROP TABLE IF EXISTS #Query_STG_Asesor
SELECT DISTINCT [CCODUSUANA] , [CCODNIVEL] , [CCODSUBNIV] ,
       [CCODCLASUB] , [NCODPAPAPR] , [CDESCARPER]
INTO #Query_STG_Asesor
FROM #Query_Transf_Asesor A
LEFT JOIN SOFCMACHYO_BI_SNAP.DBO.SIMPMPERSONAL B
       ON A.CCODUSUANA = B.CCODPERSON
LEFT JOIN SOFCMACHYO_BI_SNAP.DBO.SIPTCARGOPER C
       ON B.CCODGRUPER = C.CCODGRUPER

INSERT INTO STG_TEMP_FCUENTACREDITO_ASESORES
SELECT [CCODUSUANA] , [CCODNIVEL] , [CCODSUBNIV] , [CCODCLASUB] , [NCODPAPAPR] , [CDESCARPER]
FROM #Query_STG_Asesor

DROP TABLE #Query_Transf_Asesor, #Query_STG_Asesor
-- ================================================================


-- ================================================================
TRUNCATE TABLE STG_TEMP_FCUENTACREDITO_CTACREKARDEX

INSERT INTO STG_TEMP_FCUENTACREDITO_CTACREKARDEX
SELECT DISTINCT CCODCUENTA [CCODCTACRE]
FROM SOFCMACHYO_BI_SNAP.DBO.GENMKARDEX
WHERE DFECKARDEX = @V_PERIODODIA
  AND CCODTIPKAR IN ('KJU','CAS')
  AND CCODTIPOPE = '2005'
  AND CCODESTRX = 'N'
  AND CCODKAREXT IS NULL
-- ================================================================


-- ================================================================
-- 64_STG_FCUENTACREDITO
TRUNCATE TABLE STG_FCUENTACREDITO

DROP TABLE IF EXISTS #QUERY_CRED
SELECT [CCODCTACRE] , [CCODSOLCRE] , [CESTCRECON] , [CCODTIPCRE] , [CCODPRODUC] , [CCODSUBPRO] ,
       [CCODCONVEN] , [CCODACTIVI] , [CCODRECURS] , [CCODTIPMON] , [CCODMODCRE] , [CTIPTASCOM] , [CTIPTASMOR] ,
       [NNUMCUOAPR] , [NNUMDIAPRI] , [NNUMDIAGRA] , [NDIAFECHFIJ] , [CCODTIPCUO] , [CTIPPERIODO] ,
       [CCODPLAZO] , [NROTASACOM] , [NTASINTCOM] , [NROTASAMOR] , [NTASINTMOR] , [NDIAATRSCRE] ,
       [DFECCULCRE] , [DFEGENCRE] , [DFECDECSRE] , [NTIPCAMDES] , [CCODCTANOR] , [CCODCTAVEN] ,
       [CLIBAMORC] , [CCODREFINA] , [CCODREESTR] , [CCODREPROG] , [CCODJUDICI] , [CCODCASTIG] ,
       [CINDUEREP] , [NMONAPRCRE] , [NMONCAPDES] , [NMONCAPPAG] , [NMONINTPRO] , [NMONINTEFC] ,
       [NMONINTPAG] , [NMONMORPRO] , [NMONMORPAG] , [NMONGASPRO] , [NMONGASPAG] , [NMONSALNOR] ,
       [NMONSALVEN] , [NCOSEFEACT]
INTO #QUERY_CRED
FROM STG_TEMP_FCUENTACREDITO_CREDITO
WHERE CESTCRECON IN ('F','H','I')
   OR ( CESTCRECON = 'G'
        AND DFECCULCRE = @V_PERIODODIA )

DROP TABLE IF EXISTS #QUERY_JOIN_STG
SELECT A.[CCODCTACRE] , A.[CCODSOLCRE] , [CESTCRECON] , [CCODTIPCRE] , [CCODPRODUC] , [CCODSUBPRO] ,
       [CCODTIPREC] , [CCODRECURS] , [CCODTIPMON] , [CCODMODCRE] , A.[CTIPTASCOM] , A.[CTIPTASMOR] ,
       [CCODCONVEN] , [CCODACTIVI] , [CCODLACLAR] , [CCODCLAURI] , [CCODOFICIN] , [CCODUSUANA] ,
       [NNUMCUOAPR] , [NNUMDIAPRI] , [NNUMDIAGRA] , [NDIAFECHFI] , [CCODTIPCUO] , [CTIPPERIODO] ,
       [CCODPLAZO] , [NNROTASACOM] , A.[NTASINTCOM] , [NNROTASAMOR] , A.[NTASINTMOR] , [NDIAATRSCRE] ,
       [DFECCULCRE] , [DFEGENCRE] , [DFECDECSRE] , [NTIPCAMDES] , [CCODCTANOR] , [CCODCTAVEN] ,
       [CLIBAMORC] , [CCODREFINA] , [CCODREESTR] , [CCODREPROG] , [CCODJUDICI] , [CCODCASTIG] ,
       [CINDUEREP] , [NMONAPRCRE] , [NMONCAPDES] , A.[NMONCAPPAG] , [NMONINTPRO] , [NMONINTEFC] ,
       [NMONINTPAG] , [NMONMORPRO] , A.[NMONMORPAG] , [NMONGASPRO] , A.[NMONGASPAG] , [NMONSALNOR] ,
       [NMONSALVEN] , [NCOSEFEACT] , [CCODCLIENTE] , [CCONDICCON] , [CCODULTPLA] , [CCODULTDES] ,
       [CCODLINCRE] , C.CTIPTASCOM [CTIPTASCOMJUD] , C.CTIPTASMOR [CTIPTASMORJUD] ,
       [NMONCAPINI] , [NMONINTINI] , [NMONMORINI] , [NMONGASINI] , [NDIAATRINI] , [NMONINTGEN] ,
       [NMONMORGEN] , [NMONGASGEN] , [NMONCAPGEN] , [NMONSALCAP] , [NMONSALINT] , [NMONSALMOR] ,
       [NMONSALGAS] , C.NMONCAPPAG [NMONCAPPAG_C] , C.NMONINTPAG [NMONINTPAG_C] ,
       C.NMONMORPAG [NMONMORPAG_C] , C.NMONGASPAG [NMONGASPAG_C] , C.NTASINTCOM [NTASINTCOM_C] ,
       C.NTASINTMOR [NTASINTMOR_C] , [CCODRECUPR] , [NMONCAPCAS] , [NMONINTCAS] , [NMONMORCAS] ,
       [NMONGASCAS] , [DFECACSCRE] , [CCODMOTCAN] , [LESTZONOFI] , D.[NCODOZONA] ,
       F.CCODPERSON [CCODJEFEREGIONAL] , G.CCODPERSON [ADMINISTRADOR] , I.[NCODPAPAPR] , I.[CCODNIVEL] ,
       I.[CCODSUBNIV] , I.[CCODCLASUB] , K.CCODCTACRE [CCODCTACRE_J]

INTO #QUERY_JOIN_STG
FROM #QUERY_CRED A
INNER JOIN STG_TEMP_FCUENTACREDITO_CLIENTE B
    ON A.CCODCTACRE = B.CCODCTACRE
LEFT JOIN STG_TEMP_FCUENTACREDITO_CREDJUDICIAL C
    ON A.CCODCTACRE = C.CCODCTACRE
LEFT JOIN STG_TEMP_FCUENTACREDITO_OFIZONAS D
    ON A.CCODOFICIN = D.CCODOFICIN
   AND D.LESTZONOFI = 1
LEFT JOIN STG_TEMP_FCUENTACREDITO_ZONAS E
    ON D.NCODZONA = E.NCODZONA
LEFT JOIN STG_TEMP_FCUENTACREDITO_JEFEREGIONAL F
    ON E.NCODZONA = F.NCODZONINS
LEFT JOIN STG_TEMP_FCUENTACREDITO_ADMINISTRADOR G
    ON A.CCODOFICIN = G.CCODOFICIN
LEFT JOIN STG_TEMP_FCUENTACREDITO_ASESORES H
    ON UPPER(A.CCODUSUANA) = UPPER(H.CCODUSUANA)
LEFT JOIN STG_TEMP_FCUENTACREDITO_SUBNIVEL I
    ON H.CCODNIVEL = I.CCODNIVEL
   AND H.CCODSUBNIV = I.CCODSUBNIV
   AND H.CCODCLASUB = I.CCODCLASUB
   AND H.NCODPAPAPR = I.NCODPAPAPR
LEFT JOIN STG_TEMP_FCUENTACREDITO_SOLICITUD J
    ON A.CCODSOLCRE = J.CCODSOLCRE
LEFT JOIN STG_TEMP_FCUENTACREDITO_CTACREKARDEX K
    ON A.CCODCTACRE = K.CCODCTACRE
DROP TABLE IF EXISTS #QUERY_TRANSF_STG
SELECT [PERIODODIA] = CAST(FORMAT(@V_PERIODODIA, 'yyyyMMdd') AS INT)
     , [CCODCTACRE] , [CCODCLIENTE] , [CCODSOLCRE] , [CESTCRECON] , [CCODTIPCRE] , [CCODPRODUC] , [CCODSUBPRO]
     , [CCODTIPREC] , [CCODRECURS] , [CCODTIPMON] , [CCODMOTCAN] , [CITIPASCOM] , [CITPASCOMJUD]
     , [CCODACTIV] , [CCONDICON] , [CCODLCLAR] , [CCODCLAURI] , [CCODIOFCIN] , [CCODMOTCAN] , [CITIPASCOMJUD]
     , [CCODJEFEREGIONAL] , [ADMINISTRADOR] , [CCODUSUANA] , [NCODPAPAPR] , [CCODNIVEL] , [CCODSUBNIV]
     , [CCODCLASUB] , [DESCLASUB] , [NNUMCUOAPR] , [NNUMDIAPRS] , [NNUMDIAGRA] , [CCODULTPLA] , [NDIAFECFI]
     , [CCODTIPCUO] , [CTIPPERIPROD] , [CCODPLAZO] , [CCODINCRE] , [NNROTASCOM] , [NTASINTCOM]
     , [NNROTAS MOR] , [NTASINTMOR] , [NDIAATRCRE] , [DFECCULCRE] , [DFECGENCRE] , [DFEC DESCRE] , [NITPCAMDES]
     , [CCODCTANOR] , [CCODCITAVEN] , [CLIBAMOCRE] , [CCODREFINA] , [CCODREESTR] , [CCODREPROG] , [CCODJUDICI]
     , [CCODCASTIG] , [CINDUNEREP]
     , [TIPCLIENTENUEVOCMACHYO] = 0
     , [TIPCLIENTENUEVO] = NULL
     , [CLIENTECARTERA] = CASE WHEN CESTCRECON IN ('F','G') THEN 1 ELSE 0 END
     , [NMONAPRCRE]  = NMONAPRCRE  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONCAPDES]  = NMONCAPDES  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONCAPPAG]  = NMONCAPPAG  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONINTPRO]  = NMONINTPRO  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONINTFEC]  = NMONINTFEC  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONINTPAG]  = NMONINTPAG  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONMORPRO]  = NMONMORPRO  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONMORPAG]  = NMONMORPAG  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONGASPRO]  = NMONGASPRO  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONGASPAG]  = NMONGASPAG  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONSALNOR]  = NMONSALNOR  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NMONSALVEN]  = NMONSALVEN  * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
     , [NCOSEFEACT]
     , [CITIPAS MORJUD]
     , [DFECCASCRE]
     , [DFECINGJUD]
     , [NDIAATRINI]
    , [NMONCAPCAS]   = NMONCAPCAS   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONCAPGEN]   = NMONCAPGEN   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONCAPINI]   = NMONCAPINI   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONCAPPAGJUD]= NMONCAPPAG_C * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONGASCAS]   = NMONGASCAS   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONGASGEN]   = NMONGASGEN   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONGASINI]   = NMONGASINI   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONGASPAGJUD]= NMONGASPAG_C * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONINTCAS]   = NMONINTCAS   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONINTGEN]   = NMONINTGEN   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONINTINI]   = NMONINTINI   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONINTPAGJUD]= NMONINTPAG_C * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONMORCAS]   = NMONMORCAS   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONMORGEN]   = NMONMORGEN   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONMORINI]   = NMONMORINI   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONMORPAGJUD]= NMONMORPAG_C * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONSALCAP]   = NMONSALCAP   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONSALGAS]   = NMONSALGAS   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONSALINT]   = NMONSALINT   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NMONSALMOR]   = NMONSALMOR   * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NTASINTCOMJUD]= NTASINTCOM_C * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
        , [NTASINTMORJUD]

, [CAR_CON_CAPITAL] = CASE WHEN CESTCRECON = 'G' AND CCODCTACRE_J IS NOT NULL AND CCODMOTCAN <> 'V'
                           THEN NMONSALCAP * CASE WHEN CCODTIPMON = '1'
                                                  THEN 1
                                                  ELSE @V_TIPOCAMBIO END
                           ELSE 0 END
, [CAR_VIG_CAPITAL] = CASE WHEN CESTCRECON = 'F' AND CCODREFINA = 'N'
                           THEN NMONSALNOR * CASE WHEN CCODTIPMON = '1'
                                                  THEN 1
                                                  ELSE @V_TIPOCAMBIO END
                           ELSE 0 END
, [CAR_VIG_INT_COMPENSATORIO] = CASE WHEN CCONDICCON = '01'
                                     THEN CASE WHEN CLIBAMOCRE = 'S'
                                               THEN (NMONINTFEC - NMONINTPAG) * CASE WHEN CCODTIPMON = '1'
                                                                                     THEN 1
                                                                                     ELSE @V_TIPOCAMBIO END
                                               ELSE (NMONINTPRO - NMONINTPAG) * CASE WHEN CCODTIPMON = '1'
                                                                                     THEN 1
                                                                                     ELSE @V_TIPOCAMBIO END
                                          END
                                     ELSE 0 END
, [CAR_VIG_INT_MORATORIO] = CASE WHEN CCONDICCON = '01'
                                 THEN (NMONMORPRO - NMONMORPAG) * CASE WHEN CCODTIPMON = '1'
                                                                       THEN 1
                                                                       ELSE @V_TIPOCAMBIO END
                                 ELSE 0 END
, [CAR_VIG_GASTOS] = CASE WHEN CCONDICCON = '01'
                          THEN (NMONGASPRO - NMONGASPAG) * CASE WHEN CCODTIPMON = '1'
                                                                THEN 1
                                                                ELSE @V_TIPOCAMBIO END
                          ELSE 0 END
, [CAR_VEN_CAPITAL] = CASE WHEN CESTCRECON = 'F'
                           THEN NMONSALVEN * CASE WHEN CCODTIPMON = '1'
                                                  THEN 1
                                                  ELSE @V_TIPOCAMBIO END
                           ELSE 0 END
, [CAR_VEN_INT_COMPENSATORIO] = CASE WHEN CCONDICCON IN ('10','12','05')
                                     THEN CASE WHEN CLIBAMOCRE = 'S'
                                               THEN (NMONINTFEC - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                               ELSE (NMONINTPRO - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                          END
                                     ELSE 0 END
, [CAR_VEN_INT_MORATORIO]     = CASE WHEN CCONDICCON IN ('10','12','05')
                                     THEN (NMONMORPRO - NMONMORPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_VEN_GASTOS]            = CASE WHEN CCONDICCON IN ('10','12','05')
                                     THEN (NMONGASPRO - NMONGASPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_REF_CAPITAL]           = CASE WHEN CESTCRECON = 'F' AND CCODREFINA = 'S'
                                     THEN NMONSALNOR * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_REF_INT_COMPENSATORIO] = CASE WHEN CCONDICCON = '04'
                                     THEN CASE WHEN CLIBAMOCRE = 'S'
                                               THEN (NMONINTFEC - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                               ELSE (NMONINTPRO - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                          END
                                     ELSE 0 END
, [CAR_REF_INT_MORATORIO]     = CASE WHEN CCONDICCON = '04'
                                     THEN (NMONMORPRO - NMONMORPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_REF_GASTOS]        = CASE WHEN CCONDICCON = '04'
                                 THEN (NMONGASPRO - NMONGASPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                 ELSE 0 END
, [CAR_REP_CAPITAL]       = CASE WHEN CCODREPROG = 'S'
                                 THEN (ISNULL(NMONSALVEN,0) + ISNULL(NMONSALNOR,0)) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                 ELSE 0 END
, [CAR_REP_INT_COMPENSATORIO] = CASE WHEN CCODREPROG = 'S'
                                     THEN CASE WHEN CLIBAMOCRE = 'S'
                                               THEN (NMONINTFEC - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                               ELSE (NMONINTPRO - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                          END
                                     ELSE 0 END
, [CAR_REP_INT_MORATORIO] = CASE WHEN CCODREPROG = 'S'
                                 THEN (NMONMORPRO - NMONMORPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                 ELSE 0 END
, [CAR_REP_GASTOS]        = CASE WHEN CCODREPROG = 'S'
                                 THEN (NMONGASPRO - NMONGASPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                 ELSE 0 END
, [CAR_AMP_CAPITAL]       = CASE WHEN CCODMOTSOL = '3'
                                 THEN (ISNULL(NMONSALVEN,0) + ISNULL(NMONSALNOR,0)) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                 ELSE 0 END
, [CAR_AMP_INT_COMPENSATORIO] = CASE WHEN CCODMOTSOL = '3'
                                     THEN CASE WHEN CLIBAMOCRE = 'S'
                                               THEN (NMONINTFEC - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                               ELSE (NMONINTPRO - NMONINTPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                          END
                                     ELSE 0 END
, [CAR_AMP_INT_MORATORIO]     = CASE WHEN CCODMOTSOL = '3'
                                     THEN (NMONMORPRO - NMONMORPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_AMP_GASTOS]            = CASE WHEN CCODMOTSOL = '3'
                                     THEN (NMONGASPRO - NMONGASPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_JUD_CAPITAL]           = CASE WHEN CESTCRECON = 'H'
                                     THEN NMONSALVEN * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_CON_GASTOS]            = CASE WHEN CESTCRECON = 'G' AND CCODCTACRE_J IS NOT NULL AND CCODMOTCAN <> 'V'
                                     THEN NMONSALGAS * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_CON_INT_COMPENSATORIO] = CASE WHEN CESTCRECON = 'G' AND CCODCTACRE_J IS NOT NULL AND CCODMOTCAN <> 'V'
                                     THEN NMONSALINT * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_CON_INT_MORATORIO]     = CASE WHEN CESTCRECON = 'G' AND CCODCTACRE_J IS NOT NULL AND CCODMOTCAN <> 'V'
                                     THEN NMONSALMOR * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                     ELSE 0 END
, [CAR_CAS_CAPITAL]          = CASE WHEN CESTCRECON = 'I'
                                    THEN NMONSALVEN * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                    ELSE 0 END
, [CAR_JUD_GASTOS]           = CASE WHEN CESTCRECON = 'H'
                                    THEN NMONSALGAS * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                    ELSE 0 END
, [CAR_JUD_INT_COMPENSATORIO]= CASE WHEN CESTCRECON = 'H'
                                    THEN NMONSALINT * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                    ELSE 0 END
, [CAR_JUD_INT_MORATORIO]    = CASE WHEN CESTCRECON = 'H'
                                    THEN NMONSALMOR * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                    ELSE 0 END
, [CAR_CAS_GASTOS]           = CASE WHEN CESTCRECON = 'I'
                                    THEN NMONSALGAS * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                    ELSE 0 END
, [CAR_CAS_INT_COMPENSATORIO]= CASE WHEN CESTCRECON = 'I'
                                    THEN NMONSALINT * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                    ELSE 0 END
, [CAR_CAS_INT_MORATORIO]    = CASE WHEN CESTCRECON = 'I'
                                    THEN NMONSALMOR * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
                                    ELSE 0 END
, [CCODRENELACORDPAGO]       = ISNULL(CCODRECURP, 'GMK')
, [MONTOSALDOCLIENTE]        = (NMONCAPDES - NMONCAPPAG) * CASE WHEN CCODTIPMON = '1' THEN 1 ELSE @V_TIPOCAMBIO END
, GETDATE()                  [FECULTACTUALIZACION]
INTO #QUERY_TRANSF_STG
FROM #QUERY_JOIN_STG

INSERT INTO STG_FCUENTACREDITO
SELECT *
FROM #QUERY_TRANSF_STG

DROP TABLE #QUERY_CRED, #QUERY_JOIN_STG, #QUERY_TRANSF_STG


-- ============================== 65_STG_FCUENTACREDITO_FLAGCLIHYO ==============================
TRUNCATE TABLE STG_FCUENTACREDITO_FLAG

DROP TABLE IF EXISTS #QUERY_STG
SELECT [CCODCLIENTE]
INTO #QUERY_STG
FROM STG_FCUENTACREDITO
GROUP BY [CCODCLIENTE]

DROP TABLE IF EXISTS #QUERY_JOIN
SELECT A.[CCODCLIENTE], MIN(C.DFECDESCRE) FECHA_MINIMA
INTO #QUERY_JOIN
FROM #QUERY_STG A
INNER JOIN STG_TEMP_FCUENTACREDITO_CLIENTE B
    ON A.CCODCLIENTE = B.CCODCLIENTE
INNER JOIN STG_TEMP_FCUENTACREDITO_CREDITO C
    ON B.CCODCTACRE = C.CCODCTACRE
GROUP BY A.[CCODCLIENTE]

DROP TABLE IF EXISTS #QUERY_FLAG
SELECT [CCODCLIENTE],
       CASE WHEN FECHA_MINIMA >= DATEADD(D,1,EOMONTH(@V_PERIODODIA,-1)) THEN 1 ELSE 0 END FLAGCLIENTENUEVOCAJAHUANCAYO
INTO #QUERY_FLAG
FROM #QUERY_JOIN

INSERT INTO STG_FCUENTACREDITO_FLAG
SELECT *
FROM #QUERY_FLAG
DROP TABLE #QUERY_STG, #QUERY_JOIN, #QUERY_FLAG

--============================= 66_STG_FCUENTACREDITO_FLAGCLI =============================
TRUNCATE TABLE STG_FCUENTACREDITO_CLIEXCLUSIV

DECLARE @PROCES INT
SELECT @PROCES = MAX(PERIODO_RCC) FROM BIA_ANALITICA.dbo.RCC_CargaLog

DROP TABLE IF EXISTS #QUERY_URIRCCSAL
SELECT *
INTO #QUERY_URIRCCSAL
FROM BIA_ANALITICA.dbo.URIRCCSAL_1
WHERE PROCES = @PROCES
  AND cal1 = 1

DROP TABLE IF EXISTS #QUERY_SALDO
SELECT [CCODSBS], [CCODEMP], SUM([NSALDOS]) [NSALDOS]
INTO #QUERY_SALDO
FROM #QUERY_URIRCCSAL
WHERE LEFT([CCTACON], 4) IN ('1411','1413','1414','1415','1416','1421','1423','1424','1425','1426')
GROUP BY [CCODSBS], [CCODEMP]

DROP TABLE IF EXISTS #QUERY_NROENT
SELECT [CCODSBS],
       SUM([NSALDOS]) AS NSALDOS,
       COUNT([CCODEMP]) AS [NNUMENT],
       MAX(CASE WHEN [CCODEMP] = '00107' THEN 1 ELSE 0 END) AS [LCLICMACHYO]
INTO #QUERY_NROENT
FROM #QUERY_SALDO
GROUP BY [CCODSBS]
DROP TABLE IF EXISTS #QUERY_CLI
SELECT A.[CCODSBS] ,
       A.[CCODEMP] ,
       A.[NSALDOS] ,
       B.[NNUMENT] ,
       B.[LCLICMACHYO] ,
       C.cCodTipDocId  AS [CTIDOCI] ,
       C.cNroDocIde    AS [CNUDOCI] ,
       C.cNroDocTri    AS [CNUDOTR] ,
       C.cCodTipPer    AS [CTIPPER]
INTO #QUERY_CLI
FROM #QUERY_SALDO A
INNER JOIN #QUERY_NROENT B
  ON A.[CCODSBS] = B.[CCODSBS]
INNER JOIN BIA_ANALITICA.dbo.CLI_RCC_DEUDOR01 C
  ON A.[CCODSBS] = C.[CCODSBS]
WHERE A.[CCODEMP] = '00107'
  AND B.[NNUMENT] = 1

DROP TABLE IF EXISTS #QUERY_UPD1
SELECT A.[CCODSBS] ,
       A.[CTIDOCI] ,
       A.[CNUDOCI] ,
       A.[CNUDOTR] ,
       A.[CTIPPER] ,
       CASE WHEN ISNULL(A.[CNUDOCI], '') <> '' THEN B.[CODCLIENTE] ELSE NULL END AS [CODCLIENTE]
INTO #QUERY_UPD1
FROM #QUERY_CLI A
LEFT JOIN BDS_BIAMACHAYO.dbo.DCLIENTE B
  ON A.[CNUDOCI] COLLATE SQL_Latin1_General_CP1_CI_AS = B.NUMERODOCUMENTOIDENTIDAD

DROP TABLE IF EXISTS #QUERY_UPD2
SELECT DISTINCT
       A.[CCODSBS] ,
       A.[CTIDOCI] ,
       A.[CNUDOCI] ,
       A.[CNUDOTR] ,
       A.[CTIPPER] ,
       CASE WHEN ISNULL(A.[CNUDOTR], '') <> '' AND A.CODCLIENTE IS NULL
            THEN B.[CODCLIENTE] ELSE A.[CODCLIENTE] END AS [CODCLIENTE]
INTO #QUERY_UPD2
FROM #QUERY_UPD1 A
LEFT JOIN BDS_BIAMACHAYO.dbo.DCLIENTE B
  ON A.[CNUDOTR] COLLATE SQL_Latin1_General_CP1_CI_AS = B.RUC

INSERT INTO STG_FCUENTACREDITO_CLIEXCLUSIV
SELECT *
FROM #QUERY_UPD2

DROP TABLE #QUERY_SALDO, #QUERY_NROENT, #QUERY_CLI, #QUERY_UPD1, #QUERY_UPD2
-- ============================= 67_STG_FCUENTACREDITO_0 =============================
TRUNCATE TABLE STG_FCUENTACREDITO_0;

INSERT INTO STG_FCUENTACREDITO_0
SELECT CAST(FORMAT(B.DFECKARDEX,'yyyyMMdd') AS INT) AS PERIODODIA,
       A.[CCODCTACRE],
       1 AS [NROCREDITOSRECUPERADOSJUD],
       GETDATE() AS [FECULTACTUALIZACION]
FROM STG_FCUENTACREDITO A
INNER JOIN SOFCMACHYO_BI_SNAP.dbo.GENMKARDEX B
        ON B.DFECKARDEX = @V_PERIODODIA
       AND A.CCODCTACRE = B.CCODCUENTA
WHERE B.CCODTIPKAR = 'KPY'
  AND B.CCODESTTRX = 'N'
  AND B.CCODKAREXT IS NULL
  AND B.CCODTIPOPE IN ('1002','1005','1033','1077','1078','1007','1014','1015')
GROUP BY B.DFECKARDEX, A.CCODCTACRE;

-- ============================= 68_STG_FCUENTACREDITO_1 =============================
DROP TABLE IF EXISTS #KJUHABOCMACTA;

SELECT DISTINCT
       B.CCODCTACRE,
       B.CCONESTADO,
       B.CCODABOCMA
INTO #KJUHABOCMACTA
FROM STG_FCUENTACREDITO A
INNER JOIN SOFCMACHYO_BI_SNAP.dbo.KJUHABOCMACTA B
        ON A.CCODCTACRE = B.CCodCtaCre
       AND B.CCONESTADO = 'A';

TRUNCATE TABLE STG_FCUENTACREDITO_1;
DROP TABLE IF EXISTS #QUERY_1
SELECT [PERIODODIA], 
       A.[CCODCTACRE], [CCODCLIENTE], [CCODSOLCRE], [CESTCRECON], [CCODTIPCRE],
       [CCODPRODUC], [CCODSUBPRO], [CCODTIPREC], [CCODRECURS], [CCODTIPMON], [CCODMODCRE],
       [CITIPASCOM], [CITPASCOMR], [CCODCONVEN], [CCODACTIV], [CCODLCLAR],
       [CCODCLAURI], A.[CCODIOFCIN], [CCODMOTCAN], [CITIPASCOMJUD], [CCODJEFEREGIONAL],
       [ADMINISTRADOR], [CCODUSUANA], [NCODPAPAPR], [CCODNIVEL], [CCODSUBNIV],
       [CCODCLASUB], [DESCLASUB], [NNUMCUOAPR], [NNUMDIAPRA], [CCODULTPLA], [NDIAFECFIJ],
       [CCODTIPCUO], [CTIPPERIODO], [CCODPLAZO], [CCODULTDES], [CCODLINCRE],
       [NNROTASCOM], [NTASINTMOR], [NNROTASMOR], [NTASINTCOM],
       [NDIAATRCRE], [DFECCULCRE], [DFECGENCRE], [DFECDESCRE], [NTIPCAMDES],
       [CCODCTANOR], [CCODCITAVEN], [CLIBAMOCRE], [CCODREFINA], [CCODREESTR],
       [CCODREPROG], [CCODJUDICI], [CCODCASTIG], [CINDUNEREP],
       [TIPCLIENTENUEVOCMACHYO], [TIPCLIENTENUEVO], [CLIENTECARTERA], [NMONAPRCRE],
       [NMONCAPDES], [NMONCAPPAG], [NMONINTPRO], [NMONINTFEC], [NMONINTPAG],
       [NMONMORPRO], [NMONMORPAG], [NMONGASPRO], [NMONGASPAG], [NMONSALNOR],
       [NMONSALVEN], [NCOSEFEACT], [CITIPASMORJUD], [DFECCASCRE], [DFECINGJUD],
       [NDIAATRINI], [NMONCAPCAS], [NMONCAPGEN], [NMONCAPINI], [NMONCAPPAGJUD],
       [NMONGASCAS], [NMONGASGEN], [NMONGASINI], [NMONGASPAGJUD], [NMONINTCAS],
       [NMONINTGEN], [NMONINTINI], [NMONINTPAGJUD], [NMONMORCAS], [NMONMORGEN],
       [NMONMORINI], [NMONMORPAGJUD], [NMONSALCAP], [NMONSALGAS], [NMONSALINT],
       [NMONSALMOR], [NTASINTCOMJUD], [NTASINTMORJUD],
       [CAR_CON_CAPITAL], [CAR_VIG_CAPITAL], [CAR_VIG_INT_COMPENSATORIO], [CAR_VIG_INT_MORATORIO],
       [CAR_VIG_GASTOS], [CAR_VEN_CAPITAL], [CAR_VEN_INT_COMPENSATORIO], [CAR_VEN_INT_MORATORIO],
       [CAR_VEN_GASTOS], [CAR_REF_CAPITAL], [CAR_REF_INT_COMPENSATORIO], [CAR_REF_INT_MORATORIO],
       [CAR_REF_GASTOS], [CAR_REP_CAPITAL], [CAR_REP_INT_COMPENSATORIO], [CAR_REP_INT_MORATORIO],
       [CAR_REP_GASTOS], [CAR_AMP_CAPITAL], [CAR_AMP_INT_COMPENSATORIO], [CAR_AMP_INT_MORATORIO],
       [CAR_AMP_GASTOS], [CAR_JUD_CAPITAL], [CAR_CON_GASTOS], [CAR_CON_INT_COMPENSATORIO],
       [CAR_CON_INT_MORATORIO], [CAR_CAS_CAPITAL], [CAR_JUD_GASTOS], [CAR_JUD_INT_COMPENSATORIO],
       [CAR_JUD_INT_MORATORIO], [CAR_CAS_GASTOS], [CAR_CAS_INT_COMPENSATORIO], [CAR_CAS_INT_MORATORIO],
       [CCODRENELACORDPAGO], [MONTOSALDOCLIENTE], B.CCODABOCMA, [CODABOGADOUJUD]
CASE
    WHEN A.CESTCRECON = 'H'
        THEN 1
    ELSE 0 END [NROCREDITOSENTRADA] ,
CASE
    WHEN A.CESTCRECON = 'H'
     AND FORMAT(A.DFECINGJUD,'yyyyMMdd') = A.PERIODODIA
        THEN 1
    ELSE 0 END [NROCREDITOSCAPTURAJUDICIAL] ,
CASE
    WHEN A.CESTCRECON = 'H'
     AND FORMAT(A.DFECINGJUD,'yyyyMMdd') = A.PERIODODIA
        THEN A.NMONCAPINI
    ELSE 0 END [MONTOCAPITALINICIOJUDICIAL] ,
CASE
    WHEN A.CESTCRECON = 'G'
     AND A.CCODJUDICI = 'S'
     AND A.CCODMOTCAN <> 'V'
     AND (A.NMONSALCAP + A.NMONSALMOR + A.NMONSALGAS > 0)
        THEN 1
    ELSE 0 END [NROCREDITOSCANCELADOSJUD] ,
GETDATE() [FECULTACTUALIZACION]
INTO #QUERY_1
FROM STG_FCUENTACREDITO A
LEFT JOIN #KJUHABOCMACTA B
  ON A.CCODCTACRE = B.CCodCtaCre
 AND B.CCONESTADO = 'A';

DROP TABLE IF EXISTS #QUERY_2
SELECT A.CCODCTACRE , A.CCODTIPMON , A.NMONSALCAP , A.NMONSALINT ,
       A.NMONSALMOR , A.NMONSALGAS
INTO #QUERY_2
FROM SOFCMACHYO_BI_SNAP.dbo.KJUMCARTRNCRE A
INNER JOIN SOFCMACHYO_BI_SNAP.dbo.KJUMPROCANCAR B
  ON A.CCODPROCAN = B.CCODPROCAN
WHERE A.lEstadoReg = 1
  AND A.cEstCreCas = 'P';
DROP TABLE IF EXISTS #QUERY
SELECT A.[PERIODODIA], A.[CCODCTACRE], [CCODCLIENTE], [CCODSOLCRE], [CESTCRECON], [CCODTIPCRE],
       [CCODPRODUC], [CCODSUBPRO], [CCODTIPREC], [CCODRECURS], A.[CCODTIPMON], [CCODMODCRE],
       [CITIPASCOM], [CITPASCOMR], [CCODCONVEN], [CCODACTIV], [CCONDICON], [CCODLCLAR],
       [CCODCLAURI], A.[CCODIOFCIN], [CCODMOTCAN], [CITIPASCOMJUD], [CCODJEFEREGIONAL],
       [ADMINISTRADOR], [CCODUSUANA], [NCODPAPAPR], [CCODNIVEL], [CCODSUBNIV],
       [CCODCLASUB], [DESCLASUB], [NNUMCUOAPR], [NNUMDIAPRA], [CCODULTPLA], [NDIAFECFIJ],
       [CCODTIPCUO], [CTIPPERIODO], [CCODPLAZO], [CCODULTDES], [CCODLINCRE],
       [NNROTASCOM], [NTASINTMOR], [NNROTASMOR], [NTASINTCOM],
       [NDIAATRCRE], [DFECCULCRE], [DFECGENCRE], [DFECDESCRE], [NTIPCAMDES],
       [CCODCTANOR], [CCODCITAVEN], [CLIBAMOCRE], [CCODREFINA], [CCODREESTR],
       [CCODREPROG], [CCODJUDICI], [CCODCASTIG], [CINDUNEREP],
       [TIPCLIENTENUEVOCMACHYO], [TIPCLIENTENUEVO], [CLIENTECARTERA], [NMONAPRCRE],
       [NMONCAPDES], [NMONCAPPAG], [NMONINTPRO], [NMONINTFEC], [NMONINTPAG],
       [NMONMORPRO], [NMONMORPAG], [NMONGASPRO], [NMONGASPAG], [NMONSALNOR],
       [NMONSALVEN], [NCOSEFEACT], [CITIPASMORJUD], [DFECCASCRE], [DFECINGJUD],
       [NDIAATRINI], [NMONCAPCAS], [NMONCAPGEN], [NMONCAPINI], [NMONCAPPAGJUD],
       [NMONGASCAS], [NMONGASGEN], [NMONGASINI], [NMONGASPAGJUD], [NMONINTCAS],
       [NMONINTGEN], [NMONINTINI], [NMONINTPAGJUD], [NMONMORCAS], [NMONMORGEN],
       [NMONMORINI], [NMONMORPAGJUD], A.[NMONSALCAP], A.[NMONSALGAS], A.[NMONSALINT],
       A.[NMONSALMOR], [NTASINTCOMJUD], [NTASINTMORJUD],
       [CAR_CON_CAPITAL], [CAR_VIG_CAPITAL], [CAR_VIG_INT_COMPENSATORIO], [CAR_VIG_INT_MORATORIO],
       [CAR_VIG_GASTOS], [CAR_VEN_CAPITAL], [CAR_VEN_INT_COMPENSATORIO], [CAR_VEN_INT_MORATORIO],
       [CAR_VEN_GASTOS], [CAR_REF_CAPITAL], [CAR_REF_INT_COMPENSATORIO], [CAR_REF_INT_MORATORIO],
       [CAR_REF_GASTOS], [CAR_REP_CAPITAL], [CAR_REP_INT_COMPENSATORIO], [CAR_REP_INT_MORATORIO],
       [CAR_REP_GASTOS], [CAR_AMP_CAPITAL], [CAR_AMP_INT_COMPENSATORIO], [CAR_AMP_INT_MORATORIO],
       [CAR_AMP_GASTOS], [CAR_JUD_CAPITAL], [CAR_CON_GASTOS], [CAR_CON_INT_COMPENSATORIO],
       [CAR_CON_INT_MORATORIO], [CAR_CAS_CAPITAL], [CAR_JUD_GASTOS], [CAR_JUD_INT_COMPENSATORIO],
       [CAR_JUD_INT_MORATORIO], [CAR_CAS_GASTOS], [CAR_CAS_INT_COMPENSATORIO], [CAR_CAS_INT_MORATORIO],
       [CCODRENELACORDPAGO], [MONTOSALDOCLIENTE], [CODABOGADOUJUD], [NROCREDITOSENTRADA]
B.[nMonSalCap] * CASE
    WHEN B.[cCodTipMon] = '1'
        THEN 1
    ELSE A.[NTIPCAMDES] END [SALDOCAPITALPAGADOJUDICIALVENTA] ,
B.[nMonSalInt] * CASE
    WHEN B.[cCodTipMon] = '1'
        THEN 1
    ELSE A.[NTIPCAMDES] END [SALDOINTERESPAGADOJUDICIALVENTA] ,
B.[nMonSalMor] * CASE
    WHEN B.[cCodTipMon] = '1'
        THEN 1
    ELSE A.[NTIPCAMDES] END [SALDOMORAPAGADOJUDICIALVENTA] ,
B.[nMonSalGas] * CASE
    WHEN B.[cCodTipMon] = '1'
        THEN 1
    ELSE A.[NTIPCAMDES] END [SALDOGASTOPAGADOJUDICIALVENTA] ,
[NROCREDITOSCAPTURAJUDICIAL], [MONTOCAPITALINICIOJUDICIAL], [NROCREDITOSCANCELADOSJUD],
[NROCREDITOSRECUPERADOSJUD], GETDATE() [FECULTACTUALIZACION]
INTO #QUERY
FROM #QUERY_1 A
LEFT JOIN #QUERY_2 B
  ON A.CCODCTACRE = B.CCODCTACRE
LEFT JOIN STG_FCUENTACREDITO_0 C
  ON A.PERIODODIA = C.PERIODODIA
 AND A.CCODCTACRE = C.CCODCTACRE

-- ==========================================================================================
-- ACTUALIZA CREDITOS REFINANCIAMIENTOS EXPRESS
DROP TABLE IF EXISTS #CUR_REFINACIADO
SELECT CCTACREFREF, 'E' AS CONDICION
INTO #CUR_REFINACIADO
FROM SOFCMACHYO_BI_SNAP.dbo.KPYDCREREFINA A
INNER JOIN SOFCMACHYO_BI_SNAP.dbo.KPYDRefConRec E
  ON A.cCodSolCre = E.cCodSolCre
 AND E.lConEstReg = 1
WHERE CCESTCREF = 'R'
  AND CCONTCAMPLA = '3'
GROUP BY CCTACREFREF
UPDATE A
SET A.CCODREFINA = 'E'
FROM #QUERY A
INNER JOIN #CUR_REFINACIADO B
  ON A.CCODCTACRE = B.CCTACREFREF

INSERT INTO STG_FCUENTACREDITO_1
SELECT *
FROM #QUERY

DROP TABLE #QUERY_1, #QUERY_2, #QUERY, #CUR_REFINACIADO

-- ACTUALIZA LOG CON EL FIN EJECUCION
UPDATE CONTROL_EJECUCION_MALLA_DS
SET FECHAHORA_FIN = GETDATE()
WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
  AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
  AND FECHA_PROCESO = CAST(GETDATE() AS DATE)

END
-------------------------------------------------------------------------------



--100--[dbo].[SP_KPY_FEVAL_STG]-------------------------------------------------
CREATE PROCEDURE [dbo].[SP_KPY_FEVAL_STG]
AS
SET NOCOUNT ON
BEGIN
    -- INSERTA LOG CON EL INICIO EJECUCION
    INSERT INTO CONTROL_EJECUCION_MALLA_DS
        (NOMBRE_JOB, NOMBRE_WORKFLOW, FECHAHORA_INICIO, FECHAHORA_FIN, FECHA_PROCESO)
    VALUES
        ('JOB_MALLA_CREDITOS', OBJECT_NAME(@@PROCID), GETDATE(), NULL, GETDATE());

    -- ============================= 51_STG_TEMP_SQL_FEVAL =============================
    TRUNCATE TABLE STG_TEMP_SQL_FEVAL;

    INSERT INTO STG_TEMP_SQL_FEVAL
    SELECT DISTINCT
           S.CODSOLICITUD,
           E.NROEVALUACION,
           SE.CODSOLICITUDESTADO,
           SS.CODSOLICITUDSITUACION,
           GETDATE() AS FECULTACTUALIZACION
    FROM BDS_BIAMACHOYO.DBO.DSOLICITUD S
    INNER JOIN BDS_BIAMACHOYO.DBO.DEVALUACION E
        ON S.PKEVALUACION = E.PKEVALUACION
       AND S.CODSOLICITUD = E.CODSOLICITUD
    INNER JOIN BDS_BIAMACHOYO.DBO.DSOLICITUDESTADO SE
        ON S.PKSOLICITUD = SE.PKSOLICITUD
    INNER JOIN BDS_BIAMACHOYO.DBO.DSOLICITUDSITUACION SS
        ON S.PKSOLICITUDSITUACION = SS.PKSOLICITUDSITUACION
    WHERE SE.PKSOLICITUDESTADO <> 0
      AND SS.PKSOLICITUDSITUACION <> 0
      AND SE.CODSOLICITUDESTADO = 'B'
      AND SS.CODSOLICITUDSITUACION = 'I';

    -- ACTUALIZA LOG CON EL FIN EJECUCION
    UPDATE CONTROL_EJECUCION_MALLA_DS
       SET FECHAHORA_FIN = GETDATE()
     WHERE NOMBRE_JOB = 'JOB_MALLA_CREDITOS'
       AND NOMBRE_WORKFLOW = OBJECT_NAME(@@PROCID)
       AND FECHA_PROCESO = CAST(GETDATE() AS DATE);
END
